{"version":3,"sources":["utils/cookies.ts","utils/requests.ts","css/components.module.css","css/profile.module.css","css/sidebar.module.css","css/menu.module.css","utils/electron.ts","css/login.module.css","css/pairings.module.css","css/crosstable.module.css","css/app.module.css","utils/prototype.ts","css/tournament.module.css","css/statusbar.module.css","css/alert.module.css","assets/settings.ts","utils/regexes.ts","tournament/Login.tsx","assets/icons/chessCom.svg","assets/icons/lichess.svg","tournament/Menu.tsx","components/Vectors.tsx","StatusBar.tsx","components/EditableField.tsx","components/Grid.tsx","components/SinglePairing.tsx","components/index.ts","tournament/InfoBar.tsx","tournament/Pairings.tsx","components/Buttons.tsx","components/CollapsableSection.tsx","tournament/Sidebar.tsx","tournament/Profile.tsx","tournament/Settings.tsx","tournament/CrossTable.tsx","tournament/PasteInput.tsx","Tournament.tsx","tournament/Alert.tsx","App.tsx","serviceWorker.js","index.js"],"names":["windowCookies","universalCookies","errorCallback","cookies","isElectron","isProd","electronCookies","get","then","arr","reduce","acc","curr","name","value","catch","e","console","log","Promise","resolve","getAll","map","cookie","options","details","Object","assign","date","Date","now","url","expirationDate","setFullYear","getFullYear","set","error","remove","reject","server","isDev","config","useProd","prodServer","resultsServer","prodResultsServer","GET","method","axios","res","data","response","status","statusText","split","pop","join","POST","headers","FORM","preventDefault","persist","form","target","constructor","parentElement","Error","Array","from","type","Number","action","setErrorCallback","c","defaults","baseURL","interceptors","request","use","a","JSON","stringify","Authorization","module","exports","window","require","process","remote","win","session","getCurrentWindow","minimize","maximize","restore","close","isMaximized","webContents","capitalise","str","slice","toUpperCase","toLowerCase","calculateHypotenuse","base","height","Math","sqrt","pow","defaultSettings","general","tournamentId","locked","primaryKey","enum","convert","defaultValue","round","active","pairingSystem","lockOnInit","competitors","totalRounds","v","toString","Infinity","nb","min","max","allow","infinity","ratingSystem","displayPoints","gamePointTotal","show","step","any","permissions","public","id","allowNewPlayers","allowSelfSubmissions","allowClashes","roundTimes","stats","nbPlayers","players","length","activePlayers","filter","p","matchesPlayed","played","gamesPlayed","histories","averageRating","sum","rating","createdAt","updatedAt","points","lossReward","drawReward","winReward","byeReward","performanceSystem","defaultUserSettings","username","location","language","licensed","regexes","space","letters","image","href","email","Crown","props","className","appStyles","logo","classNames","loading","staticLogo","src","alt","crownOutline","loadingGif","Login","state","register","errorMessage","handleSubmit","setState","sessionID","login","finally","canvas","column","styles","setLoading","this","loginSection","messageBar","onSubmit","required","placeholder","input","forgottenContainer","forgotten","submit","minLength","pattern","source","initialiseButton","loginBackground","flip","onClick","setTimeout","foreground","registerForeground","loginForeground","registerForm","loginForm","React","Component","Menu","tournamentDict","loadingOverride","lines","linesMounted","linesAdjusted","selected","hovered","setTournamentID","tournamentID","validateTournament","path","updateTournamentDict","endSession","createNewTournament","removeID","logoRef","createRef","drawLines","current","startCoords","getElementCentre","document","getElementsByClassName","dot","style","opacity","push","renderLineBetween","loadingTimeout","values","undefined","elem","rect","getBoundingClientRect","x","left","right","y","top","bottom","start","end","width","diff","abs","sign","angle","atan","PI","key","line","backgroundColor","position","transform","transition","keys","side","navData","entries","i","meta","dotDescription","descriptionSelected","description","radius","dotUnloaded","content","noSet","onMouseEnter","onMouseLeave","reverse","dotContainer","dotContainerLoaded","prevProps","prevState","addEventListener","setImmediate","clearTimeout","leftColumn","handleNavData","ref","rightColumn","Listing","updateTournamentSettings","closeListing","triggerConfirm","UserSettings","updateSetting","settings","create","roundRobin","load","back","border","refresh","useState","setHeight","generateListing","useCallback","titles","title","displayName","profileStyles","row","clickButton","listing","useRef","useEffect","sidebar","profile","listWrapper","bottomBanner","k","def","displayContent","cursor","navigator","clipboard","writeText","renderSettings","display","alignItems","justifyContent","Circle","lineHeight","borderRadius","StatusBar","maximised","minimise","statusBar","menu","favicon","draggable","exec","EditableField","setContent","alwaysEnabled","editContent","setEditContent","mustFocus","focus","inputField","divArea","decrement","button","parentNode","stepDown","increment","stepUp","handleClear","handleAny","handleInfinity","useHandleSubmit","onSubmitSuccess","firstChild","exitEditing","keyCode","select","useMouseDown","contains","myID","random","inputType","isNaN","valueOf","toLocaleString","container","additionalStyles","defaultEditContent","tzoffset","getTimezoneOffset","toISOString","toDatetimeLocal","interDate","setUTCHours","getUTCHours","getUTCMinutes","setUTCMinutes","roundUpDate","formRef","onKeyDown","additionalInputProps","clear","submitHidden","cancel","children","generateForm","editableField","defaultContent","Grid","header","body","crossTable","table","scope","th","cell","headerCell","handleHeaderClick","rowData","first","shift","rest","tr","j","UID","td","SinglePairing","valid","setValid","hover","setHover","handleChange","validate","result","resultsBridge","setResult","neutral","expand","expanded","inputClassName","onChange","centre","tooltip","tabIndex","reset","hidden","PairingDetails","lichess","individual","gameLinks","lichessLink","lichessTeamLink","chessCom","chessComLink","chessComTeamLink","site","detailsContent","board","update","inputURL","linkSubmit","dispatchEvent","Event","icons","callback","removeEventListener","InfoProps","lastRound","lastRoundOverride","uri","titleBar","gridColumn","updateTournamentStatus","closeTournament","role","aria-label","triggerError","setLastRound","toggleCrossTable","Pairings","useMemo","useReducer","resultsState","updateResults","reduceResults","W","B","pairingData","setPairings","Map","results","setResults","getPairings","playerDict","size","pairings","w","b","playerDictKey","getDisplayName","player","firstName","lastName","score","pending","every","triggerNextRound","updatePlayerDict","updateRound","validateForm","resultWhite","resultBlack","validity","setExpanded","dict","black","wDisplay","bDisplay","pairing","playerInfo","bye","setDisplayPlayer","inputResult","topBanner","pairingContainer","toggleSidebar","nextButton","canTriggerNextRound","waitButton","finishButton","generateNextButton","toggleSettings","Bottom","buttons","item","func","icon","SectionBreak","sectionContainer","sectionHeader","sectionHeaderText","CollapsableSection","internalExpanded","innerDiv","useInternalState","sectionToggle","sectionListWrapper","sectionList","ActivePlayer","requireLastName","playerLine","playerInactive","edit","editPlayer","clearPlayer","activate","activatePlayer","EditableForm","firstInput","scoreSection","onPaste","handlePaste","Sidebar","setRound","setPlayersRaw","linkedState","setLinkedState","updatePlayerState","setPlayers","sort","checkIfEnoughPlayers","updatePlayer","params","setPlayerDict","clearPlayerList","text","clipboardData","getData","trim","json","CSV","parse","delimitersToGuess","dynamicTyping","fastMode","TypeError","r","all","Forms","forms","Entry","entryProps","setEdit","setPlayer","newPlayer","List","list","section","playersSection","togglePasteInput","sidebarStyles","clearClash","SingleClash","handleInput","firstChoice","startsWith","autofill","setSelectionRange","onInput","autoComplete","Profile","playerID","setPlayerID","getNameFromPlayer","_player","refetch","updatePlayerFromProps","opp","renderEntry","clashes","setClashes","updateClashes","oppId","playerId","Name","Status","Rating","performanceRating","Playing","isPlaying","history","total","totalGames","scores","Score","gamePoints","expectedScore","toFixed","expectedGameScore","find","oppName","minPlayer","colour","resultsRow","watchProps","Settings","sectionExpando","setSection","handleToggle","index","indexOf","setIndex","message","clearRound","watchedSettings","includes","querySelectorAll","h","firstElementChild","modifyHeightValues","renderRound","roundRow","rounds","updateRounds","semiPresent","endsWith","editable","roundEntries","CrossTable","sortValue","byRounds","calcLength","prettyScore","winPercentage","ratingDifference","expectedDifference","resultsCell","match","oppRating","rows","isPlayer","isScore","playerBox","firstColumn","bodyByRounds","bodyByRobin","closeButton","bodyClassNames","PasteInput","textArea","closePasteInput","subheader","textarea","defaultColumns","eventName","event","createEvent","initEvent","Tournament","columns","setColumns","resize","setResize","boundaries","displayPlayer","setDisplayPlayerRaw","setCrossTable","pasteInput","setPasteInput","nextRound","toggleNextRound","reduceSidebar","_columns","reduceSettings","showSettings","setPlayerDictKey","setStatus","setSettings","setRounds","mouseClick","setMouseClick","handleMouseMove","percentX","innerWidth","prev","findIndex","MouseEvents","setDictTimeout","awaitTimeout","lastUpdate","setLastUpdate","reducePlayerDict","delete","hash","force","tournament","modifyPlayerDict","gridTemplateColumns","Alert","alertBox","textBox","confirm","NO","YES","App","mode","closeAlertBox","hasLoggedIn","backgroundImage","Boolean","hostname","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11b4a010.chunk.js","sourcesContent":["import universalCookies, { Cookie, CookieSetOptions } from 'universal-cookie';\nimport { isElectron, electronCookies, isProd } from './electron';\nimport { CookiesSetDetails } from 'electron';\nimport { server as url } from './requests';\nimport { StringDictionary } from '../interfaces';\n\nconst windowCookies = new universalCookies();\n\nexport default class Cookies {\n\n\tgetAll(): Promise<StringDictionary> {\n\t\tif (isElectron || isProd) {\n\t\t\treturn (electronCookies.get({}) as Promise<Electron.Cookie[]>)\n\t\t\t\t.then((arr: Cookie[]) => arr.reduce((acc: StringDictionary, curr: Cookie) => {\n\t\t\t\t\tacc[curr.name] = curr.value;\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {}))\n\t\t\t\t.catch((e: Error) => {\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t\treturn {};\n\t\t\t\t});\n\t\t} else return Promise.resolve(windowCookies.getAll() || {});\n\t}\n\n\tget(name: string): Promise<string> {\n\t\tif (isElectron || isProd) {\n\t\t\treturn (electronCookies.get({ name }) as Promise<Electron.Cookie[]>)\n\t\t\t\t.then((arr: Cookie[]) => arr.map(cookie => cookie.value))\n\t\t\t\t.then((arr: Cookie[]) => arr[0] || '')\n\t\t\t\t.catch((e: Error) => {\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t\treturn '';\n\t\t\t\t});\n\t\t} else return Promise.resolve(windowCookies.get(name) || '');\n\t}\n\n\tset(name: string, value: any, options: CookieSetOptions = {}): Promise<void> {\n\t\tlet details = Object.assign({}, options) as CookiesSetDetails;\n\t\tif (isElectron || isProd) {\n\t\t\tlet date = new Date(Date.now());\t\n\t\t\tdetails = Object.assign(details, {\n\t\t\t\tname,\n\t\t\t\tvalue,\n\t\t\t\turl,\n\t\t\t\texpirationDate: date.setFullYear(date.getFullYear() + 1)\n\t\t\t});\n\t\t\treturn electronCookies.set(details)\n\t\t\t\t.then(() => electronCookies.get({}))\n\t\t\t\t.then((arr: Cookie[]) => arr.map(cookie => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: cookie.name,\n\t\t\t\t\t\tvalue: cookie.value\n\t\t\t\t\t};\n\t\t\t\t}))\n\t\t\t\t.catch(console.error);\n\t\t} else {\n\t\t\treturn Promise.resolve(windowCookies.set(name, value, options));\n\t\t}\n\t}\n\n\tremove(name: string, options: CookieSetOptions = {}): Promise<void> {\n\t\tif (isElectron || isProd) {\n\t\t\treturn electronCookies.remove(url, name);\t\t\t\n\t\t} else {\n\t\t\tif (windowCookies.get(name)) {\n\t\t\t\treturn Promise.resolve(windowCookies.remove(name, options));\n\t\t\t} else {\n\t\t\t\treturn Promise.reject('Couldn\\'t remove cookie');\n\t\t\t}\n\t\t}\n\t}\n}","import axios, { AxiosRequestConfig, AxiosResponse, AxiosError } from 'axios';\nimport config from '../config.json';\nimport { isDev } from './electron';\nimport { AnyDictionary } from '../interfaces.js';\nimport Cookies from './cookies';\n\nlet errorCallback: (message: string) => void = () => {};\n\nexport let cookies = new Cookies();\n\nexport const server = !isDev || config.useProd ? config.prodServer : config.server;\nexport const resultsServer = !isDev || config.useProd ? config.prodResultsServer : config.resultsServer;\n\naxios.defaults.baseURL = server;\n\n// alter all requests to use cookies only from AsyncStorageCookieStore\naxios.interceptors.request.use(async config => {\n\t\n\t// the device will have it's own cookie store, and attempt to\n\t// send cookies itself.\n\t// this has been documented to be unreliable, so we wipe these cookies\n\t// and implement the cookie store ourselves.\n\n\t//await AsyncStorage.clear()\n\treturn {\n\t\t...config,\n\t\theaders: {\n\t\t\t...config.headers,\n\t\t\tAuthorization: JSON.stringify(await cookies.getAll())\n\t\t}\n\t};\n\n});\n\nexport function GET(options: AxiosRequestConfig): Promise<any> {\n\toptions = Object.assign(options, {\n\t\tmethod: 'GET'\n\t});\n\treturn axios(options)\n\t\t.then((res: AxiosResponse<any>) => res.data)\n\t\t.catch((e: AxiosError) => {\n\t\t\tconsole.error(e);\n\t\t\tif (e.response) errorCallback([e.response.status, e.response.statusText, ':', '/' + e.response.config.url.split('/').pop()].join(' '));\n\t\t\tthrow e;\n\t\t});\n}\n\nexport function POST(options: AxiosRequestConfig): Promise<any> {\n\toptions = Object.assign(options, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t}\n\t});\n\treturn axios(options)\n\t\t.then((res: AxiosResponse<any>) => res.data)\n\t\t.catch((e) => {\n\t\t\tif (e && e.response && e.response.data) errorCallback(e.response.data);\n\t\t\tthrow e;\n\t\t});\n}\n\nexport function FORM(e: React.FormEvent<HTMLFormElement>): Promise<any> {\n\te.preventDefault();\n\te.persist();\n    let form = e.target as HTMLFormElement;\n    while (form.constructor.name !== 'HTMLFormElement' && form.parentElement) {\n        form = form.parentElement as HTMLFormElement;\n    }\n    if (form.constructor.name !== 'HTMLFormElement') throw new Error('Couldn\\'t find valid form');\n    let inputs = Array.from(form) as HTMLInputElement[];\n\tlet data = inputs.reduce((acc, curr) => {\n\t\tif (!curr.name) return acc;\n\t\tif (curr.name === 'submit') return acc;\n\t\tif (curr.type === 'number') acc[curr.name] = Number(curr.value);\n\t\telse acc[curr.name] = curr.value;\n\t\treturn acc;\n\t}, {} as AnyDictionary);\n\tlet options = {\n\t\tdata,\n\t\turl: form.action\n\t} as AxiosRequestConfig;\n\treturn POST(options);\n}\n\nexport function setErrorCallback(c: (message: string) => void) {\n\terrorCallback = c;\n}\n\n/*\n\nclass Requests {\n\n\tGET(options: AxiosRequestConfig): Promise<any> {\n\t\toptions = Object.assign(options, {\n\t\t\tmethod: 'GET'\n\t\t});\n\t\treturn axios(options)\n\t\t\t.then((res: AxiosResponse<any>) => res.data);\n\t}\n\n\tPOST(options: AxiosRequestConfig): Promise<any> {\n\t\toptions = Object.assign(options, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t});\n\t\treturn axios(options)\n\t\t\t.then((res: AxiosResponse<any>) => res.data);\n\t}\n\n\tFORM(e: React.FormEvent<HTMLFormElement>): Promise<any> {\n\t\te.preventDefault();\n\t\tlet form = e.target as HTMLFormElement;\n\t\tlet inputs = Array.from(form) as HTMLInputElement[];\n\t\tlet data = inputs.reduce((acc, curr) => {\n\t\t\tif (!curr.name) return acc;\n\t\t\tif (curr.name === 'submit') return acc;\n\t\t\tacc[curr.name] = curr.value;\n\t\t\treturn acc;\n\t\t}, {} as AnyDictionary);\n\t\tlet options = {\n\t\t\tdata,\n\t\t\turl: form.action\n\t\t} as AxiosRequestConfig;\n\t\treturn this.POST(options);\n\t}\n\n}\n\nlet r = new Requests();\nexport const GET = r.GET;\nexport const POST = r.POST;\nexport const FORM = r.FORM;\n\n*/","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"components_container__1CCB7\",\"editableField\":\"components_editableField__2fs18\",\"form\":\"components_form__1RjIP\",\"input\":\"components_input__I_Vv7\",\"submitHidden\":\"components_submitHidden__PvrYt\",\"any\":\"components_any__3pCEP\",\"submit\":\"components_submit__1SFYQ\",\"increment\":\"components_increment__19rbD\",\"cancel\":\"components_cancel__1_2ia\",\"infinity\":\"components_infinity__1rF3u\",\"resultsBridge\":\"components_resultsBridge__9qnay\",\"details\":\"components_details__1FuFV\",\"resolve\":\"components_resolve__1X_KN\",\"reject\":\"components_reject__3ymMO\",\"neutral\":\"components_neutral__392Xn\",\"flash-green\":\"components_flash-green__2Wczz\",\"setResult\":\"components_setResult__ToBDd\",\"inputURL\":\"components_inputURL__3WU4U\",\"centre\":\"components_centre__2BcEl\",\"tooltip\":\"components_tooltip__1IKxP\",\"detailsContent\":\"components_detailsContent__2yLbz\",\"row\":\"components_row__1jpeO\",\"linkSubmit\":\"components_linkSubmit__TNip6\",\"sectionContainer\":\"components_sectionContainer__1tg1I\",\"sectionHeader\":\"components_sectionHeader__-UWwY\",\"sectionHeaderText\":\"components_sectionHeaderText__1OTig\",\"sectionListWrapper\":\"components_sectionListWrapper__a03uW\",\"sectionList\":\"components_sectionList__117sb\",\"expanded\":\"components_expanded__3qOxR\",\"sectionToggle\":\"components_sectionToggle__2z6Il\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__1V8qL\",\"slide-in-from-right\":\"profile_slide-in-from-right__2jdIT\",\"bottomBanner\":\"profile_bottomBanner__b2MfX\",\"roundRow\":\"profile_roundRow__3OA2r\",\"row\":\"profile_row__aUfgI\",\"resultsRow\":\"profile_resultsRow__4zleX\",\"editable\":\"profile_editable__24Eas\",\"editableField\":\"profile_editableField__2onPe\",\"input\":\"profile_input__2tu2X\",\"sectionContainer\":\"profile_sectionContainer__Tm0AF\",\"sectionHeader\":\"profile_sectionHeader__UZUfT\",\"sectionHeaderText\":\"profile_sectionHeaderText__XE7UN\",\"sectionListWrapper\":\"profile_sectionListWrapper__1K1-l\",\"sectionList\":\"profile_sectionList__3bJ8Z\",\"expanded\":\"profile_expanded__3QtaO\",\"sectionToggle\":\"profile_sectionToggle__2qBPk\",\"semiPresent\":\"profile_semiPresent__1APEU\",\"playerLine\":\"profile_playerLine__IVVus\",\"cancel\":\"profile_cancel__AKFEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__3Z89I\",\"slide-in-from-left\":\"sidebar_slide-in-from-left__3kaGk\",\"playersSection\":\"sidebar_playersSection__3_kKf\",\"scoreSection\":\"sidebar_scoreSection__2Qh1c\",\"addPlayerForm\":\"sidebar_addPlayerForm__1BL-S\",\"input\":\"sidebar_input__3Y8ld\",\"submit\":\"sidebar_submit__22Uk4\",\"edit\":\"sidebar_edit__zaTlg\",\"cancel\":\"sidebar_cancel__1DhJL\",\"activate\":\"sidebar_activate__2-tDL\",\"playerInfo\":\"sidebar_playerInfo__12dBq\",\"playerLine\":\"sidebar_playerLine__1cnKs\",\"scoreSeparator\":\"sidebar_scoreSeparator__1zbAQ\",\"sectionHeader\":\"sidebar_sectionHeader__2UjkE\",\"playerInactive\":\"sidebar_playerInactive__1Y9Kw\",\"topBanner\":\"sidebar_topBanner__3fw_E\",\"bottomBanner\":\"sidebar_bottomBanner__ZFfBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftColumn\":\"menu_leftColumn__13Ey0\",\"rightColumn\":\"menu_rightColumn__2D55A\",\"line\":\"menu_line__2oByf\",\"row\":\"menu_row__q-PZk\",\"listWrapper\":\"menu_listWrapper__1_77c\",\"clickButton\":\"menu_clickButton__1F_HI\",\"dotContainer\":\"menu_dotContainer__ze3l6\",\"dotDescription\":\"menu_dotDescription__19QYi\",\"dot\":\"menu_dot__3Dq9b\",\"dotContainerLoaded\":\"menu_dotContainerLoaded__3YmWC\",\"descriptionSelected\":\"menu_descriptionSelected__2aKX-\",\"close\":\"menu_close__3eKoV\",\"sidebar\":\"menu_sidebar__l1_lg\",\"profile\":\"menu_profile__3-O4-\",\"bottomBanner\":\"menu_bottomBanner__3Od_g\",\"slide-in-from-right\":\"menu_slide-in-from-right__2syBl\",\"logo\":\"menu_logo__3MwZ9\",\"float-down\":\"menu_float-down__1GhiB\",\"dotUnloaded\":\"menu_dotUnloaded__2DT-h\",\"expand\":\"menu_expand__1E6M-\",\"briefly-expand\":\"menu_briefly-expand__ex-pm\"};","export const isElectron = typeof window.require === 'function'; //detect !in-browser\nexport const isDev = process.env.NODE_ENV === 'development'; //detects a react dev build\nexport const isProd = typeof window.require === 'function' && !window.require('electron-is-dev'); //detect an electron prod build\n\n// export const renderedArguments = !window.process.argv.includes('--production');\n/**\n * \t\t\t\t|\t\tisDev\t\t\t\t\t\t|\t\t\t\t\t!isDev\t\n * _________________________________________________________________________________________________\n * !isElectron\t|\t\tyarn start (in-browser)\t\t|\t\tyarn deploy (gh-pages build)\n *  isElectron\t|\t\tyarn gui (linked electron)\t|\t\tyarn gui-prod (headless electron build)\n * \n * isProd: yarn exe (OS-specific executable)\n */\n\nexport const remote = isElectron ? window.require('electron').remote : null;\nexport const session = isElectron ? remote.session : null;\n\nexport const win = (isElectron ? remote.getCurrentWindow() : {\n\tminimize: () => {},\n\tmaximize: () => {},\n\trestore: () => {},\n\tclose: () => {},\n\tisMaximized: () => true\t\t\n}) as any;\n\nexport const electronCookies = isElectron ? win.webContents.session.cookies : null;\n\nconsole.log('isDev', isDev);\nconsole.log('isElectron', isElectron);\nconsole.log('isProd', isProd);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"login_column__14Kgt\",\"initialiseButton\":\"login_initialiseButton__3CXrs\",\"forgottenContainer\":\"login_forgottenContainer__2yR4y\",\"forgotten\":\"login_forgotten__3VFQz\",\"form\":\"login_form__1ieaR\",\"input\":\"login_input__3ze1R\",\"submit\":\"login_submit__2qxJT\",\"loginSection\":\"login_loginSection__1BBMn\",\"loginBackground\":\"login_loginBackground__y9UZ2\",\"foreground\":\"login_foreground__2Cqo8\",\"loginForeground\":\"login_loginForeground__lnGgY\",\"registerForeground\":\"login_registerForeground__3D6jX\",\"flip\":\"login_flip__2KG2q\",\"messageBar\":\"login_messageBar__6TM4O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pairings\":\"pairings_pairings__2Z6gd\",\"pairingContainer\":\"pairings_pairingContainer__2snrJ\",\"pairing\":\"pairings_pairing__jh3eo\",\"fade-in\":\"pairings_fade-in__3Iydy\",\"topBanner\":\"pairings_topBanner__duKX4\",\"playerInfo\":\"pairings_playerInfo__2BGOf\",\"statusBar\":\"pairings_statusBar__Y2g9v\",\"slide-in-from-bottom\":\"pairings_slide-in-from-bottom__1tu-V\",\"waitButton\":\"pairings_waitButton__3CIsd\",\"finishButton\":\"pairings_finishButton__elOep\",\"nextButton\":\"pairings_nextButton__1fjha\",\"rotate\":\"pairings_rotate__rWtYA\",\"inputResult\":\"pairings_inputResult__8kpK5\",\"bye\":\"pairings_bye__2Q8Qe\",\"submit\":\"pairings_submit__258vX\",\"errorMessage\":\"pairings_errorMessage__1qM9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"crossTable\":\"crosstable_crossTable__3tCtZ\",\"titles\":\"crosstable_titles__2lOQ_\",\"table\":\"crosstable_table__FafeF\",\"td\":\"crosstable_td__1hxGz\",\"th\":\"crosstable_th__Gp7TR\",\"cell\":\"crosstable_cell__1NDzK\",\"playerBox\":\"crosstable_playerBox__ImPf9\",\"resultsCell\":\"crosstable_resultsCell__3g4mX\",\"headerCell\":\"crosstable_headerCell__2zS_u\",\"firstColumn\":\"crosstable_firstColumn__2m7R_\",\"closeButton\":\"crosstable_closeButton__2pu_0\",\"container\":\"crosstable_container__3ZuI8\",\"textarea\":\"crosstable_textarea__3lS39\",\"form\":\"crosstable_form__2y5OV\",\"submit\":\"crosstable_submit__3U_pw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"app_canvas__1MLEL\",\"column\":\"app_column__2WVoo\",\"logo\":\"app_logo__b6W_t\",\"loadingLine\":\"app_loadingLine__1xeSs\",\"staticLogo\":\"app_staticLogo__1-Wsi\",\"loadingGif\":\"app_loadingGif__2PnUi\",\"crownOutline\":\"app_crownOutline__2IPSS\",\"fade-in\":\"app_fade-in__3kaKs\",\"grow-right\":\"app_grow-right__1NUcX\"};","export function capitalise(str: string): string {\n\tif (!str) return str;\n\treturn str.slice(0, 1).toUpperCase() + str.slice(1).toLowerCase();\n}\n\nexport function delay(ms: number): Promise<void> {\n\treturn new Promise((res) => {\n\t\tsetTimeout(res, ms);\n\t});\n}\n\nexport function calculateHypotenuse(base: number, height: number): number {\n\treturn Math.sqrt(Math.pow(base, 2) + Math.pow(height, 2));\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tournament\":\"tournament_tournament__1ikhA\",\"titleBar\":\"tournament_titleBar__1Kvez\",\"slide-in-from-top\":\"tournament_slide-in-from-top__22vmU\",\"row\":\"tournament_row__3K-Kn\",\"header\":\"tournament_header__hB1Cf\",\"container\":\"tournament_container__DVAFe\",\"form\":\"tournament_form__1Pn88\",\"input\":\"tournament_input__xb1Th\",\"editableField\":\"tournament_editableField__1rO3U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBar\":\"statusbar_statusBar__3f7HO\",\"favicon\":\"statusbar_favicon__1Unmh\",\"menu\":\"statusbar_menu__3nFvT\",\"title\":\"statusbar_title__3ClL5\",\"exec\":\"statusbar_exec__2fXB2\",\"close\":\"statusbar_close__3ssky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertBox\":\"alert_alertBox__-kpK4\",\"error\":\"alert_error__wKYnQ\",\"textBox\":\"alert_textBox__ATagI\",\"response\":\"alert_response__1RX0q\",\"NO\":\"alert_NO__2Bl9f\",\"YES\":\"alert_YES__pKi26\"};","import { capitalise } from '../utils/prototype';\nimport { TournamentStatus, Player, TournamentSettings } from '../interfaces';\nimport { resultsServer } from '../utils/requests';\n\nexport interface TournamentSetting {\n\tname?: string\n\tenum?: string[]\n\tconvert?: (v: any) => string\n\tvalue?: (status: any, players: Player[]) => any\n\ttype?: string\n\tlocked?: boolean,\n\tlockOnInit?: boolean\n\tshow?: {\n        [key in keyof TournamentSettings]?: any\n    }\n\tallow?: {\n\t\tinfinity?: boolean\n\t\tany?: boolean\n\t\tsubmit?: boolean\n        increment?: boolean\n        clear?: boolean\n\t}\n\tnb?: {\n\t\tmin?: number\n\t\tmax?: number\n\t\tstep?: number\n\t}\n\n\tprimaryKey?: boolean\n\tdefaultValue?: any\n}\n\nexport const defaultSettings = {\n\tgeneral: {\n\t\ttournamentId: {\n\t\t\tname: 'Unique ID',\n\t\t\ttype: 'string',\n\t\t\tlocked: true,\n\t\t\tprimaryKey: true\n\t\t},\n\t\tstatus: {\n\t\t\tname: 'Status',\n\t\t\tenum: ['uninitialised', 'active', 'finished'],\n\t\t\tconvert: capitalise,\n\t\t\tdefaultValue: 'uninitialised',\n\t\t\tvalue: (status: TournamentStatus): string => {\n\t\t\t\tif (!status.round) return 'uninitialised';\n\t\t\t\tif (status.active === false) return 'finished';\n\t\t\t\telse return 'active';\n\t\t\t}\n\t\t},\n\t\tpairingSystem: {\n\t\t\tname: 'Pairing system',\n\t\t\tenum: ['swiss'],\n\t\t\tconvert: capitalise,\n\t\t\tlockOnInit: true,\n\t\t\tdefaultValue: 'swiss'\n\t\t},\n\t\tcompetitors: {\n\t\t\tname: 'Tournament type',\n\t\t\tenum: ['individual', 'team'],\n\t\t\tconvert: capitalise,\n\t\t\tlockOnInit: true,\n\t\t\tdefaultValue: 'individual'\n\t\t},\n\t\ttotalRounds: {\n\t\t\tname: 'Total rounds',\n\t\t\tconvert: (v: number | 'Infinity') => v === 'Infinity' ? '∞' : v.toString(),\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: Infinity,\n\t\t\tnb: {\n\t\t\t\tmin: 1,\n\t\t\t\tmax: 100\n\t\t\t},\n\t\t\tallow: {\n\t\t\t\tinfinity: true\n\t\t\t}\n\t\t},\n\t\tratingSystem: {\n\t\t\tname: 'Rating system',\n\t\t\tenum: ['ECF', 'FIDE', 'USCF'],\n\t\t\tlockOnInit: true,\n\t\t\tdefaultValue: 'FIDE'\n\t\t},\n\t\tdisplayPoints: {\n\t\t\tname: 'Show',\n\t\t\tconvert: (v: 'match' | 'game') => capitalise(v) + ' Points',\n\t\t\tenum: ['match', 'game'],\n\t\t\tdefaultValue: 'match'\n\t\t},\n\t\tgamePointTotal: {\n\t\t\tname: 'Sum results to',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 1,\n\t\t\tshow: {\n                displayPoints: 'game'\n            },\n\t\t\tlockOnInit: true,\n\t\t\tnb: {\n\t\t\t\tstep: 1,\n\t\t\t\tmin: 1\n\t\t\t},\n\t\t\tallow: {\n\t\t\t\tany: true\n\t\t\t}\n\t\t}\n\t},\n\tpermissions: {\n        public: {\n            name: 'Public',\n            convert: (v: boolean) => capitalise(v.toString()),\n            lockOnInit: false,\n            type: 'boolean',\n            defaultValue: false\n        },\n\t\turl: {\n\t\t\tname: 'URL',\n\t\t\ttype: 'link',\n            defaultValue: '',\n\t\t\tshow: {\n                public: true\n            },\n\t\t\tvalue: (status: TournamentStatus): string => `${resultsServer}tournament/${status.id}`\n\t\t},\n\t\tallowNewPlayers: {\n\t\t\tname: 'Mid-way joining?',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\tlockOnInit: false,\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: true\n\t\t},\n\t\tallowSelfSubmissions: {\n\t\t\tname: 'User submissions?',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\tlockOnInit: false,\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: true\n\t\t},\n\t\tallowClashes: {\n\t\t\tname: 'Forbid certain pairings?',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\tlockOnInit: false,\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: true\n        },\n\t\troundTimes: {\n\t\t\tname: 'Round times?',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: false,\n\t\t\tlocked: false // TODO: implement on backend\n\t\t}\n\t},\n\tstats: {\n\t\tnbPlayers: {\n\t\t\tname: 'Number of players',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => players.length,\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\tactivePlayers: {\n\t\t\tname: 'Active players',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => players.filter(p => p.active).length,\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\tmatchesPlayed: {\n\t\t\tname: 'Matches played',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => players.reduce((acc, curr) => acc += curr.played, 0) / 2,\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\tgamesPlayed: {\n\t\t\tname: 'Games played',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => players.reduce((acc, curr) => acc += curr.histories.reduce((acc, curr) => curr ? acc += curr.played : acc, 0), 0) / 2,\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\taverageRating: {\n\t\t\tname: 'Average rating',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 1200,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => {\n\t\t\t\tlet sum = players.reduce((acc, curr) => acc += curr.rating, 0);\n\t\t\t\treturn Math.round(sum / players.length);\n\t\t\t},\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\tcreatedAt: {\n\t\t\tname: 'Created at',\n\t\t\tconvert: (v: string) => new Date(v).toString().slice(0, 24),\n\t\t\tlocked: true\n\t\t},\n\t\tupdatedAt: {\n\t\t\tname: 'Last updated',\n\t\t\tconvert: (v: string) => new Date(v).toString().slice(0, 24),\n\t\t\tlocked: true\n\t\t}\n\t},\n\tpoints: {\n\t\tlossReward: {\n\t\t\tname: 'Points on loss',\n\t\t\tlockOnInit: true,\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tnb: {\n\t\t\t\tstep: 0.1\n\t\t\t}\n\t\t},\n\t\tdrawReward: {\n\t\t\tname: 'Points on draw',\n\t\t\tlockOnInit: true,\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0.5,\n\t\t\tnb: {\n\t\t\t\tstep: 0.1\n\t\t\t}\n\t\t},\n\t\twinReward: {\n\t\t\tname: 'Points on win',\n\t\t\tlockOnInit: true,\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 1,\n\t\t\tnb: {\n\t\t\t\tstep: 0.1\n\t\t\t}\n\t\t},\n\t\tbyeReward: {\n\t\t\tname: 'Bye reward',\n\t\t\tenum: ['win', 'draw', 'loss'],\n\t\t\tlockOnInit: true,\n\t\t\tdefaultValue: 'win'\n\t\t},\n\t\tperformanceSystem: {\n\t\t\tname: 'Performance rating',\n\t\t\tenum: ['ELO', 'FIDE'],\n\t\t\tlockOnInit: false,\n\t\t\tdefaultValue: 'ELO'\n\t\t}\n\t}\n} as {\n\t[key: string]: {\n\t\t[key: string]: TournamentSetting\n\t}\n};\n\nexport const defaultUserSettings = {\n\tusername: {\n\t\tname: 'Username',\n\t\ttype: 'string',\n\t\tlocked: true,\n\t\tprimaryKey: true,\n\t},\n\tlocation: {\n\t\tname: 'Location',\n\t\ttype: 'string',\n\t\tlocked: true,\n\t\tdefaultValue: 'Oxford, UK'\n\t},\n\tlanguage: {\n\t\tname: 'Language',\n\t\ttype: 'string',\n\t\tdefaultValue: 'English (UK)',\n\t\tlocked: true\n    },\n    licensed: {\n        name: 'License',\n        type: 'number',\n        defaultValue: 0,\n        locked: true,\n        convert: (v: number) => {\n            if (v === 1) return 'Trial';\n            if (v === 2) return 'Full';\n            if (v === 3) return 'Admin';\n            return 'Free';\n        }\n    },\n\tcreatedAt: {\n\t\tname: 'Created at',\n\t\tconvert: (v: string) => new Date(v).toString().slice(0, 24),\n\t\tlocked: true,\n\t\tdefaultValue: Date.now()\n\t},\n\tupdatedAt: {\n\t\tname: 'Last updated',\n\t\tconvert: (v: string) => new Date(v).toString().slice(0, 24),\n\t\tlocked: true,\n\t\tdefaultValue: Date.now()\n\t}\n} as {\n\t[key: string]: {\n\t\tname?: string,\n\t\tenum?: string[],\n\t\tconvert?: (v: any) => string,\n\t\ttype?: string\n\t\tlocked?: boolean\n\n\t\tprimaryKey?: boolean\n\t\tdefaultValue?: any\n\t}\n};","const regexes = {\n\tspace: /\\s+/g,\n\tletters: /\\w+/g,\n\timage: /<img\\s+.*?src=[\"'](.*).*?\">/,\n\tdate: /^[0-9]{4}-[0-9]{1,2}-[0-9]{1,2}_/,\n\thref: /^(https?:)?\\/\\//,\n\t/* eslint-disable-next-line no-control-regex */\n\temail: /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\n};\n\nexport default regexes;","import React, { ReactElement } from 'react';\nimport url from 'url';\nimport { server, FORM } from '../utils/requests';\nimport regexes from '../utils/regexes';\n\nimport appStyles from '../css/app.module.css';\nimport styles from '../css/login.module.css';\nimport { StringDictionary } from '../interfaces';\nimport { IoIosArrowForward, IoIosArrowBack } from 'react-icons/io';\n\n/*\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport iconFont from 'react-native-vector-icons/Fonts/FontAwesome.ttf';\nconst iconFontStyles = `@font-face {\n  src: url(${iconFont});\n  font-family: FontAwesome;\n}`;*/\n\nexport function Crown(props: {\n\tloading: boolean,\n\tsetLoading: (loading: boolean) => void\n\tclassNames?: StringDictionary\n}) {\n\n\treturn (\n\t\t<div\n\t\t\tclassName={[appStyles.logo, props.classNames?.logo].join(' ')}\n\t\t>\n\t\t\t{!props.loading ? \n\t\t\t\t<img className={appStyles.staticLogo} src={process.env.PUBLIC_URL + '/images/favicon.png'} alt='swiss-logo.png'/> :\n\t\t\t\t<>\n\t\t\t\t\t<img className={appStyles.staticLogo} src={process.env.PUBLIC_URL + '/images/dubrovny.png'} alt='swiss-logo.png'/>\n\t\t\t\t\t<img className={appStyles.crownOutline} src={process.env.PUBLIC_URL + '/images/crown-outline.png'} alt='outline-gif'/>\n\t\t\t\t\t<img className={appStyles.loadingGif} src={process.env.PUBLIC_URL + '/images/loading-crown.gif'} alt='loading-gif'/>\n\t\t\t\t</>\n\t\t\t} {/*\n\t\t\t<div>\n\t\t\t\t<hr className={appStyles.loadingLine}/>\n\t\t\t\t<hr className={appStyles.loadingLine}/>\n\t\t\t\t<hr className={appStyles.loadingLine}/>\n\t\t\t</div>*/}\n\t\t</div>\n\t);\n}\n\nexport default class Login extends React.Component<{\n\tlogin: (sessionID: string) => void\n}, {\n\tloading: boolean\n\tregister: boolean\n\terrorMessage: string\n}> {\n\n\tpublic state = {\n\t\tloading: false,\n\t\tregister: false,\n\t\terrorMessage: ''\n\t}\n\n\tprivate handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n\t\tthis.setState({loading: true});\n\t\tFORM(e)\n\t\t\t.then((sessionID: string) => this.props.login(sessionID))\n\t\t\t.catch((e) => {\n\t\t\t\tif (e && e.response && e.response.data) this.setState({\n\t\t\t\t\terrorMessage: e.response.data\n\t\t\t\t});\n\t\t\t\tconsole.error(e);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tthis.setState({loading: false});\n\t\t\t});\n\t}\n\n\tprivate get loginForm(): ReactElement {\n\t\treturn (\n\t\t\t<form\n\t\t\t\tclassName={styles.form}\n\t\t\t\tmethod='POST'\n\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\taction={url.resolve(server, 'login')}\n\t\t\t>\n\t\t\t\t<input type='text' name='username' required placeholder='username' className={['input', styles.input].join(' ')}></input>\n\t\t\t\t<input type='password' name='password' required placeholder='password' className={['input', styles.input].join(' ')}></input>\n\t\t\t\t<div className={styles.forgottenContainer}>\n\t\t\t\t\t<div className={['input', styles.forgotten].join(' ')}>username reminder</div>\n\t\t\t\t\t<div className={['input', styles.forgotten].join(' ')}>password reset</div>\n\t\t\t\t</div>\n\t\t\t\t<input type='submit' value='LOGIN' className={['input', styles.submit].join(' ')}></input>\n\t\t\t</form>\n\t\t);\n\t}\n\n\tprivate get registerForm(): ReactElement {\n\t\treturn (\n\t\t\t<form\n\t\t\t\tclassName={styles.form}\n\t\t\t\tmethod='POST'\n\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\taction={url.resolve(server, 'register')}\n\t\t\t>\n\t\t\t\t<input type='text' name='username' required placeholder='username' className={['input', styles.input].join(' ')}></input>\n\t\t\t\t<input type='password' name='password' required placeholder='password' minLength={8} className={['input', styles.input].join(' ')}></input>\n\t\t\t\t<input type='email' name='email' required placeholder='email' className={['input', styles.input].join(' ')} pattern={regexes.email.source}></input>\n\t\t\t\t<input type='submit' value='REGISTER' className={['input', styles.submit].join(' ')}></input>\n\t\t\t</form>\n\t\t);\n\t}\n\n\tprivate get loginSection(): ReactElement {\n\t\treturn (\n\t\t\t<div className={[styles.loginSection, styles.initialiseButton].join(' ')}>\n\t\t\t\t<div className={styles.loginBackground}>\n\t\t\t\t\t<div className={[styles.flip, 'button'].join(' ')} onClick={() => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tloading: true,\n\t\t\t\t\t\t\tregister: false,\n\t\t\t\t\t\t\terrorMessage: ''\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetTimeout(() => this.setState({ loading: false }), 500);\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<div>LOGIN</div>\n\t\t\t\t\t\t<div>\n                            <IoIosArrowBack />\n                        </div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div></div>\n\t\t\t\t\t<div className={[styles.flip, 'button'].join(' ')} onClick={() => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tloading: true,\n\t\t\t\t\t\t\tregister: true,\n\t\t\t\t\t\t\terrorMessage: ''\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetTimeout(() => this.setState({ loading: false }), 500);\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<div>REGISTER</div>\n\t\t\t\t\t\t<div>\n                            <IoIosArrowForward />\n                        </div>\n\t\t\t\t\t</div>\n\t\t\t\t\tBackground\n\t\t\t\t</div>\n\t\t\t\t<div className={[styles.foreground, this.state.register ? styles.registerForeground : styles.loginForeground].join(' ')}>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.register ? this.registerForm : this.loginForm\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender(): ReactElement {\n\t\treturn (\n\t\t\t<div className={appStyles.canvas}>\n\t\t\t\t<div className={appStyles.column} />\n\t\t\t\t<div className={[appStyles.column, styles.column].join(' ')}>\n\t\t\t\t\t<Crown setLoading={(loading: boolean) => this.setState({ loading })} loading={this.state.loading} />\n\t\t\t\t\t{this.loginSection}\n\t\t\t\t\t<div className={styles.messageBar}>\n\t\t\t\t\t\t{this.state.errorMessage || '\\u200b'}\n\t\t\t\t\t</div>\n\t\t\t\t\t{/*<div className={['button', styles.initialiseButton].join(' ')}>\n\t\t\t\t\t\t{this.state.register ? <>\n\t\t\t\t\t\t\t<div className={styles.registerForm}>{this.registerForm}</div>\n\t\t\t\t\t\t\t<div className={styles.flip} onClick={() => this.setState({ register: false })}>{'LOGIN\\n🡄'}</div>\n\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t<div className={styles.flip} onClick={() => this.setState({ register: true })}>{'REGISTER\\n🡆'}</div>\n\t\t\t\t\t\t\t<div className={styles.loginForm}>{this.loginForm}</div>\n\t\t\t\t\t\t</>}\n\t\t\t\t\t</div>*/}\n\t\t\t\t</div>\n\t\t\t\t<div className={appStyles.column} />\n\t\t\t</div>\n\t\t);\n\t}\n\n\n}","module.exports = __webpack_public_path__ + \"static/media/chessCom.228db28e.svg\";","module.exports = __webpack_public_path__ + \"static/media/lichess.9ff6e305.svg\";","import React, { ReactElement, useEffect, useCallback, useState } from 'react';\n\nimport appStyles from '../css/app.module.css';\nimport profileStyles from '../css/profile.module.css';\nimport styles from '../css/menu.module.css';\n\nimport { NumberDictionary, StringDictionary, NavData } from '../interfaces';\nimport { Crown } from './Login';\nimport { GET, POST, cookies } from '../utils/requests';\nimport { AxiosError } from 'axios';\nimport { Circle } from '../components/Vectors';\nimport { calculateHypotenuse } from '../utils/prototype';\nimport { defaultUserSettings } from '../assets/settings';\n\nimport { IoMdArrowRoundBack, IoIosSettings, IoMdClose, IoIosCloseCircle } from 'react-icons/io';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport { TiThMenu } from 'react-icons/ti';\nimport { MdRefresh } from 'react-icons/md';\nimport { FaEarlybirds, FaPlusCircle } from 'react-icons/fa';\n\nexport default class Menu extends React.Component<{\n\tsessionID: string\n\tendSession: () => void\n\tsetTournamentID: (id: string) => void\n\ttriggerConfirm: (message: string, resolve: () => void, reject: () => void) => void\n}, {\n\ttournamentDict: StringDictionary,\n\tloading: boolean\n\tloadingOverride: boolean\n\tregister: boolean\n\terrorMessage: string\n\tlines: ReactElement[]\n\tlinesMounted: boolean\n\tlinesAdjusted: boolean\n\tselected: string\n\thovered: string\n}> {\n\n\tpublic state = {\n\t\ttournamentDict: {} as StringDictionary,\n\t\tloading: true,\n\t\tloadingOverride: false,\n\t\tregister: false,\n\t\terrorMessage: '',\n\t\tlines: [] as ReactElement[],\n\t\tlinesMounted: false,\n\t\tlinesAdjusted: false,\n\t\tselected: '',\n\t\thovered: ''\n\t}\n\n\tpublic setTournamentID = (tournamentID: string): Promise<void> => {\n\t\treturn this.validateTournament(tournamentID)\n\t\t\t.then(() => {\n\t\t\t\tcookies.set('tournamentID', tournamentID, { path: '/' }).catch(console.error);\n\t\t\t\tthis.props.setTournamentID(tournamentID);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tcookies.remove('tournamentID').catch(console.error);\n\t\t\t\tthis.props.setTournamentID('');\n\t\t\t});\n\t}\n\n\tpublic validateTournament(tournamentID: string): Promise<void> {\n\t\tif (!tournamentID) return Promise.reject();\n\t\tif (!Object.values(this.state.tournamentDict).length) {\n\t\t\treturn this.updateTournamentDict()\n\t\t\t\t.then((tournamentDict: StringDictionary) => {\n\t\t\t\t\tif (tournamentDict[tournamentID] === undefined) throw new Error();\n\t\t\t\t\treturn;\n\t\t\t\t});\n\t\t} else return tournamentID in this.state.tournamentDict ? Promise.resolve() : Promise.reject();\n\t}\n\n\tpublic updateTournamentDict = (): Promise<StringDictionary> => {\n\t\treturn GET({ url: '/tournaments' })\n\t\t\t.then((tournamentDict: StringDictionary) => {\n\t\t\t\tthis.setState({ tournamentDict });\n\t\t\t\treturn tournamentDict;\n\t\t\t})\n\t\t\t.catch((e: Error) => {\n\t\t\t\tconsole.error(e);\n\t\t\t\tthis.props.endSession();\n\t\t\t\treturn {} as StringDictionary;\n\t\t\t});\n\t}\n\n\tpublic createNewTournament = async (): Promise<void> => {\n\t\ttry {\n\t\t\tlet id = await POST({ url: '/initialise' });\n\t\t\tif (!id) throw new Error();\n\t\t\tthis.props.setTournamentID(id);\n\t\t\tawait this.updateTournamentDict();\n\t\t} catch (error) {\n\t\t\tlet e = error as AxiosError;\n\t\t\tif (!e.response || e.response.status === 401) this.props.endSession();\n\t\t}\n\t}\n\n\tpublic removeID = async (id?: string): Promise<void> => {\n\t\tif (!id) {\n\t\t\tawait POST({ url: '/closeAuthorization/all' });\n\t\t\tthis.setState({ tournamentDict: {} });\n\t\t} else {\n\t\t\tlet tournamentDict = this.state.tournamentDict;\n\t\t\tdelete tournamentDict[id];\n\t\t\tawait POST({ url: '/closeAuthorization/' + id });\n\t\t\tthis.setState({ tournamentDict });\t\t\t\n\t\t}\n\t}\n\n\tprivate getElementCentre(elem: HTMLElement): {x: number, y: number} {\n\t\tvar rect = elem.getBoundingClientRect();\n\t\treturn {\n\t\t\tx: (rect.left + rect.right) / 2,\n\t\t\ty: (rect.top + rect.bottom) / 2 - 30 //on account of parent being 30px from top\n\t\t};\n\t}\n\n\trenderLineBetween(id: string, start: {x: number, y: number}, end: {x: number, y: number}, width: number): ReactElement {\n\t\tlet diff = {x: Math.abs(end.x - start.x), y: Math.abs(end.y - start.y)};\n\t\tlet length = calculateHypotenuse(end.x - start.x, end.y - start.y);\n\n\t\tlet sign = Math.sign((end.x - start.x) * (end.y - start.y));\n\t\tlet angle = Math.atan(diff.y / diff.x) * 180 / Math.PI;\n\n\t\treturn <div key={['line', end.x, end.y].join('.')} className={styles.line} style={{\n\t\t\twidth: length + 'px',\n\t\t\theight: width + 'px',\n\t\t\tbackgroundColor: 'white',\n\t\t\tposition: 'absolute',\n\t\t\tleft: !this.state.linesMounted ? start.x - (diff.x / 2) : ((start.x + end.x) / 2) - (diff.x / 2),\n\t\t\ttop: !this.state.linesMounted ? start.y : ((start.y + end.y) / 2),\n\t\t\ttransform: `rotate(${angle * sign}deg) scaleX(${this.state.linesMounted ? 1 : 0}) scaleY(1)`,\n\t\t\topacity: !this.state.linesMounted ? 0 : 1,\n\t\t\ttransition: 'transform 3s, left 3s, top 3s, opacity 3s'\n\t\t}}/>;\n\t}\n\n\tprivate logoRef = React.createRef() as React.RefObject<HTMLDivElement>\n\tprivate drawLines = () => {\n\t\tif (!this.logoRef.current) return;\n\t\tlet startCoords = this.getElementCentre(this.logoRef.current);\n\t\tlet circles = Array.from(document.getElementsByClassName(styles.dot)) as HTMLElement[];\n\t\tlet lines = [] as ReactElement[];\n\t\tfor (let c of circles) {\n\t\t\tif (c.style.opacity === '0') continue;\n\t\t\tlines.push(this.renderLineBetween(c.id, startCoords, this.getElementCentre(c), 2));\n\t\t}\n\t\tthis.setState({ lines, linesMounted: true });\n\t\tsetTimeout(() => this.setState({ linesAdjusted: true }), 3000);\n\t}\n\n\tprivate handleNavData(keys: string[], side: 'left' | 'right'): ReactElement[] {\n\t\tlet navData = this.navData;\n\t\tlet data = keys.reduce((acc: NavData, curr: string) => {\n\t\t\tif (!(curr in navData)) return acc;\n\t\t\tacc[curr] = navData[curr];\n\t\t\treturn acc;\n\t\t}, {});\n\t\treturn Object.entries(data).reduce((acc, [id, meta], i) => {\n\t\t\tlet arr = [\n\t\t\t\t<div className={[styles.dotDescription, this.state.selected === id ? styles.descriptionSelected : ''].join(' ')} key={['navData', side, 'description', i].join('.')}>\n\t\t\t\t\t{meta.description}\n\t\t\t\t</div>,\n\t\t\t\t<Circle\n\t\t\t\t\tkey={['navData', side, 'dot', i].join('.')}\n\t\t\t\t\tradius='50px'\n\t\t\t\t\tclassName={[styles.dot, !this.state.linesAdjusted ? styles.dotUnloaded : ''].join(' ')}\n\t\t\t\t\tid={id}\n\t\t\t\t\tcontent={meta.content}\n\t\t\t\t\tonClick={async (e) => {\t\n\t\t\t\t\t\tif (this.state.selected === id) this.setState({ selected: '' });\n\t\t\t\t\t\telse {\t\t\t\t\n\t\t\t\t\t\t\tawait meta.onClick(e);\n\t\t\t\t\t\t\tif (!meta.noSet) this.setState({ selected: id });\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseEnter={() => this.setState({ hovered: 'back' })}\n\t\t\t\t\tonMouseLeave={() => this.setState({ hovered: '' })}\n\t\t\t\t\tstyle={meta.style}\n\t\t\t\t/>\n\t\t\t];\n\t\t\tif (side === 'right') arr = arr.reverse();\n\t\t\tacc.push(<div className={[styles.dotContainer, this.state.linesAdjusted ? styles.dotContainerLoaded : ''].join(' ')} key={['NavData', side, 'div', i].join('i')}>\n\t\t\t\t{arr}\n\t\t\t</div>);\n\t\t\treturn acc;\n\t\t}, [] as ReactElement[]);\n\t}\n\n\tprivate get navData(): NavData {\n\t\treturn {\n\t\t\tcreate: {\n\t\t\t\tonClick: this.createNewTournament,\n\t\t\t\tcontent: <AiOutlinePlus />,\n\t\t\t\tdescription: 'Create new Swiss tournament'\n\t\t\t},\n\t\t\troundRobin: {\n\t\t\t\tonClick: () => {},\n\t\t\t\tcontent: <FaEarlybirds />,\n\t\t\t\tdescription: 'Create new Round-Robin tournament'\n\t\t\t},\n\t\t\tsettings: {\n\t\t\t\tonClick: () => {},\n\t\t\t\tcontent: <IoIosSettings />,\n\t\t\t\tdescription: 'User settings'\n\t\t\t},\n\t\t\tload: {\n\t\t\t\tonClick: this.updateTournamentDict,\n\t\t\t\tcontent: <TiThMenu />,\n\t\t\t\tdescription: 'Load previous tournaments'\n\t\t\t},\n\t\t\tback: {\n\t\t\t\tonClick: this.props.endSession,\n\t\t\t\tcontent: <IoMdArrowRoundBack />,\n\t\t\t\tdescription: 'Exit to login'\n\t\t\t},\n\t\t\tclose: {\n\t\t\t\tonClick: () => this.props.triggerConfirm('Delete all saved tournaments?', this.removeID, () => {}),\n\t\t\t\tnoSet: true,\n\t\t\t\tcontent: <IoMdClose />,\n\t\t\t\tdescription: 'Close all tournaments',\n\t\t\t\tstyle: {\t\t\t\t\t\n\t\t\t\t\tborder: '8px solid darkred'\n\t\t\t\t}\n\t\t\t},\n\t\t\trefresh: {\n\t\t\t\tonClick: this.updateTournamentDict,\n\t\t\t\tnoSet: true,\n\t\t\t\tcontent: <MdRefresh />,\n\t\t\t\tdescription: 'Refresh tournament list',\n\t\t\t\tstyle: {\t\t\t\t\t\n\t\t\t\t\tborder: '8px solid darkblue'\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps: {}, prevState: {selected: string}) {\n\t\tif (this.state.selected !== prevState.selected) this.drawLines();\n\t}\n    \n    private loadingTimeout!: NodeJS.Timeout\n\tasync componentDidMount() {\n\t\tlet tournamentID = await cookies.get('tournamentID');\n\t\tif (tournamentID) this.props.setTournamentID(tournamentID);\n\t\telse this.updateTournamentDict();\n\t\twindow.addEventListener('resize', this.drawLines);\n\t\tthis.drawLines();\n\t\tsetImmediate(this.drawLines);\n\t\t//setTimeout(this.drawLines, 2000);\n\t\tthis.loadingTimeout = setTimeout(() => this.setState({ loading: false }), 3000);\n\t}\n\n\tcomponentWillUnmount() {\t\t\n        window.addEventListener('resize', this.drawLines);\n        clearTimeout(this.loadingTimeout);\n\t}\n\n\trender(): ReactElement {\n\t\treturn (\n\t\t\t<div className={appStyles.canvas}>\n\t\t\t\t{this.state.lines}\n\t\t\t\t<div className={[appStyles.column, styles.leftColumn].join(' ')}>\n\t\t\t\t\t{(() => {\n\t\t\t\t\t\tswitch (this.state.selected) {\n\t\t\t\t\t\tcase 'load':\n\t\t\t\t\t\t\treturn this.handleNavData(['refresh', 'close', 'load'], 'left');\n\t\t\t\t\t\tcase 'settings':\n\t\t\t\t\t\t\treturn this.handleNavData(['create', 'settings', 'load'], 'left');\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn this.handleNavData(['create', 'settings', 'load'], 'left');\n\t\t\t\t\t\t}\n\t\t\t\t\t})()}\n\t\t\t\t</div>\n\t\t\t\t<div ref={this.logoRef} className={[appStyles.column, styles.column].join(' ')}>\n\t\t\t\t\t<Crown setLoading={(loadingOverride: boolean) => this.setState({ loadingOverride })} loading={this.state.loading || this.state.loadingOverride} classNames={{\n\t\t\t\t\t\tlogo: styles.logo\n\t\t\t\t\t}}/>\n\t\t\t\t</div>\n\t\t\t\t<div className={[appStyles.column, styles.rightColumn].join(' ')}>\n\t\t\t\t\t{(() => {\n\t\t\t\t\t\tswitch (this.state.selected) {\n\t\t\t\t\t\tcase 'load':\n\t\t\t\t\t\t\treturn <Listing\n\t\t\t\t\t\t\t\tsetTournamentID={this.props.setTournamentID}\n\t\t\t\t\t\t\t\tcreateNewTournament={this.createNewTournament}\n\t\t\t\t\t\t\t\tremoveID={this.removeID}\n\t\t\t\t\t\t\t\tupdateTournamentSettings={this.updateTournamentDict}\n\t\t\t\t\t\t\t\ttournamentDict={this.state.tournamentDict}\n\t\t\t\t\t\t\t\tcloseListing={() => this.setState({ selected: '' })}\n\t\t\t\t\t\t\t\ttriggerConfirm={this.props.triggerConfirm}\n\t\t\t\t\t\t\t/>;\n\t\t\t\t\t\tcase 'settings':\n\t\t\t\t\t\t\treturn <UserSettings\n\t\t\t\t\t\t\t\tupdateTournamentSettings={() => Promise.resolve()}\n\t\t\t\t\t\t\t\tupdateSetting={() => Promise.resolve()}\n\t\t\t\t\t\t\t\tsettings={{}}\n\t\t\t\t\t\t\t\tcloseListing={() => this.setState({ selected: '' })}\n\t\t\t\t\t\t\t/>;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn this.handleNavData(['back'], 'right');\n\t\t\t\t\t\t}\n\t\t\t\t\t})()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\n}\n\ninterface ListingProps {\n\tsetTournamentID: (id: string) => void\n\tcreateNewTournament: () => Promise<void>\n\tremoveID: (id: string) => void\n\tcloseListing: () => void\n\tupdateTournamentSettings: () => void\n\ttournamentDict: StringDictionary\n\ttriggerConfirm: (message: string, resolve: () => void, reject: () => void) => void\n}\n\nexport function Listing(props: ListingProps) {\n\n    const [height, setHeight] = useState(0);\n\n\tconst generateListing = useCallback((tournamentDict: StringDictionary) => {\n\t\tlet titles = Object.keys(tournamentDict).reduce((acc: NumberDictionary, curr: string) => {\n\t\t\tlet title = props.tournamentDict[curr];\n\t\t\tif (!title) return acc;\n\t\t\tif (!acc[title]) acc[title] = 0;\n\t\t\tacc[title]++;\n\t\t\treturn acc;\n\t\t}, {});\n\t\tlet buttons = Object.entries(tournamentDict).map(([tournamentID, name], i: number) => {\n\t\t\tlet displayName = titles[name] === undefined ? tournamentID : titles[name] === 1 ? name : name + '\\n' + tournamentID;\n\t\t\treturn (\n\t\t\t\t<div className={[profileStyles.row, styles.row].join(' ')} key={['row', i].join('.')}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={[styles.clickButton, 'fieldBox'].join(' ')}\t\t\t\t\t\t\n\t\t\t\t\t\tonClick={() => props.setTournamentID(tournamentID)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{displayName}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={[styles.clickButton, styles.close, 'fieldBox'].join(' ')} onClick={() => {\n\t\t\t\t\t\tprops.triggerConfirm('Delete tournament \\'' + displayName + '\\'?\\nPlease note this action cannot be undone.', () => props.removeID(tournamentID), () => {});\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<IoIosCloseCircle />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}).filter(elem => elem);\n\t\treturn buttons;\n\t}, [props.tournamentDict, props.setTournamentID, props.triggerConfirm, props.removeID]);\n\n    const listing = React.useRef() as React.RefObject<HTMLDivElement>\n    \n    useEffect(() => {\n        let x = setTimeout(() => {\n            if (!listing.current) return;\n            setHeight(listing.current.getBoundingClientRect().height);\n        }, 1000);\n        return () => clearTimeout(x);\n    }, [listing, props.tournamentDict, generateListing, setHeight]);\n\n    return (\n        <div className={styles.sidebar}>\n            <div className={[profileStyles.profile, styles.profile].join(' ')}>\t\t\t\t\n                <div className='topBanner'>\n                    Load Tournament\n                </div>\n                <div className={styles.listWrapper} style={{height}}>\n                    <div ref={listing} className={styles.listing}>\n                        {generateListing(props.tournamentDict)}\n                    </div>\n                </div>\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                <div onClick={props.createNewTournament} className='button'>\n                    <FaPlusCircle />\n                </div>\n                <div onClick={props.closeListing} className='button'>\n                    <IoMdArrowRoundBack />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport class UserSettings extends React.Component<{\n\tupdateTournamentSettings: () => Promise<void>\n\tupdateSetting: (k: string, v: any) => Promise<void>\n\tsettings: any\n\tcloseListing: () => void\n}> {\n\n\tprivate renderSettings(): ReactElement[] {\n\t\treturn Object.entries(defaultUserSettings).map(([k, def], i): ReactElement => {\n            let v = this.props.settings[k] || def.defaultValue;\n\t\t\tlet content = def.convert ? def.convert(v) : v as string;\n\t\t\tlet displayContent = typeof content !== 'undefined' ? content.toString() : '\\u200b';\n            if (def.convert) displayContent = def.convert(displayContent);\n\t\t\treturn (\n\t\t\t\t<div className={profileStyles.row} key={['row', i].join('.')}>\n\t\t\t\t\t<div className={['fieldBox'].join(' ')}>{def.name + ':'}</div>\n                    <div\n                        style={{\n                            cursor: def.type === 'link' ? 'copy' : 'default'\n                        }}\n                        className={['fieldBox'].join(' ')}\n                        onClick={def.type !== 'link' ? null : () => navigator.clipboard.writeText(displayContent)}\n                    >\n                        {displayContent}\n                    </div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\trender(): ReactElement {\n\t\treturn (\n\t\t\t<div className={styles.sidebar}>\n\t\t\t\t<div className={[profileStyles.profile, styles.profile].join(' ')}>\t\n                    <div className='topBanner'>\n                        Settings\n                    </div>\n                    {this.renderSettings()}\n                    <div style={{\n                        width: '100%',\n                        height: '100%',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                    }}>\n                        <div style={{\n                            transform: 'rotate(-30deg)'\n                        }}>\n                            This feature is in beta\n                        </div>\n                    </div>\n                </div>\n                <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                    <div onClick={this.props.closeListing} className='button'>\n                        <IoMdArrowRoundBack />\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}","import React, { CSSProperties, ReactElement } from 'react';\n\nexport function Circle(props: {\n\tradius: string | number\n\tclassName?: string\n\tid?: string\n\tstyle?: CSSProperties\n\tcontent?: string | ReactElement\n\tonClick?: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n\tonMouseEnter?: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n\tonMouseLeave?: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n}) {\n\t\n\treturn <span\n\t\tid={props.id}\n\t\tclassName={props.className}\n\t\tstyle={{\n\t\t\theight: props.radius,\n\t\t\twidth: props.radius,\n\t\t\tlineHeight: props.radius,\n\t\t\tborderRadius: '50%',\n\t\t\tdisplay: 'inline-block',\n\t\t\tcursor: 'default',\n\t\t\t...props.style\n\t\t}}\n\t\tonClick={props.onClick}\n\t\tonMouseEnter={props.onMouseEnter}\n\t\t//onMouseLeave={props.onMouseLeave}\n\t>{props.content}</span>;\n\n}","import React, { useState } from 'react';\nimport { win } from './utils/electron';\nimport { FaWindowMaximize, FaWindowRestore, FaWindowMinimize, FaWindowClose } from 'react-icons/fa';\n\nimport styles from './css/statusbar.module.css';\n\nexport default function StatusBar() {\n    \n    const [name, setName] = useState('Tournament by Oxford Chess Development');\n\n\tconst maximised = win.isMaximized();\n    const minimise = win.minimize();\n    const close = win.close();\n\n\tconst toggleMaximisation = () => {\n\t\tif (maximised) {\n\t\t\twin.restore();\n\t\t} else {\n\t\t\twin.maximize();\n\t\t}\n\t}\n\n    return (\n        <div className={styles.statusBar}>\n            <div className={styles.title}>\n                {name}\n            </div>\n            <div className={styles.menu}>\n                <div className={styles.favicon}>\n                    <img\n                        alt='favicon'\n                        draggable={false}\n                        src={process.env.PUBLIC_URL + '/logo192.png'}\n                    />\n                </div>\n            </div>\n            <div className={styles.exec}>\n                <div onClick={minimise}>\n                    <FaWindowMinimize />\n                </div> \n                <div onClick={toggleMaximisation} >\n                    {maximised ? \n                        <FaWindowRestore /> :\n                        <FaWindowMaximize />\n                    }\n                </div> \n                <div onClick={close} className={styles.close}>\n                    <FaWindowClose />\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState, useRef, ReactElement, useCallback, ReactNode, ReactNodeArray, RefObject } from 'react';\nimport { useMouseDown } from '.';\nimport { FORM } from '../utils/requests';\nimport styles from '../css/components.module.css';\nimport { AiOutlineClose, AiOutlineDown, AiOutlineUp, AiOutlineCheck } from 'react-icons/ai';\n\ninterface EditableFieldProps {\n    content: string\n    defaultEditContent?: string\n    defaultContent?: string\n    inputType?: 'button' | 'checkbox' | 'color' | 'date' | 'datetime-local' | 'email' | 'file' | 'hidden' | 'image' | 'month' | 'number' | 'password' | 'radio' | 'range' | 'reset' | 'search' | 'submit' | 'tel' | 'text' | 'time' | 'url' | 'week',\n\n    url: string, //url.resolve(server, ['tournament', props.id, 'editTournamentName'].join('/'))\n    handleSubmit: (k: string, v: any) => Promise<void>\n    onSubmitSuccess: (e: React.FormEvent<HTMLFormElement>) => React.FormEvent<HTMLFormElement>\n    handleClear?: () => Promise<void>\n    useHandleSubmit?: boolean\n    additionalStyles: { [key: string]: string }\n    additionalInputProps: { [key: string]: any }\n    name?: string\n    alwaysEnabled?: boolean\n    show?: {\n        submit?: boolean\n        infinity?: boolean\n        increment?: boolean\n        any?: boolean\n        clear?: boolean\n    }\n    formRef?: RefObject<HTMLFormElement>\n    children?: ReactNode | ReactNodeArray\n}\n\nfunction roundUpDate(date: Date): Date {\n    let interDate = new Date(date.setUTCHours(date.getUTCHours() + 1));\n    let nextDate: Date;\n    if (interDate.getUTCMinutes() < 30) nextDate = new Date(interDate.setUTCMinutes(30));\n    else nextDate = new Date(new Date(interDate.setUTCMinutes(0)).setUTCHours(interDate.getUTCHours() + 1));\n    return nextDate;\n}\n\nfunction toTimeDate(date: Date): string {\n    if (isNaN(date.valueOf())) return '';\n    return date.toLocaleString('en-GB').slice(0, -3);\n    //return date.toTimeString().slice(0, 8) + ' ' + date.toDateString().slice(0, 10);\n}\n\nfunction toDatetimeLocal(date: Date) {\n    if (isNaN(date.valueOf())) return '';\n    let tzoffset = date.getTimezoneOffset() * 60000; //offset in milliseconds\n    let localDate = new Date(date.valueOf() - tzoffset);\n    return localDate.toISOString().slice(0, 16);\n}\n\nexport default function EditableField(props: EditableFieldProps): ReactElement {\n\n    const [content, setContent] = useState(props.content);\n    const [editContent, setEditContent] = useState(props.alwaysEnabled || false);\n    const [mustFocus, focus] = useState(false);\n    const inputField = useRef(null as HTMLInputElement);\n    const divArea = useRef(null as HTMLDivElement);\n\n    const decrement = useCallback((e: React.MouseEvent<HTMLButtonElement>): void => {\n        e.preventDefault();\n        let button = e.target as HTMLButtonElement;\n        if (button.constructor.name !== 'HTMLButtonElement') return;\n        let form = button.parentNode as HTMLFormElement;\n        let input = form[props.name || 'name'] as HTMLInputElement;\n        input.stepDown();\n    }, [props.name]);\n\n    const increment = useCallback((e: React.MouseEvent<HTMLButtonElement>): void => {\n        e.preventDefault();\n        let button = e.target as HTMLButtonElement;\n        if (button.constructor.name !== 'HTMLButtonElement') return;\n        let form = button.parentNode as HTMLFormElement;\n        let input = form[props.name || 'name'] as HTMLInputElement;\n        input.stepUp();\n    }, [props.name]);\n\n    const handleClear = useCallback((e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        e.preventDefault();\n        if (!props.handleClear) return;\n        return props.handleClear()\n            .then(() => {\n                setEditContent(props.alwaysEnabled || false);\n                setContent('');\n            });\n    }, [props.handleClear, setEditContent, setContent, props.alwaysEnabled]);\n\n    const handleAny = useCallback((e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        e.preventDefault();\n        return props.handleSubmit(props.name || 'name', 0)\n            .then(() => {\n                setEditContent(props.alwaysEnabled || false);\n                setContent('0');\n            });\n    }, [props.handleSubmit, setEditContent, setContent, props.name]);\n\n    const handleInfinity = useCallback((e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        e.preventDefault();\n        return props.handleSubmit(props.name || 'name', 'Infinity')\n            .then(() => {\n                setEditContent(props.alwaysEnabled || false);\n                setContent('∞');\n            });\n    }, [props.handleSubmit, setEditContent, setContent, props.alwaysEnabled, props.name]);\n\n    const handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n        e.preventDefault();\n        if (props.useHandleSubmit) {\n            let form = e.target as HTMLFormElement;\n            if (form.constructor.name !== 'HTMLFormElement') return Promise.resolve(setEditContent(props.alwaysEnabled || false));\n            let input = form[props.name || 'name'] as HTMLInputElement;\n            return props.handleSubmit(props.name || 'name', input.value)\n                .then(() => {\n                    setEditContent(props.alwaysEnabled || false);\n                    return e;\n                })\n                .then(props.onSubmitSuccess)\n                .then(() => { })\n        } else return FORM(e)\n            .then(() => {\n                setEditContent(props.alwaysEnabled || false);\n                return e;\n            })\n            .then(props.onSubmitSuccess)\n            .then((e) => {\n                let form = e.target as HTMLFormElement;\n                while (form.constructor.name !== 'HTMLFormElement' && form.parentElement) form = form.parentElement as HTMLFormElement;\n                if (form.constructor.name !== 'HTMLFormElement') throw new Error('Couldn\\'t find valid form');\n                let input = form.firstChild as HTMLInputElement;\n                let content = input.value;\n                setContent(content);\n            });\n    }, [props.useHandleSubmit, props.handleSubmit, props.name, setEditContent, props.onSubmitSuccess, props.alwaysEnabled, setEditContent, setContent]);\n\n    const exitEditing = useCallback((e: React.KeyboardEvent<HTMLFormElement>): React.KeyboardEvent<HTMLFormElement> => {\n        switch (e.keyCode) {\n            case 27: {\n                setEditContent(props.alwaysEnabled || false);\n                return e;\n            }\n            case 13: {\n                handleSubmit(e);\n                return e;\n            }\n            default: {\n                return e;\n            }\n        }\n    }, [setEditContent, handleSubmit, props.alwaysEnabled]);\n\n    const generateForm = (name: string): JSX.Element => {\n        let defaultValue = name || props.defaultEditContent;\n        if (props.inputType === 'datetime-local') defaultValue = toDatetimeLocal(roundUpDate(new Date(defaultValue)));\n        else if (props.show?.any && defaultValue === '0') defaultValue = '';\n        return (\n            <form\n                ref={props.formRef}\n                className={styles.form}\n                target='_self'\n                onKeyDown={exitEditing}\n                onSubmit={handleSubmit}\n                method='POST'\n                action={props.url}\n            >\n                <input\n                    type={props.inputType}\n                    className={[styles.input, props.additionalStyles.input].join(' ')}\n                    name={props.name || 'name'}\n                    defaultValue={defaultValue || '\\u200b'}\n                    required\n                    ref={inputField}\n                    {...props.additionalInputProps}\n                />\n                <button\n                    className={[props.show?.submit && !props.show?.infinity && !props.show?.any && !props.show?.clear ? '' : styles.submitHidden, styles.cancel].join(' ')}\n                    onClick={() => setEditContent(props.alwaysEnabled || false)}\n                >\n                    <AiOutlineClose />\n                </button>\n                <button\n                    className={[!props.show?.clear ? styles.submitHidden : '', styles.cancel].join(' ')}\n                    onClick={handleClear}\n                >\n                    <AiOutlineClose />\n                </button>\n                <button\n                    className={[!props.show?.any ? styles.submitHidden : '', styles.any].join(' ')}\n                    onClick={handleAny}\n                >Any</button>\n                <button\n                    className={[!props.show?.infinity ? styles.submitHidden : '', styles.infinity].join(' ')}\n                    onClick={handleInfinity}\n                >∞</button>\n                <button\n                    type='button'\n                    value='▼'\n                    className={[!props.show?.increment ? styles.submitHidden : '', styles.increment].join(' ')}\n                    onClick={decrement}\n                >\n                    <AiOutlineDown />\n                </button>\n                <button\n                    className={[!props.show?.increment ? styles.submitHidden : '', styles.increment].join(' ')}\n                    onClick={increment}\n                >\n                    <AiOutlineUp />\n                </button>\n                <button\n                    type='submit'\n                    className={[!props.show?.submit ? styles.submitHidden : '', styles.submit].join(' ')}\n                >\n                    <AiOutlineCheck />\n                </button>\n                {props.children}\n            </form>\n        );\n    }\n\n    useEffect(() => {\n        setContent(props.content);\n    }, [props.content]);\n    useEffect(() => {\n        if (!mustFocus) return;\n        let form = inputField.current;\n        if (!form) return;\n        if (form.select) form.select();\n        else if (form.focus) form.focus();\n    }, [inputField, mustFocus]);\n    useMouseDown((e) => {\n        if (divArea.current && divArea.current.contains(e.target as Node)) return;\n        setEditContent(props.alwaysEnabled || false);\n    });\n\n    const myID = Math.random().toString(16).slice(2, 9);\n\n    let displayContent = content;\n    if (displayContent && props.inputType === 'datetime-local') displayContent = toTimeDate(new Date(content));\n    else if (props.show?.any && displayContent === '0') displayContent = 'Any';\n\n    return (\n        <div\n            ref={divArea}\n            className={[styles.container, props.additionalStyles.container].join(' ')}\n            id={myID}\n        >\n            {editContent ?\n                generateForm(content) : <>\n                    <div\n                        className={[styles.editableField, props.additionalStyles.editableField || ''].join(' ')}\n                        onClick={() => {\n                            setEditContent(true);\n                            focus(true);\n                        }}\n                    >\n                        {displayContent || props.defaultContent || '\\u200b'}\n                    </div>\n                    {props.children}\n                </>\n            }\n        </div>\n    );\n\n}","import React, { ReactElement } from 'react';\n\ninterface GridProps {\n\theader: {[key: string]: string | undefined}\n\tbody: JSX.Element[][]\n\tstyles: any\n\tbodyClassNames: string[]\n\tstyle: any\n\thandleHeaderClick: (key: string) => void\n}\n\nexport default function Grid(props: GridProps): ReactElement {\n\n\tconst headers = props.header;\n\tconst body = props.body;\n\n\treturn (\n\t\t<div className={props.styles.crossTable} style={props.style}>\n\t\t\t<table className={props.styles.table}>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t{Object.entries(headers).map(([key, header], i) => {\n\t\t\t\t\t\t\treturn <th scope='column' key={['column', i].join('.')} className={props.styles.th}>\n\t\t\t\t\t\t\t\t{header ? <div\n\t\t\t\t\t\t\t\t\tclassName={[props.styles.cell, props.styles.headerCell].join(' ')}\n\t\t\t\t\t\t\t\t\tonClick={() => props.handleHeaderClick(key)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{header}\n\t\t\t\t\t\t\t\t</div> : ''}\n\t\t\t\t\t\t\t</th>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\t\t\t\t\t\t\n\t\t\t\t\t{body.map((rowData, i) => {\n\t\t\t\t\t\tlet first = rowData.shift();\n\t\t\t\t\t\tlet rest = rowData;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr key={'row.' + i} className={props.styles.tr}>\n\t\t\t\t\t\t\t\t<th scope='row'>\n\t\t\t\t\t\t\t\t\t{first}\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t{rest.map((cell, j) => {\n\t\t\t\t\t\t\t\t\tlet UID = ['cell', i, j].join('.');\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<td id={UID} key={UID} className={props.styles.td}>\n\t\t\t\t\t\t\t\t\t\t\t{cell}\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n\t\n}","import React, { useState, ReactElement, useRef, RefObject, useEffect, useMemo, useCallback } from 'react';\nimport url from 'url';\nimport { FORM, server, POST } from '../utils/requests';\nimport { AnyDictionary, GameLinks } from '../interfaces';\n\nimport styles from '../css/components.module.css';\nimport { AiOutlineCheck, AiOutlineClose, AiOutlineMinus } from 'react-icons/ai';\nimport * as icons from '../assets/icons';\nimport EditableField from './EditableField';\n\ninterface SinglePairingProps {\n    result: [number | null, number | null]\n\ttournamentID: string\n\tinputClassName: any\n    hidden: AnyDictionary\n    expanded: boolean\n    expand: (set: boolean) => void\n\tvalidate: (form: HTMLFormElement) => boolean | string | void\n\thandleSubmit: (e: React.FormEvent<HTMLFormElement>) => Promise<React.FormEvent<HTMLFormElement>>\n}\n\nexport default function SinglePairing(props: SinglePairingProps): ReactElement {\n\n    const [valid, setValid] = useState(undefined as boolean | undefined);\n    const [hover, setHover] = useState('');\n\n    const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n\t\tlet input = e.target as HTMLInputElement;\n        let form = input.parentElement as HTMLFormElement;\n        let valid = props.validate(form);\n        if (typeof valid === 'string') setHover(valid);\n        else setHover('');\n        if (typeof valid === 'boolean') setValid(valid);\n        else if (typeof valid === 'string') setValid(false);\n\t\telse setValid(undefined);\n    }\n\n    const clear = (e: React.FormEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n\t\tlet input = e.target as HTMLButtonElement;\n        let div = input.parentElement as HTMLDivElement;\n        let form = div.parentElement as HTMLFormElement\n        form.reset();\n        setHover('');\n        setValid(undefined);\n    }\n\n    if (props.result[0] !== null || props.result[1] !== null) return (\n        <div className={styles.resultsBridge}>\n            <div className={styles.setResult}>{props.result[0] ?? '\\u200b'}</div>\n            <div className={styles.neutral} onClick={() => props.expand(!props.expanded)} style={{\n                transform: props.expanded ? 'rotate(450deg)' : 'rotate(0deg)'\n            }}>\n                <AiOutlineMinus />\n            </div>\n            <div className={styles.setResult}>{props.result[1] ?? '\\u200b'}</div>\n        </div>\n    );\n    \n    return <form\n        className={styles.resultsBridge}\n        target='_self'\n        onSubmit={(e) => {\n            e.persist();\n            if (!props.validate(e.target as HTMLFormElement)) return e.preventDefault();\n            FORM(e).then(() => props.handleSubmit(e));\n        }}\n        method='POST'\n        action={url.resolve(server, ['tournament', props.tournamentID, 'addResult'].join('/'))}\n    >\n        <input type='number' min={0} step={0.5} name='resultWhite' required className={props.inputClassName} onChange={handleChange}/>\n        <div className={styles.centre}>\n            {hover ? <span className={styles.tooltip}>{hover}</span> : null}\n            {valid ?\n                <button tabIndex={-1} className={styles.resolve}>\n                    <AiOutlineCheck />\n                </button> :\n                valid === false ?\n                    <button tabIndex={-1} className={styles.reject} onClick={clear}>\n                        <AiOutlineClose />\n                    </button> :\n                    <div className={styles.neutral} onClick={() => props.expand(!props.expanded)} style={{\n                        transform: props.expanded ? 'rotate(450deg)' : 'rotate(0deg)'\n                    }}>\n                        <AiOutlineMinus />\n                    </div>\n            }\n        </div>\n        <input type='number' min={0} step={0.5} name='resultBlack' required className={props.inputClassName} onChange={handleChange}/>\n        {Object.entries(props.hidden).map(([name, value], i) => {\n            return <input key={['hiddenInput', i].join('.')} type='hidden' name={name} value={value} required />;\n        })}\t\t\n    </form>;\n}\n\ninterface DetailsProps {\n    tournamentID: string\n    id: string\n    className: string\n    expanded: boolean\n    gameLinks: GameLinks\n    individual: boolean\n    board: number\n    update: () => Promise<void>\n}\n\nexport function PairingDetails(props: DetailsProps): ReactElement {\n\n    const [height, setHeight] = useState('0px');\n\n    const details = useRef(null) as RefObject<HTMLDivElement>;\n    const form = useRef(null) as RefObject<HTMLFormElement>;\n\n    useEffect(() => {\n        if (!details.current) return;\n        if (!props.expanded) return;\n        setHeight(details.current.getBoundingClientRect().height + 'px');\n        return () => setHeight('0px');\n    }, [details, setHeight, props.expanded]);\n\n    const lichess = props.individual ? props.gameLinks.lichessLink : props.gameLinks.lichessTeamLink;\n    const chessCom = props.individual ? props.gameLinks.chessComLink : props.gameLinks.chessComTeamLink;\n\n    const handleSubmit = useCallback((key: 'lichess' | 'chessCom', value: string): Promise<void> => {\n        console.log(value);\n        return POST({\n            url: url.resolve(server, ['tournament', props.tournamentID, 'updateResultLink'].join('/')),\n            data: {\n                id: props.id,\n                [key]: value,\n                type: props.individual ? 'individual' : 'team'\n            }\n        });\n    }, [props.id, props.individual, props.tournamentID]);\n\n    const handleClear = useCallback((key: 'lichess' | 'chessCom'): Promise<void> => {\n        return POST({\n            url: url.resolve(server, ['tournament', props.tournamentID, 'clearResultLink'].join('/')),\n            data: {\n                id: props.id,\n                site: key,\n                type: props.individual ? 'individual' : 'team'\n            }\n        });\n    }, [props.id, props.individual, props.tournamentID]);\n\n    return (\n        <div className={[props.className, styles.details].join(' ')} style={{\n            height\n        }}>\n            <div ref={details} className={[styles.detailsContent].join(' ')}>\n                <div className={[styles.row, 'topBanner'].join(' ')}>\n                    Board: {props.board}{'\\n'}\n                    For online games, enter {props.individual ? '' : 'team match '}game links below:\n                </div>\n                <div className={styles.row}>\n                    <EditableField\n                        content={chessCom}\n                        url={url.resolve(server, ['tournament', props.tournamentID, 'updateResultLink'].join('/'))}\n                        onSubmitSuccess={(e) => {\n                            props.update();\n                            return e\n                        }}\n                        handleSubmit={(k: string, v: string) => handleSubmit('chessCom', v)}\n                        name={'link'}\n                        additionalInputProps={{}}\n                        additionalStyles={{\n                            input: styles.inputURL,\n                            editableField: styles.editableField\n                        }}\n                        formRef={form}\n                        useHandleSubmit\n                        handleClear={() => handleClear('chessCom')}\n                        show={{\n                            clear: true\n                        }}\n                    >\n                        <button className={[styles.submit, styles.linkSubmit].join(' ')} onClick={e => form.current ? form.current.dispatchEvent(new Event('submit')) : null}>\n                            <img src={icons.chessCom} alt='chess.com' />\n                        </button>\n                    </EditableField>\n                </div>\n                <div className={styles.row}>\n                    <EditableField\n                        content={lichess}\n                        url={url.resolve(server, ['tournament', props.tournamentID, 'updateResultLink'].join('/'))}\n                        onSubmitSuccess={(e) => {\n                            props.update();\n                            return e\n                        }}\n                        handleSubmit={(k: string, v: string) => handleSubmit('lichess', v)}\n                        name={'link'}\n                        additionalInputProps={{}}\n                        additionalStyles={{\n                            input: styles.inputURL,\n                            editableField: styles.editableField\n                        }}\n                        formRef={form}\n                        useHandleSubmit\n                        handleClear={() => handleClear('lichess')}\n                        show={{\n                            clear: true\n                        }}\n                    >\n                        <button className={[styles.increment, styles.linkSubmit].join(' ')} onClick={e => form.current ? form.current.dispatchEvent(new Event('submit')) : null}>\n                            <img src={icons.lichess} alt='lichess' />\n                        </button>\n                    </EditableField>\n                </div>\n            </div>\n        </div>\n    );\n}","import { useEffect } from 'react';\n\nimport EditableField from './EditableField';\nimport Grid from './Grid';\nimport SinglePairing from './SinglePairing';\n\nexport { EditableField, Grid, SinglePairing };\n\nexport const useMouseDown = (callback: (e: MouseEvent) => any) => {\n\tuseEffect(() => {\n\t    window.addEventListener('mousedown', callback);\n\t    return () => window.removeEventListener('mousedown', callback);\n\t}, [callback]);\n};","import React, { ReactElement } from 'react';\nimport { server, POST } from '../utils/requests';\nimport url from 'url';\nimport styles from '../css/tournament.module.css';\nimport { TournamentStatus, TournamentSettings } from '../interfaces';\nimport { EditableField } from '../components/';\nimport { MdExitToApp, MdStop } from 'react-icons/md';\nimport { IoMdPlay, IoMdGrid } from 'react-icons/io';\n\ninterface InfoProps {\n\tstatus: TournamentStatus\n\tsettings: TournamentSettings\n\tupdateTournamentStatus: () => void\n\tround: number\n\ttotalRounds: number | 'Infinity'\n\tcloseTournament: () => void\n\ttoggleCrossTable: () => void\n\n\tlastRoundOverride: boolean\n\tsetLastRound: (override: boolean) => void\n\ttriggerError: (message: string) => void\n}\n\nexport default function InfoProps(props: InfoProps): ReactElement {\n\n    let lastRound = false;\n    if (typeof props.lastRoundOverride !== 'undefined') lastRound = props.lastRoundOverride;\n    else lastRound = props.settings.totalRounds === props.status.round;\n\n    let uri = url.resolve(server, ['tournament', props.status.id, 'setName'].join('/'));\n\n    return (\n        <div className={styles.titleBar} style={{\n            gridColumn: '2 /span 1'\n        }}>\n            <div className={styles.row}>\n                <div className={['topBanner', styles.header].join(' ')}>\n                    <EditableField\n                        content={props.status.name}\n                        url={uri}\n                        inputType='text'\n                        handleSubmit={(k: string, v: any) => POST({\n                            url: uri,\n                            data: {\n                                [k]: v\n                            }\n                        })}\n                        additionalStyles={styles}\n                        additionalInputProps={{}}\n                        onSubmitSuccess={(e) => {\n                            props.updateTournamentStatus();\n                            return e;\n                        }}\n                        defaultContent='Unnamed Swiss Tournament'\n                        show={{\n                            submit: true\n                        }}\n                    />\n                </div>\n            </div>\n            <div className={styles.row}>\n                <div className={'topBanner ' + styles.header}>\n                    ID: {props.status.id}\n                </div>\n                <div className={'topBanner ' + styles.header}>\n                    Round: {!props.status.round ? 'Not yet initialised' : props.status.round + ' / ' + (props.totalRounds === 'Infinity' ? '∞' : props.totalRounds)}\n                </div>\n            </div>\n            <div className={styles.row}>\n                <div className='button' onClick={props.closeTournament}>\n                    <span role='img' aria-label='back'>\n                        <MdExitToApp />\n                    </span>\n                </div>\n                <div className='button' onClick={() => {\n                    if (props.status.round >= props.settings.totalRounds) props.triggerError('Increase the number of rounds in Settings to continue!')\n                    props.setLastRound(!lastRound);\n                }}>\n                    <span role='img' aria-label='decommission'>\n                        {lastRound ? \n                            <IoMdPlay /> :\n                            <MdStop />\n                        }\n                    </span>\n                </div>\n                <div className='button' onClick={props.toggleCrossTable}>\n                    <IoMdGrid />\n                </div>\n            </div>\n        </div>\n    );\n\n}","import React, { ReactElement, useState, useEffect, useCallback, useMemo, useReducer } from 'react';\nimport styles from '../css/pairings.module.css';\nimport { TournamentStatus, TournamentSettings, ID, Player, PairingObject } from '../interfaces';\nimport { SinglePairing } from '../components/';\nimport { GET, POST } from '../utils/requests';\nimport { AiOutlineLoading3Quarters } from 'react-icons/ai';\nimport { IoIosSettings } from 'react-icons/io';\nimport { TiThMenu } from 'react-icons/ti';\nimport { PairingDetails } from '../components/SinglePairing';\n\ninterface PairingsProps {\n\tstatus: TournamentStatus\n\tplayerDict: Map<ID, Player>\n\tupdatePlayerDict: () => {}\n    playerDictKey: string\n\tsettings: TournamentSettings\n\n\tid: string\n\tcanTriggerNextRound: boolean\n\tsetDisplayPlayer: (id: string) => void\n\ttoggleSidebar: () => void\n\ttoggleSettings: () => void\n\n\tupdateRound: () => void\n\tsetLastRound: (override: boolean) => void\n\ttoggleCrossTable: () => void\n\tlastRoundOverride: boolean\n}\n\nexport default function Pairings(props: PairingsProps): ReactElement {\n\n    const round = useMemo(() => props.status.round, [props.status.round]);\n    \n    const [resultsState, updateResults] = useReducer(() => Math.random().toString(16).slice(2, 9), '');\n\tconst reduceResults = useCallback((state: Map<string, [number | null, number | null]>, {id, W, B}: {\n\t\tid: string\n\t\tW: Player,\n\t\tB: Player\n\t}): Map<string, [number | null, number | null]> => {\n\t\tstate.set(id, [\n\t\t\tW ? W.histories ? W.histories[round][props.settings.displayPoints] : null : 0,\n\t\t\tB ? B.histories ? B.histories[round][props.settings.displayPoints] : null : 0\n        ]);\n        updateResults({});\n\t\treturn state;\n\t}, [round, props.settings.displayPoints])\n\n\tconst [pairingData, setPairings] = useState([] as PairingObject[]);\n\tconst [results, setResults] = useReducer(reduceResults, new Map() as Map<string, [number | null, number | null]>);\n\tconst [loading, setLoading] = useState(false);\n\n\n\tconst getPairings = useCallback((): Promise<void> => {\n        if (!round) return;\n        if (!props.playerDict.size) return;\n\t\treturn GET({ url: '/tournament/' + props.id + '/getPairings'})\n\t\t\t.then((pairings: PairingObject[]) => {\n\t\t\t\tfor (let [w, b] of pairings) {\n                    setResults({\n                        id: w + '.' + b, \n                        W: props.playerDict.get(w),\n                        B: props.playerDict.get(b)\n                    });\n                }\n\t\t\t\tsetPairings(pairings);\n\t\t\t})\n\t\t\t.catch(console.error);\n\t}, [props.id, setPairings, setResults, round, props.playerDict, props.playerDictKey]);\n\n\tfunction getDisplayName(id: ID, player: Player): string {\n\t\tif (id === 'bye') return 'BYE';\n\t\tif (!player) return id;\n\t\tlet displayName: string;\n\t\tif (props.settings.competitors === 'individual') displayName = [player.firstName, player.lastName].join(' ');\n\t\telse displayName = player.firstName;\n\t\treturn `${displayName} [${player.score}]`;\n\t}\n\t\n\tlet pending = Array.from(results.values())\n\t\t\t.filter(arr => arr.every(v => v === null));\n\t\t\t\n\tconst triggerNextRound = (): Promise<void> => {\n\t\tsetLoading(true);\n\t\treturn POST({\n\t\t\turl: '/tournament/' + props.id + '/getNextPairings'\n\t\t})\n\t\t\t.then((pairings: PairingObject[]) => setPairings(pairings))\n\t\t\t.then(() => {\n\t\t\t\tgetPairings();\n\t\t\t\tprops.updatePlayerDict();\n\t\t\t})\n\t\t\t.then(props.updateRound)\n\t\t\t.catch(console.error)\n\t\t\t.finally(() => setLoading(false));\n\t}\n\n\tfunction generateNextButton(): ReactElement {\n\t\tlet lastRound: boolean;\n\t\tif (props.status.round >= props.settings.totalRounds) lastRound = true;\n\t\telse if (typeof props.lastRoundOverride !== 'undefined') lastRound = props.lastRoundOverride;\n\t\telse lastRound = false;\n\n\t\treturn loading ? (\n\t\t\t<div\n\t\t\t\tclassName={[styles.nextButton, 'button'].join(' ')}\n\t\t\t>\n\t\t\t\t<AiOutlineLoading3Quarters />\n\t\t\t</div>\n\t\t) : !props.canTriggerNextRound ? (\n\t\t\t<div className={[styles.waitButton].join(' ')}>\n\t\t\t\tTournament must have at least 2 active players\n\t\t\t</div>\n\t\t) : pending.length > 0 ? (\n\t\t\t<div className={[styles.waitButton].join(' ')} >\n\t\t\t\t{`Awaiting ${pending.length} result${pending.length > 1 ? 's' : ''}`}\n\t\t\t</div>\n\t\t) : lastRound ? (\n\t\t\t<div\n\t\t\t\tclassName={[styles.finishButton, 'button'].join(' ')}\n\t\t\t\tonClick={props.toggleCrossTable}\n\t\t\t>\n\t\t\t\tFinal Standings\n\t\t\t</div>\n\t\t) : (\n\t\t\t<div\n\t\t\t\tclassName={[styles.nextButton, 'button'].join(' ')}\n\t\t\t\tonClick={triggerNextRound}\n\t\t\t>\n\t\t\t\tNext Round\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\tfunction validateForm(form: HTMLFormElement): boolean | string | void {\n\t\tif (form.resultWhite.value === '' && form.resultBlack.value === '') return undefined;\n\t\tif (!Array.from(form).every((input) => (input as HTMLInputElement).validity.valid)) return false;\n\t\tif (!props.settings.gamePointTotal) return true;\n\t\tlet nW = Number(form.resultWhite.value);\n\t\tlet nB = Number(form.resultBlack.value);\n\t\tlet total = props.settings.displayPoints === 'game' ? props.settings.gamePointTotal : 1;\n\t\tif (nW + nB === total) return true;\n\t\treturn 'Setting: sum results to ' + props.settings.gamePointTotal;\n    }\n    \n    const [expanded, setExpanded] = useState('');\n\n\tfunction Listing(): ReactElement[] {\n\t\tlet pairings = [] as ReactElement[];\n        let dict = props.playerDict;\n        let i = 0;\n\t\tfor (let [w, b, gameLinks] of pairingData) {\n\t\n\t\t\tlet [white, black] = [dict.get(w), dict.get(b)];\n\t\t\tlet [wDisplay, bDisplay] = [getDisplayName(w, white), getDisplayName(b, black)];\t\t\t\n\t\t\tlet id = w + '.' + b;\n\t\t\tlet result = results.get(id);\n            if (!result) continue;\n\t\t\tpairings.push(\n\t\t\t\t<div id={id} className={styles.pairing} key={['pairings', w, b].join('.')} >\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={['playerInfo', styles.playerInfo, w === 'bye' ? styles.bye : ''].join(' ')}\n\t\t\t\t\t\tid={w}\n\t\t\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => w === 'bye' ? null : props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n\t\t\t\t\t>{wDisplay}</div>\n                        <SinglePairing\n                            expand={(set: boolean) => setExpanded(set ? id : '')}\n                            expanded={expanded === id}\n                            result={result}\n\t\t\t\t\t\t\ttournamentID={props.id}\n\t\t\t\t\t\t\tinputClassName={styles.inputResult}\n\t\t\t\t\t\t\thidden={{\n\t\t\t\t\t\t\t\tW: w,\n\t\t\t\t\t\t\t\tB: b\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvalidate={validateForm}\n\t\t\t\t\t\t\thandleSubmit={async (e) => {\n                                let form = e.target as HTMLFormElement & {resultWhite: HTMLInputElement, resultBlack: HTMLInputElement};\n                                results.set(id, [Number(form.resultWhite.value), Number(form.resultBlack.value)]);\n                                updateResults({});\n\t\t\t\t\t\t\t\tprops.updatePlayerDict();\n\t\t\t\t\t\t\t\treturn e;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={['playerInfo', styles.playerInfo, styles.playerInfo, b === 'bye' ? styles.bye : ''].join(' ')}\n\t\t\t\t\t\tid={b}\n\t\t\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => b === 'bye' ? null : props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n\t\t\t\t\t>{bDisplay}</div>\n                </div>,\n                <PairingDetails\n                    tournamentID={props.status.id}\n                    id={id}\n                    board={i}\n                    className={styles.pairing}\n                    expanded={expanded === id}\n                    gameLinks={gameLinks}\n                    individual={props.settings.competitors === 'individual'}\n                    update={getPairings}\n                />\n\t\t\t);\n\t\t}\n\t\treturn pairings;\n\t}\n\n\tuseEffect(() => {\n\t\tgetPairings();\n    }, [getPairings]);\n    \n    const listing = useMemo(Listing, [props.playerDict, pairingData, getDisplayName, results, resultsState, props.updatePlayerDict, getPairings, props.setDisplayPlayer, setResults, props.playerDictKey]);\n\n\treturn (\n        <>\n            <div className={styles.pairings}>\n                <div className={['topBanner', styles.topBanner].join(' ')}>\n                    Pairings\n                </div>\n                <div className={styles.pairingContainer}>\n                    {listing}\n                </div>\n            </div>\n            <div className={['bottomBanner', styles.statusBar].join(' ')}>\n                <div className={['button'].join(' ')} onClick={props.toggleSidebar}>\n                    <TiThMenu />\n                </div>\n                {generateNextButton()}\n                <div className={['button'].join(' ')} onClick={props.toggleSettings}>\n                    <IoIosSettings />\n                </div>\n            </div>\n        </>\n\t);\n\n}","import React, { ReactElement } from 'react';\n\nexport function Bottom(...arr: [\n    (() => Promise<void> | void),\n    ReactElement | string,\n    string\n][]): ReactElement[] {\n    let buttons = [] as ReactElement[];\n    for (let item of arr) {\n        if (!item) continue;\n        let [func, icon, name] = item;\n        buttons.push(<div key={['button', name].join('.')} onClick={func} className='button'>\n            {icon}\n        </div>);\n    }\n    return buttons;\n}","import React, { ReactElement, useEffect, CSSProperties, useState, ReactNode, useRef } from 'react';\nimport { AiOutlineLeft } from 'react-icons/ai';\nimport styles from '../css/components.module.css';\n\ninterface SectionProps {\n    children?: ReactNode & ReactNode[]\n    header: string | ReactElement\n    useInternalState?: boolean\n    value?: string\n    expanded?: boolean\n    setExpanded?: (state: boolean, action: string) => void\n    style?: CSSProperties\n    id?: string\n}\n\nexport function SectionBreak() {\n\n    return (\n        <div className={styles.sectionContainer}>\n            <div className={[styles.sectionHeader, 'topBanner'].join(' ')}>\n                <div className={styles.sectionHeaderText} />\n            </div>\n        </div>\n    );\n}\n\nexport default function CollapsableSection(props: SectionProps) {\n\n    const [internalExpanded, setExpanded] = useState(props.expanded || true);\n    const [height, setHeight] = useState(0);\n\n    const innerDiv = useRef() as React.RefObject<HTMLDivElement>;\n\n    let expanded = props.useInternalState ? internalExpanded : props.expanded;\n\tuseEffect((): void => {\n        if (!innerDiv.current) return;\n        setHeight(expanded ? innerDiv.current.getBoundingClientRect().height : 0);\n\t}, [expanded, innerDiv, props.children]);\n\n    return (\n        <div className={styles.sectionContainer} style={props.style}>\n            <div className={[styles.sectionHeader, 'topBanner'].join(' ')}>\n                <div className={styles.sectionHeaderText} onClick={() => props.useInternalState ? setExpanded(!expanded) : props.setExpanded(!expanded, props.value)}>\n                    {props.header}\n                </div>\n                {!props.children.length ?\n                    null : \n                    <div className={styles.sectionToggle} onClick={() => props.useInternalState ? setExpanded(!expanded) : props.setExpanded(!expanded, props.value)}>\n                        <AiOutlineLeft style={{\n                            transform: expanded ? 'rotate(-90deg)' : 'rotate(0deg)'\n                        }}/>\n                    </div>\n                }\n            </div>\n            <div className={[styles.sectionListWrapper, expanded ? styles.expanded : ''].join(' ')} style={{\n                height\n            }}>\n                <div ref={innerDiv} className={[styles.sectionList].join(' ')} id={props.id}>\n                    {props.children}\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { ReactElement, FormEvent, useState, useCallback, useMemo, useEffect, createRef } from 'react';\nimport CSV from 'papaparse';\nimport url from 'url';\nimport { Player, TournamentPlayers, ID, TournamentStandings, TournamentSettings } from '../interfaces';\nimport { GET, POST, server, FORM} from '../utils/requests';\n\nimport styles from '../css/sidebar.module.css';\nimport { AiFillEdit, AiOutlineClose, AiOutlineCheck } from 'react-icons/ai';\nimport { MdRefresh, MdMenu } from 'react-icons/md';\nimport { IoMdClose } from 'react-icons/io';\nimport { Bottom } from '../components/Buttons';\nimport CollapsableSection, { SectionBreak } from '../components/CollapsableSection';\n\ninterface SidebarProps {\n\tplayerDict: Map<ID, Player>\n\tplayerDictKey: string //required to force a reload\n\tupdatePlayerDict: (force?: boolean) => void\n    setPlayerDict: (value: {\n        id?: string;\n        player?: Player;\n        players?: Player[];\n        hash?: string;\n    }) => void\n\tid: string\n\tsettings: TournamentSettings\n\tsetDisplayPlayer: (id: string) => void\n    checkIfEnoughPlayers: (reload?: boolean) => void\n    togglePasteInput: () => void\n}\n\ninterface ActiveProps {\n\tplayer: Player\n\n\teditPlayer: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n\tactivatePlayer: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n    clearPlayer: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n    allowNewPlayers: boolean\n    setDisplayPlayer: (id: string) => void\n\n\tround: number\n\trequireLastName: boolean\n}\n\nexport function ActivePlayer(props: ActiveProps): ReactElement {\n\n\tconst displayName = props.requireLastName ?\n\t\t[props.player.firstName, props.player.lastName].join(' ') :\n\t\tprops.player.firstName;\n\t\n\treturn (\n\t\t<div id={props.player.id} className={styles.playerLine}>\n\t\t\t<div\n\t\t\t\tclassName={['playerInfo', styles.playerInfo, !props.player.active ? styles.playerInactive : ''].join(' ')}\n\t\t\t\tstyle={{\n\t\t\t\t\tgridColumn: props.round && !props.allowNewPlayers ? '1 / span 3' : undefined\n\t\t\t\t}}\n\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => props.setDisplayPlayer((e.target as HTMLDivElement).parentElement.id)}\n\t\t\t>\n\t\t\t\t{displayName} ({props.player.rating.toString()}) {props.round && (props.player.played < props.round) ? '*' : ''}\n\t\t\t</div>\n\t\t\t{props.round && !props.allowNewPlayers ? null : <>\n\t\t\t\t<button name='edit' className={styles.edit} onClick={(props.editPlayer)} >\n\t\t\t\t\t<AiFillEdit />\n\t\t\t\t</button>\n\t\t\t\t{props.player.active ?\n\t\t\t\t\t<button name='cancel' className={styles.cancel} onClick={(props.clearPlayer)}>\n\t\t\t\t\t\t<AiOutlineClose />\n\t\t\t\t\t</button> :\n\t\t\t\t\t<button name='active' className={styles.activate} onClick={(props.activatePlayer)}>\n\t\t\t\t\t\t<AiOutlineCheck />\n\t\t\t\t\t</button>\n\t\t\t\t}\n\t\t\t</>}\n\t\t</div>\n\t);\n\n}\n\ninterface FormProps {\n\tid: string\n\tplayer?: Player,\n\trequireLastName: boolean\n\tonSubmit: (e: React.FormEvent<HTMLFormElement>) => Promise<void>\n\tonKeyDown?: (e: React.KeyboardEvent<HTMLFormElement>) => void\n    handlePaste?: (e: React.ClipboardEvent<HTMLInputElement>) => void\n    action: string\n}\n\nexport function EditableForm(props: FormProps) {\n\n    const firstInput = createRef() as React.RefObject<HTMLInputElement>;\n    const [focus, mustFocus] = useState(false);\n\n    useEffect(() => {\n        if (!focus && !props.player) return;\n        if (!firstInput.current) return;\n        firstInput.current.focus();\n    }, [firstInput])\n\t\n\treturn (\n\t\t<div className={styles.scoreSection}>\n\t\t\t<form\n\t\t\t\ttarget='_self'\n\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\tonSubmit={(e) => props.onSubmit(e).then(() => mustFocus(true))}\n\t\t\t\tmethod='POST'\n\t\t\t\taction={props.action}\n\t\t\t>\n                <input type='text' className={styles.input} name='firstName' required style={{width: props.requireLastName ? '25%' : '65%'}}\n                    ref={firstInput}\n\t\t\t\t\tplaceholder={props.player ? undefined : props.requireLastName ? 'First name' : 'Team name'}\n\t\t\t\t\tdefaultValue={props.player?.firstName}\n\t\t\t\t\tonPaste={props.handlePaste}\n\t\t\t\t/>\n\t\t\t\t<input type='text' className={styles.input} name='lastName' required={props.requireLastName} style={{width: '40%', display: props.requireLastName ? 'block' : 'none'}}\n\t\t\t\t\tplaceholder={props.player ? undefined : 'Last name'}\n\t\t\t\t\tdefaultValue={props.player?.lastName} \n\t\t\t\t/>\n\t\t\t\t<input type='number' className={styles.input} min={0} max={3200} name='rating' required style={{width: '20%'}}\n\t\t\t\t\tplaceholder={props.player ? undefined : props.requireLastName ? 'Rating' : 'Av. Rating'}\n\t\t\t\t\tdefaultValue={props.player?.rating}\n\t\t\t\t/>\n\t\t\t\t<input type='hidden' name='id' value={props.player?.id} required/>\n\t\t\t\t<button tabIndex={-1} className={styles.submit}>\n\t\t\t\t\t<AiOutlineCheck />\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default function Sidebar(props: SidebarProps): ReactElement {\n\n\tconst [round, setRound] = useState(0);\n\tconst [players, setPlayersRaw] = useState({} as TournamentPlayers);\n\tconst [linkedState, setLinkedState] = useState({} as TournamentStandings);\n\n\t/** UPDATES SECTION */\n\n\tconst updatePlayerState = useCallback((): Promise<TournamentStandings> => {\n\t\tif (!props.id) return Promise.resolve({} as TournamentStandings);\n\t\treturn GET({ url: '/tournament/' + props.id + '/getState' })\n\t\t\t.then(({round, players}: {round: number, players: TournamentStandings}) => {\n\t\t\t\tsetLinkedState(players);\n\t\t\t\tsetRound(round);\n\t\t\t\treturn players;\n\t\t\t});\n\t}, [props.id]);\n\n\t/**\n\t * The fundamental method. Called everytime there's a change to the player list. The backbone of this element.\n\t */\n\tconst setPlayers = useCallback(async (refresh?: boolean | void): Promise<void> => {\n\t\tlet state = refresh !== false ? await updatePlayerState() : linkedState;\n\t\tif (!state) return Promise.resolve();\n\t\tlet players = {} as TournamentPlayers;\n\t\tfor (let [k, v] of Object.entries(state)) {\n\t\t\tplayers[k] = v.map((id: string) => {\n\t\t\t\tlet player = props.playerDict.get(id);\n\t\t\t\t//if (!player) console.error('Unmatched ID: ' + id);\n\t\t\t\treturn player;\n\t\t\t}).sort((a: Player, b: Player) => b.rating - a.rating).filter((v) => v);\n\t\t}\n\t\tsetPlayersRaw(players);\n\t\tprops.checkIfEnoughPlayers(false);\n\t}, [updatePlayerState, props.playerDict, props.checkIfEnoughPlayers, linkedState]);\n\n\t/** CALLBACK SECTION */\n\t\n\tconst updatePlayer = useCallback((id: ID): Promise<Player> => {\n\t\treturn GET({\n\t\t\turl: '/tournament/' + props.id + '/fetchPlayer',\n\t\t\tparams: { id }\n\t\t})\n\t\t\t.then((player: Player) => {\n\t\t\t\tprops.setPlayerDict({player});\n\t\t\t\treturn player;\n\t\t\t});\n\t}, [props.id, props.setPlayerDict]);\n\n\tconst activatePlayer = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n\t\tlet button = e.target as HTMLButtonElement;\n\t\tif (button.constructor.name !== 'HTMLButtonElement') return;\n        let id = (button.parentNode as HTMLDivElement).id;\n\t\tPOST({\n\t\t\turl: '/tournament/' + props.id + '/activatePlayer',\n\t\t\tdata: { id }\n\t\t})\n\t\t\t.then(() => updatePlayer(id))\n\t\t\t.catch(console.error);\n\t}, [props.id, updatePlayer]);\n\n\t/**\n\t * Clears a single page. Called when the 'X' button is hit next to a player\n\t */\n\tconst clearPlayer = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n\t\tlet button = e.target as HTMLButtonElement;\n\t\tif (button.constructor.name !== 'HTMLButtonElement') return;\n\t\tlet id = (button.parentNode as HTMLDivElement).id;\n\t\tPOST({\n\t\t\turl: '/tournament/' + props.id + '/clearPlayer',\n\t\t\tdata: { id }\n\t\t})\n\t\t\t.then((data: string) => {\n                if (data === 'inactive') updatePlayer(id);\n                else props.setPlayerDict({id});\n            })\n\t\t\t.catch(console.error);\n\t}, [updatePlayer, props.id]);\n\n\t/**\n\t * Clears all players. Called when the 'X' button is pressed at the bottom of the sidebar\n\t */\n\tconst clearPlayerList = useCallback(async (): Promise<void> => {\n\t\tawait POST({ url: '/tournament/' + props.id + '/clearPlayers' }).catch(console.error);\n\t\tprops.checkIfEnoughPlayers();\n\t}, [props.id, props.checkIfEnoughPlayers]);\n\t\n\tconst requireLastName = useMemo(() => props.settings.competitors === 'individual', [props.settings.competitors]);\n\n\t/* RENDERING SECTION */\n\n\tconst handlePaste = useCallback((e: React.ClipboardEvent<HTMLInputElement>) => {\n\t\tlet text = e.clipboardData.getData('text').toString();\n\t\tif (!text.trim()) return;\n\t\tif (!text.split('\\n').length && text.split(',').length && text.split('\\t').length) return;\n\t\te.preventDefault();\n\t\tlet json = CSV.parse(text, {\n\t\t\tdelimitersToGuess: [',', '\\t'],\n\t\t\tdynamicTyping: true,\n\t\t\tfastMode: true\n\t\t} as CSV.ParseConfig) as CSV.ParseResult;\n\t\tif (json.data.length > 100) return console.error('Can\\'t paste more than 100 players at once!');\n\t\tlet data = json.data.map((row) => {\n\t\t\tlet [firstName, lastName, rating]: [string, string, number] = row;\n\t\t\tif (!requireLastName) [firstName, rating, lastName] = [...row, ''];\n\t\t\tif (!firstName || (!lastName && requireLastName) || rating === null || rating === undefined) return null;\n\t\t\ttry {\n\t\t\t\tif (typeof firstName !== 'string') throw [firstName, 'string'].join(',');\n\t\t\t\tif (typeof lastName !== 'string' && requireLastName) throw [lastName, 'string'].join(',');\n\t\t\t\tif (typeof rating !== 'number') throw [rating, 'number'].join(',');\n\t\t\t\treturn {firstName, lastName, rating};\n\t\t\t} catch (error) {\n\t\t\t\tif (!text.split('\\n').length) return null;\n\t\t\t\tlet e = error.split(',');\n\t\t\t\tconsole.error(new TypeError('Bad input on row ' + row.join(',') + '\\n' + e[0] + ' is not type ' + e[1]));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t})\n\t\t\t.filter(r => r);\n\t\tPOST({\n\t\t\turl: 'tournament/' + props.id + '/appendPlayers',\n\t\t\tdata\n\t\t})\n\t\t\t.then(() => Promise.all([props.updatePlayerDict(), setPlayers()]));\n\t}, [props.id, requireLastName, props.updatePlayerDict, setPlayers]);\n\n\tconst Forms = useMemo((): JSX.Element[] => {\n\n\t\tlet forms = [] as JSX.Element[];\n\t\t\n\t\tfor (let i = 0; i < Math.max(1, 10 - Object.values(players).reduce((acc: number, curr: Player[]) => acc += curr.length, 0)); i++) {\n\t\t\tforms.push(\n\t\t\t\t<EditableForm\n\t\t\t\t\tkey={['newPlayerForm', i].join('.')}\n\t\t\t\t\tid={props.id}\n\t\t\t\t\tplayer={null}\n\t\t\t\t\trequireLastName={requireLastName}\n\t\t\t\t\tonSubmit={(e: FormEvent<HTMLFormElement>): Promise<void> => FORM(e)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tlet form = e.target as HTMLFormElement;\n\t\t\t\t\t\t\tform.reset();\n\t\t\t\t\t\t})\n                        .then(() => props.updatePlayerDict())\n                    }\n                    handlePaste={i ? undefined : handlePaste}\n                    action={url.resolve(server, ['tournament', props.id, 'appendPlayer'].join('/'))}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn forms;\n    }, [props.updatePlayerDict, props.id, requireLastName, players, handlePaste]);\n    \n    function Entry(entryProps: { player: Player }): ReactElement {\n\n        const [edit, setEdit] = useState(false);\n        const [player, setPlayer] = useState(entryProps.player);\n\n        if (edit) return <EditableForm\n            id={props.id}\n            requireLastName={requireLastName}\n            player={player}\n            onKeyDown={(e: React.KeyboardEvent<HTMLFormElement>) => {\n                const ESCAPE_KEY = 27;\n                if (e.keyCode !== ESCAPE_KEY) return;\n                setEdit(false);\n            }}\n            onSubmit={async (e: FormEvent<HTMLFormElement>): Promise<void> => FORM(e)\n                .then(async () => {\n                    let newPlayer = await updatePlayer(player.id);\n                    setPlayer(newPlayer);\n                    setEdit(false);\n                })\n            }\n            action={url.resolve(server, ['tournament', props.id, 'editPlayer'].join('/'))}\n        />\n\n        return <ActivePlayer\n            player={player}\n            round={round}\n            requireLastName={requireLastName}\n            editPlayer={() => setEdit(true)}\n            activatePlayer={activatePlayer}\n            clearPlayer={clearPlayer}\n            allowNewPlayers={props.settings.allowNewPlayers}\n            setDisplayPlayer={props.setDisplayPlayer}\n        />\n    }\n\n\tconst List = useMemo((): ReactElement[] => {\n\t\tlet list = [] as ReactElement[];\n\t\tfor (let i = round; i >= 0; i-= 0.5) {\n\t\t\tlet score = i.toString();\n            if (!players[score] || !players[score].length) continue;\n            let section = <CollapsableSection\n                key={['sidebar', 'round', score].join('.')}\n                header={score + ' points'}\n                useInternalState={true}\n                id={['container', score].join('.')}\n            >\n                {players[score].map((p) => <Entry key={p.id} player={p} />)}\t\n            </CollapsableSection>\n            list.push(section);\n\t\t}\n\t\treturn list;\n    }, [round, players, requireLastName, props.settings.allowNewPlayers]);\n\n    useEffect(() => {\n        if (!props.playerDict.size) return;\n        setPlayers();\n        props.checkIfEnoughPlayers(false);\n    }, [props.playerDictKey]);\n\n\treturn (\t\t\n        <>\t\n            <div className={styles.sidebar}>\n                <div className={styles.topBanner}>\n                    Tournament Players\n                </div>\t\n                <div className={styles.playersSection}>\n                    {!List.length ? <div className={styles.scoreSection}>\n                        <div className={styles.playerLine}>\n                            <div className={styles.sectionHeader}>\n                                {List.length ? 'Player List' :'No players added yet'}\n                            </div>\n                        </div>\n                    </div> : null}\n                    {List}\n                    {round && !props.settings.allowNewPlayers ? null :\n                        <div className={styles.scoreSection}>\n                            {Forms}\n                        </div>\n                    }\n                    <SectionBreak />\n                </div>\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                {Bottom(\n                    [async () => {\n                        props.togglePasteInput();\n                    }, <MdMenu />, 'paste'],\n                    [async () => {\n                        props.updatePlayerDict(true);\n                    }, <MdRefresh />, 'refresh'],\n                    round === 0 ? [async () => { /*\n                        for (let form of Object.values(this.refs)) {\n                            if (form.constructor.name !== 'HTMLFormElement') continue;\n                            (form as HTMLFormElement).reset();\n                        }*/\n                        if (round !== 0) return;\n                        await clearPlayerList();\n                        props.updatePlayerDict();\n                        setPlayers();\n                    }, <IoMdClose />, 'close'] : null\n                )}\n            </div>\n        </>\n\t);\n};","import React, { ReactElement, useCallback, useState, useEffect, useMemo, createRef, FormEvent } from 'react';\nimport { GET, server, POST } from '../utils/requests';\nimport { Player, TournamentSettings, ID, History, PairingObject } from '../interfaces';\nimport url from 'url';\n\nimport styles from '../css/profile.module.css';\nimport sidebarStyles from '../css/sidebar.module.css';\nimport { IoMdClose } from 'react-icons/io';\nimport { Bottom } from '../components/Buttons';\nimport CollapsableSection, { SectionBreak } from '../components/CollapsableSection';\nimport { AiOutlineCheck, AiOutlineClose } from 'react-icons/ai';\nimport { AxiosRequestConfig } from 'axios';\n\ninterface ActiveProps {\n\tplayer: Player\n    clearClash: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n    setDisplayPlayer: (id: string) => void\n\trequireLastName: boolean\n}\n\nexport function ActivePlayer(props: ActiveProps): ReactElement {\n\n\tconst displayName = props.requireLastName ?\n\t\t[props.player.firstName, props.player.lastName].join(' ') :\n\t\tprops.player.firstName;\n\t\n\treturn (\n\t\t<div id={props.player.id} className={[sidebarStyles.playerLine, styles.playerLine].join(' ')}>\n\t\t\t<div\n\t\t\t\tclassName={['playerInfo', sidebarStyles.playerInfo].join(' ')}\n\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => props.setDisplayPlayer((e.target as HTMLDivElement).parentElement.id)}\n\t\t\t>\n\t\t\t\t{displayName}\n\t\t\t</div>\n\t\t\t{\n                <button name='cancel' className={[sidebarStyles.cancel, styles.cancel].join(' ')} onClick={(props.clearClash)}>\n                    <AiOutlineClose />\n                </button>\n            }\n\t\t</div>\n\t);\n\n}\n\ninterface FormProps {\n\tid: string\n\tonSubmit: (e: React.FormEvent<HTMLFormElement>) => Promise<void>\n    action: string\n    player: Player\n    players: Player[]\n    getDisplayName: (player: string) => string\n}\n\nexport function SingleClash(props: FormProps) {\n\n    const firstInput = createRef() as React.RefObject<HTMLInputElement>;\n    const [focus, mustFocus] = useState(false);\n\n    useEffect(() => {\n        if (!focus) return;\n        if (!firstInput.current) return;\n        firstInput.current.focus();\n    }, [firstInput, focus]);\n\n    const handleInput = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n        let input = e.target as HTMLInputElement;\n        let text = input.value;\n        if (!text.trim()) return;\n        let length = text.length;\n        let choices = props.players.filter(p => p.id !== props.player.id && props.getDisplayName(p.id).toLowerCase().startsWith(text.toLowerCase()));\n        let firstChoice = choices[0];\n        if (!firstChoice) return;\n        let autofill = props.getDisplayName(firstChoice.id);\n        input.value = autofill;\n        input.select();\n        input.setSelectionRange(length, autofill.length, 'forward');\n    }, [props.players])\n\t\n\treturn (\n\t\t<div className={styles.scoreSection}>\n\t\t\t<form\n\t\t\t\ttarget='_self'\n\t\t\t\tonSubmit={(e) => props.onSubmit(e).then(() => mustFocus(true))}\n\t\t\t\tmethod='POST'\n\t\t\t\taction={props.action}\n\t\t\t>\n                <input type='text' className={[sidebarStyles.input, styles.input].join(' ')} name='oppName' required\n                    placeholder='Opponent name'\n                    onInput={handleInput}\n                    autoComplete={'off'}\n\t\t\t\t/>\n\t\t\t\t<button tabIndex={-1} className={sidebarStyles.submit}>\n\t\t\t\t\t<AiOutlineCheck />\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\ninterface ProfileProps {\n\tid: string\n\tplayerID: string\n\tsetDisplayPlayer: (id: string) => void\n\tplayerDict: Map<ID, Player>\n\tmodifyPlayerDict: (p: Player, hash: string) => void\n\tsettings: TournamentSettings\n\tplayerDictKey?: string\n}\n\nexport default function Profile(props: ProfileProps): ReactElement {\n    \n    const [playerID, setPlayerID] = useState('');\n    const [player, setPlayer] = useState(null as Player);\n\n    const requireLastName = useMemo(() => props.settings.competitors === 'individual', [props.settings.competitors]);\n\n\tconst updatePlayerFromProps = (refetch?: boolean) => {\n\t\tsetPlayerID(playerID);\t\t\n\t\tif (!props.playerID) {\n\t\t\tsetPlayer(null as Player);\n\t\t\treturn;\n\t\t}\n\t\tif (refetch === false) {\n\t\t\tsetPlayer(props.playerDict.get(props.playerID));\n\t\t} else {\n\t\t\treturn GET({\n\t\t\t\turl: '/tournament/' + props.id + '/fetchPlayer',\n\t\t\t\tparams: {\n\t\t\t\t\tid: props.playerID\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then((_player: Player) => {\n\t\t\t\t\tif (!_player.histories[0]) _player.histories[0] = null;\n\t\t\t\t\tsetPlayer(_player);\n\t\t\t\t});\n\t\t}\n\t}\n\n\tconst getNameFromPlayer = useCallback((_player: Player): string  =>{\n\t\tif (!_player) return '\\u200b';\n\t\tif (requireLastName) return [_player.firstName, _player.lastName].join(' ');\n\t\telse return _player.firstName;\n\t}, [requireLastName]);\n    \n    useEffect(() => {\n        updatePlayerFromProps();\n    }, [props.playerID, props.playerDictKey])\n\n\tconst getDisplayName = useCallback((id: ID): string => {\n        if (!id) return '\\u200b';\n\t\tif (id === 'bye') return 'BYE';\n\t\tlet opp = props.playerDict.get(id);\n\t\tif (!opp) return id;\n\t\tlet displayName: string;\n\t\tif (requireLastName) displayName = [opp.firstName, opp.lastName].join(' ');\n\t\telse displayName = opp.firstName;\n\t\treturn displayName;\n    }, [props.playerDict, requireLastName]);\n    \n    const renderEntry = useCallback(([k, v]: [string, any], i: number): ReactElement => {\n        if (k === 'Playing' && v) {\n            return (\n                <div className={styles.row} key={['row', i].join('.')}>\n                    <div className='fieldBox'>{k + ':'}</div>\n                    <div\n                        className='playerInfo'\n                        id={v as string}\n                        onClick={(e: React.MouseEvent<HTMLDivElement>) => props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n                    >{getDisplayName(v)}</div>\n                </div>\n            );\n        } else {\n            return (\n                <div className={styles.row} key={['row', i].join('.')}>\n                    <div className='fieldBox'>{k + ':'}</div>\n                    <div className='fieldBox'>{v !== null && v!== '' ? v : '\\u200b'}</div>\n                </div>\n            );\n        }\n    }, [props.setDisplayPlayer, getDisplayName]);    \n\n    const [clashes, setClashes] = useState([] as PairingObject[]);\n\n    const updateClashes = useCallback(async () => {\n        if (!player || !player.id) return;\n        GET({\n            url: '/tournament/' + props.id + '/fetchClashes',\n            params: { id: player.id }\n        })\n            .then(setClashes)\n    }, [props.id, setClashes, player]);\n    const clearClash = useCallback(async (oppId) => POST({\n        url: '/tournament/' + props.id + '/clearClash',\n        data: {\n            playerId: player.id,\n            oppId\n        }\n    })\n        .then(updateClashes), [props.id, player, updateClashes]);\n\n    const List = useMemo((): ReactElement[] => {\n        if (!props.playerDict.size) return null;\n        let list = [] as ReactElement[];\n        for (let i = 0; i < clashes.length; i++) {\n            let opp = props.playerDict.get(clashes[i][1]);\n            if (!opp) continue;\n            list.push(<ActivePlayer\n                key={['clash', i].join('.')}\n                player={opp}\n                requireLastName={requireLastName}\n                clearClash={() => clearClash(opp.id)}\n                setDisplayPlayer={props.setDisplayPlayer}\n            />);\n        }\n        return list;\n    }, [props.playerDict, props.playerDictKey, clashes, clearClash, props.setDisplayPlayer, requireLastName]);\n\n    useEffect(() => {\n        updateClashes();\n    }, [updateClashes]);\n\n    const players = useMemo(() => Array.from(props.playerDict.values()), [props.playerDict, props.playerDictKey]);\n\n    if (!player) return null;\n    let Name = getNameFromPlayer(player);\n    const profile = !player ? {} : {\n        'Unique ID': player.id,\n        Status: player.active !== false ? 'Active' : 'Inactive',\n        Rating: player.rating,\n        'Performance rating': player.performanceRating,\n        Playing: player.isPlaying\n    };\n    let history = player.histories;\n\n    const total = (Math.max(player.histories.length, 1) - 1 - (player.isPlaying ? 1 : 0)).toString();\n    const totalGames = player.histories.reduce((acc, curr) => {\n        if (!curr) return acc;\n        acc += curr.played\n        return acc;\n    }, 0);\n    const scores = !player ? {} : {\n        Score: player.score.toString() + ' / ' + total,\n        'Game score': player.gamePoints.toString() + ' / ' + totalGames.toString(),\n        'Expected score': player.expectedScore.toFixed(2),\n        'Expected game score': player.expectedGameScore.toFixed(2) + ' / ' + totalGames,\n    };\n    if (!props.settings.displayPoints) {\n        delete scores['Game score'];\n        delete scores['Expected game score'];\n    }\n\n    return (\n        <>\n            <div className={styles.profile}>\t\t\n                <div className='topBanner'>\n                    {Name}\n                </div>\t\n                {Object.entries(profile).map(renderEntry)}\n                <CollapsableSection\n                    header='Score'\n                    useInternalState={true}\n                    style={{ gridColumn: '1 / span 2' }}\n                >\n                    {Object.entries(scores).map(renderEntry)}\n                </CollapsableSection>\n                {props.settings.allowClashes ? <CollapsableSection\n                    header='Forbidden Pairings'\n                    useInternalState={true}\n                    style={{ gridColumn: '1 / span 2' }}\n                >\n                    {List}\n                    <SingleClash\n                        id={props.id}\n                        getDisplayName={getDisplayName}\n                        onSubmit={(e: FormEvent<HTMLFormElement>): Promise<void> => {\n                            e.preventDefault();\n                            e.persist();\n                            let form = e.target as HTMLFormElement & { oppName: HTMLInputElement };\n                            let opp = players.find(p => getDisplayName(p.id) === form.oppName.value);\n                            let options = {\n                                data: {\n                                    playerId: player.id,\n                                    oppId: opp.id\n                                },\n                                url: form.action\n                            } as AxiosRequestConfig;\n                            return POST(options)\n                                .then(() => {\n                                    let form = e.target as HTMLFormElement;\n                                    form.reset();\n                                })\n                                .then(updateClashes)\n                        }}\n                        player={player}\n                        players={players}\n                        action={url.resolve(server, ['tournament', props.id, 'createClash'].join('/'))}\n                    />\n                </CollapsableSection> : null}\n                <CollapsableSection\n                    header='Results'\n                    useInternalState={true}\n                    style={{ gridColumn: '1 / span 2' }}\n                >\n                    {history.map((minPlayer: History, i: number): ReactElement => {\n                        if (i === 0 || !minPlayer) return null;\n                        let { id, colour } = minPlayer;\n                        let result = minPlayer[props.settings.displayPoints];\n                        return (\n                            <div className={styles.resultsRow} key={['row', 'history', i].join('.')}>\n                                <div className='fieldBox'>{i}</div>\n                                <div\n                                    className='playerInfo'\n                                    id={id}\n                                    onClick={(e: React.MouseEvent<HTMLDivElement>) => props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n                                >{getDisplayName(id)}</div>\n                                <div className='fieldBox'>{colour || '\\u200b'}</div>\n                                <div className='fieldBox'>{typeof result !== 'undefined' && result !== null ? result : '\\u200b'}</div>\n                            </div>\n                        );\n                    })}\n                </CollapsableSection>\n                <SectionBreak />\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                {Bottom([() => props.setDisplayPlayer(''), <IoMdClose />, 'close'])}\n            </div>\t\n        </>\n    );\n}","import React, { ReactElement, useEffect, useState, useMemo, useCallback } from 'react';\nimport { EditableField } from '../components/';\nimport { TournamentSettings, TournamentStatus, Player } from '../interfaces';\nimport url from 'url';\n\nimport styles from '../css/profile.module.css';\nimport { server, POST } from '../utils/requests';\nimport { defaultSettings, TournamentSetting } from '../assets/settings';\nimport { capitalise } from '../utils/prototype';\nimport { Bottom } from '../components/Buttons';\nimport { IoMdClose } from 'react-icons/io';\nimport CollapsableSection, { SectionBreak } from '../components/CollapsableSection';\n\ninterface SettingsProps {\n\tupdateTournamentSettings: () => Promise<void>\n\tupdateSetting: (k: string, v: any) => Promise<void>\n\tupdateRounds: () => Promise<void>\n\tstatus: TournamentStatus\n\tsettings: TournamentSettings\n\ttoggleSettings: () => void\n\tsetLastRound: (override: boolean) => void // need to include a method to cancel a last round token when the total rounds is incremented\n\ttriggerError: (message: string) => void\n\tplayers: Player[]\n\trounds: Date[]\n}\n\nconst watchProps = Object.values(defaultSettings).reduce((acc, curr) => {\n    for (let def of Object.values(curr)) {\n        if (def.show) acc.push(...Object.keys(def.show));\n    }\n    return acc;\n}, []) as (keyof TournamentSettings)[];\n\nfunction modifyHeightValues (): void {\n    let headers = Array.from(document.querySelectorAll('.' + [styles.sectionListWrapper].join('.'))) as HTMLDivElement[];\n    for (let h of headers) {\n        let list = h.firstElementChild as HTMLDivElement;\n        h.style.height = h.className.includes(styles.expanded) ? list.getBoundingClientRect().height + 'px' : '0px';\n    }\n};\n\nexport default function Settings(props: SettingsProps): ReactElement {\n\n    const [sectionExpando, setSection] = useState('general');\n\n\tconst handleToggle = useCallback((k: string, v: any, def: {\n\t\tname?: string,\n\t\tenum?: string[],\n\t\tconvert?: (v: any) => string,\n\t\ttype?: string,\n\t\tlocked?: boolean,\n\t\tlockOnInit?: boolean\n\t}) => {\n\t\ttry {\n\t\t\tlet value: any;\n\t\t\tif (def.enum) {\n\t\t\t\tlet index = def.enum.indexOf(v);\n\t\t\t\tif (index === -1) console.error('Invalid setting value ' + k + ': ' + v);\n\t\t\t\tlet setIndex = (index + 1) % def.enum.length;\n\t\t\t\tvalue = def.enum[setIndex];\n\t\t\t} else\n\t\t\tif (def.type === 'boolean') {\n\t\t\t\tvalue = !v;\n\t\t\t} else\n\t\t\tif (def.type === 'number') {\n\n\t\t\t\tif (v === 'Infinity') value = Infinity as number;\n\t\t\t\telse if (v === '∞') value = Infinity as number;\n\t\t\t\telse v = Number(v) as number;\n\n\t\t\t\tif (k === 'totalRounds') {\n\t\t\t\t\tif (v <= props.status.round) throw new Error('Can\\'t make total number of rounds less than current round number');\n\t\t\t\t\tif (v !== Infinity && v >= 100) throw new Error('Can\\'t make total number of rounds more than 100');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tprops.updateSetting(k, value);\n\t\t} catch (e) {\n\t\t\tif (e && e.message) props.triggerError(e.message);\n\t\t}\n    }, [props.status.round, props.updateSetting, props.triggerError]);\n    \n    const clearRound = useCallback((round: number): Promise<void> => {\n        return POST({\n            url: '/tournament/' + props.status.id + '/clearRound',\n            data: { round }\n\t\t});\n    }, [props.status.id]);\n\n    const watchedSettings = useMemo(() => Object.entries(props.settings).filter(([k]) => watchProps.includes(k as keyof TournamentSettings)), [props.settings])\n    \n    useEffect(() => {\n        modifyHeightValues();\n    }, [JSON.stringify(watchedSettings)]);\n\n    \n    const renderRound = useCallback((i: number) => {\n        return (\n            <div className={[styles.row, styles.roundRow].join(' ')} key={['row', i].join('.')}>\n                <div className='fieldBox'>\n                    {`Round ${i}:`}\n                </div>\n                <EditableField\n                    handleSubmit={props.updateSetting}\n                    handleClear={() => clearRound(i)}\n                    content={props.rounds[i] ? props.rounds[i].toString() : ''}\n                    defaultEditContent={new Date(Date.now()).toISOString()}\n                    url={url.resolve(server, ['tournament', props.status.id, 'updateRound'].join('/'))}\n                    inputType='datetime-local'\n                    onSubmitSuccess={(e) => {\n                        props.updateRounds();\n                        return e;\n                    }}\n                    additionalStyles={{\n                        editableField: styles.editableField,\n                        input: styles.input,\n                    }}\n                    additionalInputProps={{}}\n                    name={i.toString()}\n                    show={{\n                        submit: true,\n                        increment: false,\n                        clear: true\n                    }}\n                />\n            </div>\n        );\n    }, [props.updateSetting, props.rounds, props.status.id, props.updateRounds]);\n\n\tconst renderEntry = useCallback((([k, def]: [keyof TournamentSettings, TournamentSetting], i: number): ReactElement => {\n        let hidden = false;\n        if (def.show) {\n            for (let [k, v] of Object.entries(def.show)) {\n                let value = props.settings[k as keyof TournamentSettings];\n                if (value !== v) hidden = true;\n            }\n        }\n        if (hidden) return null;\n        \n\t\tlet locked = false;\n\t\tif (def.locked) locked = true;\n        else if (def.lockOnInit && props.status.round) locked = true;\n        \n        let v = props.settings[k as keyof TournamentSettings] ?? def.defaultValue;\n\t\tlet content = def.convert && !def.value ? def.convert(v) : v as string;\n        let displayContent = typeof content !== 'undefined' ? content.toString() : '\\u200b';\n\t\treturn (\n\t\t\t<div className={styles.row} key={['row', i].join('.')}>\n\t\t\t\t<div className={['fieldBox', def.show ? styles.semiPresent : ''].join(' ')}>\n\t\t\t\t\t{def.name}\n\t\t\t\t\t{def.name.endsWith('?') ? '' : ':'}\n\t\t\t\t</div>\n\t\t\t\t{(() => {\n\t\t\t\t\tif (locked || def.value) {\n                        if (def.value) displayContent = def.value(props.status, props.players);\n                        if (def.convert) displayContent = def.convert(displayContent);\n                        return <div\n                            style={{\n                                cursor: def.type === 'link' ? 'copy' : 'default'\n                            }}\n                            className={['fieldBox', styles.locked].join(' ')}\n                            onClick={def.type !== 'link' ? null : () => navigator.clipboard.writeText(displayContent)}\n                        >\n\t\t\t\t\t\t\t{displayContent}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t} else\n\t\t\t\t\tif (def.type === 'number') {\n\t\t\t\t\t\treturn <EditableField\n\t\t\t\t\t\t\thandleSubmit={props.updateSetting}\n\t\t\t\t\t\t\tcontent={displayContent}\n\t\t\t\t\t\t\turl={url.resolve(server, ['tournament', props.status.id, 'updateSetting'].join('/'))}\n\t\t\t\t\t\t\tinputType='number'\n\t\t\t\t\t\t\tonSubmitSuccess={(e) => {\n\t\t\t\t\t\t\t\tprops.updateTournamentSettings();\n\t\t\t\t\t\t\t\treturn e;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tadditionalStyles={{\n\t\t\t\t\t\t\t\teditableField: styles.editableField,\n\t\t\t\t\t\t\t\tinput: styles.input\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tname={k}\n\t\t\t\t\t\t\tadditionalInputProps={def.nb}\n\t\t\t\t\t\t\tshow={{\n\t\t\t\t\t\t\t\tsubmit: true,\n\t\t\t\t\t\t\t\tincrement: true,\n\t\t\t\t\t\t\t\t...def.allow\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn <div\n\t\t\t\t\t\t\tclassName={['fieldBox', styles.editable].join(' ')}\n\t\t\t\t\t\t\tonClick={() => handleToggle(k, v, def)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{displayContent}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t})()}\n\t\t\t</div>\n\t\t);\n\t}), [props.settings, props.status, props.players, props.updateSetting, props.status.id, props.updateTournamentSettings]);\n\n\n    let roundEntries = [];\n    let length = props.settings.totalRounds === Infinity || props.settings.totalRounds === 'Infinity' ? Math.max(props.rounds.length, 1) : props.settings.totalRounds;\n    for (let i = 1; i <= length; i++) roundEntries.push(i);\n\n    return (\n        <>\n            <div className={styles.profile} >\t\t\t\t\n                <div className='topBanner'>\n                    Settings\n                </div>\n                {Object.entries(defaultSettings).map(([section, data]): ReactElement => {\n                    return (\n                        <CollapsableSection\n                            key={section}\n                            value={section}\n                            header={capitalise(section)}\n                            expanded={sectionExpando === section}\n                            setExpanded={(state: boolean, action: string) => setSection(state ? action : '')}\n                        >\n                            {(Object.entries(data) as [keyof TournamentSettings, TournamentSetting][])\n                                .map(renderEntry)}\n                        </CollapsableSection>\n                    )\n                })}\n                {props.settings.roundTimes ? <CollapsableSection\n                    key={'rounds'}\n                    value={'rounds'}\n                    header={'Rounds'}\n                    expanded={sectionExpando === 'rounds'}\n                    setExpanded={(state: boolean, action: string) => setSection(state ? action : '')}\n                >\n                    {roundEntries.map(renderRound)}\n                </CollapsableSection> : null}\n                <SectionBreak />\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                {Bottom([\n                    props.toggleSettings,\n                    <IoMdClose />,\n                    'close'\n                ])}\n            </div>\n        </>\n    );\n}","import React, { ReactElement } from 'react';\nimport Grid from '../components/Grid';\nimport { TournamentStatus, Player, TournamentSettings } from '../interfaces';\n\nimport styles from '../css/crosstable.module.css';\nimport { MdExitToApp } from 'react-icons/md';\n\nexport default class CrossTable extends React.Component<{\n\tsetDisplayPlayer: (id: string) => void\n\tshow: () => void\n\tstatus: TournamentStatus\n\tplayers: Player[]\n\tsettings: TournamentSettings\n}, {\n\tsortValue: string,\n\tbyRounds: boolean\n}> {\n\n\tpublic state = {\n\t\tsortValue: 'score',\n\t\tbyRounds: true\n\t}\n\n\tget bodyByRobin(): JSX.Element[][] {\n\t\treturn [[]];\n\t}\n\n\tget totalRounds():number {\n\t\tlet totalRounds: number;\n\t\tif (this.props.status.round > this.props.settings.totalRounds) totalRounds = this.props.status.round;\n\t\telse if (this.props.settings.totalRounds === 'Infinity') totalRounds = this.props.status.round;\n\t\telse totalRounds = this.props.settings.totalRounds;\n\t\treturn totalRounds;\n\t}\n\n\theader(): {[key: string]: string} {\n\t\tlet rounds = [] as string[];\n\t\t\n\t\tfor (let i = 1; i <= this.totalRounds; i++) {\n\t\t\trounds.push((i).toString());\n\t\t}\n\t\treturn {\n\t\t\tid: '',\n\t\t\tname: 'Name',\n\t\t\trating: 'Rating',\n\t\t\t...Object.entries(rounds).reduce((acc, [k, v]) => { acc['score.' + k] = v; return acc;}, {} as {[key: string]: string}),\n\t\t\tprettyScore: 'Score',\n\t\t\twinPercentage: 'TB',\n\t\t\tperformanceRating: 'Perf',\n\t\t\tratingDifference: 'P. +/-',\n\t\t\texpectedScore: 'Expected',\n\t\t\texpectedDifference: 'E. +/-'\n\t\t}; //{[key: string]: {name: string, sortable: boolean, headerClass: string, bodyClass: string}}\n\t}\n\n\tpublic handleHeaderClick = (sortValue: string): void => {\n\t\tif (sortValue.startsWith('score.')) return;\n\t\tif (sortValue === 'expectedScore') return;\n\t\tif (sortValue === 'prettyScore') sortValue = 'score';\n\t\tthis.setState({ sortValue });\n\t}\n\n\tprivate calcLength = 6;\n\n\tclassNames(): string[] {\n\t\tlet rounds = [] as string[];\n\t\tfor (let i = 1; i <= this.totalRounds; i++) {\n\t\t\trounds.push(styles.resultsCell);\n\t\t}\n\t\treturn [\n\t\t\t'',\n\t\t\t'',\n\t\t\t...rounds,\n\t\t\t'',\n\t\t\t'',\n\t\t\t'',\n\t\t\t'',\n\t\t\t'',\n\t\t\t''\n\t\t];\n\t}\n\n\tbodyByRounds(state: { sortValue: string }): JSX.Element[][] {\n\t\treturn this.props.players\n\t\t\t.map((p) => {\n\t\t\t\tlet scores = [] as string[];\n\t\t\t\tfor (let j = 1; j <= this.totalRounds; j++) {\n\t\t\t\t\tlet minPlayer = p.histories[j];\n\t\t\t\t\tif (!j) continue;\n\t\t\t\t\telse if (!minPlayer) scores.push('');\n\t\t\t\t\telse if (typeof minPlayer.match !== 'number') scores.push('*');\n\t\t\t\t\telse if (minPlayer.match === 0.5) scores.push('½');\n\t\t\t\t\telse if (minPlayer.oppRating === undefined) scores.push(minPlayer.match.toString() + ('b'));\n\t\t\t\t\telse scores.push(minPlayer.match.toString());\n\t\t\t\t}\n\t\t\t\tlet ratingDifference = p.performanceRating - p.rating;\n\t\t\t\tlet expectedDifference = p.score - p.expectedScore;\n\t\t\t\treturn {\n\t\t\t\t\tid: p.id,\n\t\t\t\t\tname: this.props.settings.competitors === 'individual' ? [p.firstName, p.lastName].join(' ') : p.firstName,\n\t\t\t\t\trating: p.rating,\n\t\t\t\t\t...Object.entries(scores).reduce((acc, [k, v]) => { acc['score.' + k] = v; return acc;}, {} as {[key: string]: string}),\n\t\t\t\t\tscore: p.score,\n\t\t\t\t\tprettyScore: p.score.toFixed(1) + ' / ' + p.played,\n\t\t\t\t\twinPercentage: p.played === 0 ? '-' : (p.score * 100 / p.played).toFixed(2),\n\t\t\t\t\tperformanceRating: p.performanceRating ? p.performanceRating.toFixed() : '',\n\t\t\t\t\tratingDifference: p.performanceRating ? ratingDifference > 0 ? '+' + ratingDifference.toString() : ratingDifference.toString() : '',\n\t\t\t\t\texpectedScore: p.expectedScore.toFixed(2) + ' / ' + p.played,\n\t\t\t\t\texpectedDifference: expectedDifference > 0 ? '+' + expectedDifference.toFixed(2) : expectedDifference.toFixed(2)\n\t\t\t\t};\n\t\t\t})\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (!(state.sortValue in a)) return 0;\n\t\t\t\tlet x: any, y: any;\n\t\t\t\tif (state.sortValue !== 'name') {\n\t\t\t\t\tx = Number((a as {[key: string]: string | number})[state.sortValue]);\n\t\t\t\t\ty = Number((b as {[key: string]: string | number})[state.sortValue]);\n\t\t\t\t} else {\n\t\t\t\t\tx = a[state.sortValue];\n\t\t\t\t\ty = b[state.sortValue];\n\t\t\t\t}\n\t\t\t\tif (x !== y) return y - x;\n\t\t\t\treturn (b.rating as number) - (a.rating as number);\n\t\t\t})\n\t\t\t.map((p, i) => {\n\t\t\t\tlet rows = [\n\t\t\t\t\t['Ranking', i.toString()],\n\t\t\t\t\t...Object.entries(p)\n\t\t\t\t];\n\t\t\t\treturn rows.filter(([k]) => {\n\t\t\t\t\tif (k === 'id') return false;\n\t\t\t\t\tif (k === 'score') return false;\n\t\t\t\t\treturn true;\n\t\t\t\t}).map(([key, value], j) => {\n\t\t\t\t\tlet isPlayer = j === 1;\n\t\t\t\t\tlet isScore = j > 2 && j < rows.length - this.calcLength;\n\t\t\t\t\treturn (\t\t\t\t\t\t\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid={isPlayer ? p.id : [value, j].join('.')}\n\t\t\t\t\t\t\tkey={[value, j].join('.')}\n\t\t\t\t\t\t\tclassName={[\n\t\t\t\t\t\t\t\tstyles.cell,\n\t\t\t\t\t\t\t\tisScore ? styles.resultsCell : '',\n\t\t\t\t\t\t\t\tisPlayer ? styles.playerBox : '',\n\t\t\t\t\t\t\t\tj === 0 ? styles.firstColumn : ''\n\t\t\t\t\t\t\t].join(' ')}\n\t\t\t\t\t\t\tonClick={!isPlayer ? () => {} : (e: React.MouseEvent<HTMLDivElement>) => this.props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{value || '\\u200b'}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\t\t\n\t}\n\n\trender(): ReactElement {\n\t\t//styles.cell.height = `calc(100vh - ${body.length + 1})`;\n\t\t\n\t\tlet body = this.state.byRounds ? this.bodyByRounds(this.state) : this.bodyByRobin;\n\t\tlet title = `Tournament '${this.props.status.name || this.props.status.id}' results after ${this.props.status.round} rounds`;\n\t\tlet subtitle = '';\n\t\treturn (\n\t\t\t<>\t\t\t\t\n\t\t\t\t<div className={styles.titles}>\n\t\t\t\t\t<div>{title}</div>\n\t\t\t\t\t<div>{subtitle}</div>\n\t\t\t\t\t<div className={['button', styles.closeButton].join(' ')} onClick={this.props.show}>\n                        <MdExitToApp />\n                    </div>\n\t\t\t\t</div>\n\t\t\t\t<Grid\n\t\t\t\t\theader={this.header()}\n\t\t\t\t\tbody={body}\n\t\t\t\t\tstyles={styles}\n\t\t\t\t\tbodyClassNames={this.classNames()}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tgridColumn: '1 / span 2'\n\t\t\t\t\t}}\n\t\t\t\t\thandleHeaderClick={this.handleHeaderClick}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\t\n\t}\n}","import React, { ReactElement, useCallback } from 'react';\nimport { TournamentSettings, TournamentStatus } from '../interfaces';\nimport CSV from 'papaparse';\n\nimport styles from '../css/crosstable.module.css';\nimport { MdExitToApp } from 'react-icons/md';\nimport { POST } from '../utils/requests';\n\ninterface PasteInputProps {\n    closePasteInput: () => void\n    status: TournamentStatus\n    settings: TournamentSettings\n    id: string\n    updatePlayerDict: () => void\n}\n\nexport default function PasteInput(props: PasteInputProps): ReactElement {\n\n    const requireLastName = false;\n\n\tconst handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        let form = e.target as HTMLFormElement;\n        let textArea = form.textArea as HTMLTextAreaElement;\n        let text = textArea.value;\n\t\tif (!text.trim()) return;\n\t\tif (!text.split('\\n').length && text.split(',').length && text.split('\\t').length) return;\n\t\tlet json = CSV.parse(text, {\n\t\t\tdelimitersToGuess: [',', '\\t'],\n\t\t\tdynamicTyping: true,\n\t\t\tfastMode: true\n\t\t} as CSV.ParseConfig) as CSV.ParseResult;\n\t\tif (json.data.length > 150) return console.error('Can\\'t paste more than 150 players at once!');\n\t\tlet data = json.data.map((row) => {\n\t\t\tlet [firstName, rating]: [string, number] = row;\n\t\t\ttry {\n\t\t\t\tif (typeof firstName !== 'string') throw [firstName, 'string'].join(',');\n\t\t\t\tif (typeof rating !== 'number') throw [rating, 'number'].join(',');\n\t\t\t\treturn {firstName, rating};\n\t\t\t} catch (error) {\n\t\t\t\tif (!text.split('\\n').length) return null;\n\t\t\t\tlet e = error.split(',');\n\t\t\t\tconsole.error(new TypeError('Bad input on row ' + row.join(',') + '\\n' + e[0] + ' is not type ' + e[1]));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t})\n            .filter(r => r);\n\t\tPOST({\n\t\t\turl: 'tournament/' + props.id + '/appendPlayers',\n\t\t\tdata\n\t\t}); /*\n\t\tPOST({\n\t\t\turl: 'tournament/' + props.id + '/appendPlayersHack',\n\t\t\tdata: json.data\n\t\t})\n\t\t\t.then(() => Promise.all([props.updatePlayerDict()]));*/\n\t}, [props.id, requireLastName, props.updatePlayerDict]);\n\t\t\n    let title = `CSV player data entry for tournament '${props.status.name || props.status.id}'`;\n    return (\n        <>\t\t\t\t\n            <div className={styles.titles}>\n                <div>{title}</div>\n                <div className={['button', styles.closeButton].join(' ')} onClick={props.closePasteInput}>\n                    <MdExitToApp />\n                </div>\n            </div>\n            <div className={styles.subheader}>\n                Please paste your input in csv (comma-separated values) format\n            </div>\n            <div className={styles.container}>\n                <form\n                    className={styles.form}\n                    target='_self'\n                    onSubmit={handleSubmit}\n                    method='POST'\n                >\n                    <textarea className={styles.textarea} name='textArea'/>                \n                    <button\n                        type='submit'\n                        className={styles.submit}\n                    >\n                        SUBMIT\n                    </button>\n                </form>\n            </div>\n        </>\n    );\n}","import React, { ReactElement, useState, useEffect, Dispatch, SetStateAction, CSSProperties, useCallback, useReducer, useMemo } from 'react';\nimport { InfoBar, Pairings, Sidebar, Profile, Settings, CrossTable, PasteInput } from './tournament';\nimport { Player, TournamentSettings, ID, TournamentStatus } from './interfaces';\nimport { GET, POST } from './utils/requests';\n\nimport styles from './css/tournament.module.css';\n\nconst defaultColumns = [30.8, 38.4, 30.8];\n\ninterface TournamentProps {\n\tid: string\n\tcloseTournament: () => void\n\ttriggerError: (message: string) => void\n}\n\nfunction dispatchEvent(eventName: string): void {\n\tlet event = document.createEvent('HTMLEvents') as Event & { eventName: string };\n\tevent.initEvent(eventName, true, true);\n\tevent.eventName = eventName;\n\tdocument.dispatchEvent(event);\n}\n\nfunction MouseEvents({ columns, boundaries, resize, setColumns, setResize, toggleSidebar, toggleSettings, setDisplayPlayerRaw }: {\n\tcolumns: number[],\n\tboundaries: number[],\n\tresize: number,\n\tsetColumns: (columns: number[]) => void\n\tsetResize: Dispatch<SetStateAction<number>>,\n\ttoggleSidebar: ({set}: { set?: boolean }) => void\n\ttoggleSettings: ({set}: { set?: boolean }) => void\n\tsetDisplayPlayerRaw: Dispatch<SetStateAction<string>>\n}): void {\n\n\tconst [mouseClick, setMouseClick] = useState(0);\n\n\tconst handleMouseMove = useCallback((e: MouseEvent) => {\n\t\tlet percentX = e.x / window.innerWidth * 100;\n\t\tif (mouseClick) {\n\t\t\tlet prev = (columns.slice(0, mouseClick - 1).reduce((acc, curr) => acc += curr, 0));\n\t\t\tlet sum = prev + columns[mouseClick - 1] + columns[mouseClick];\n\t\t\tlet left = percentX - prev;\n\t\t\tlet right = sum - percentX;\n\t\t\tlet threshold = 2;\n\t\t\tif (left < threshold) {\n\t\t\t\tright += left;\n\t\t\t\tleft = 0;\n\t\t\t\tif (mouseClick === 1) toggleSidebar({set: false});\n\t\t\t\tdispatchEvent('mouseup');\n\t\t\t} else\n\t\t\tif (right < threshold) {\n\t\t\t\tleft += right;\n\t\t\t\tright = 0;\n\t\t\t\tif (mouseClick === columns.length - 1) {\n\t\t\t\t\tsetDisplayPlayerRaw('');\n\t\t\t\t\ttoggleSettings({set: false});\n\t\t\t\t\tdispatchEvent('mouseup');\n\t\t\t\t}\n\t\t\t}\n\t\t\tcolumns[mouseClick - 1] = left\n\t\t\tcolumns[mouseClick] = right;\n\t\t\tsetColumns(columns.slice(0));\n\t\t} else {\n\t\t\tlet threshold = 1;\n\t\t\tlet index = boundaries.findIndex(b => Math.abs(b - percentX) < threshold);\n\t\t\tif (index === 0 && boundaries[0] === 0) index = -1;\n\t\t\telse if (index === boundaries.length - 1 && boundaries[boundaries.length - 1] === 100) index = -1;\n\t\t\tsetResize(index + 1);\n\t\t}\n\t}, [mouseClick, columns, setDisplayPlayerRaw, toggleSettings, setResize, setColumns, boundaries, toggleSidebar]);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('mousemove', handleMouseMove);\n\t\treturn () => document.removeEventListener('mousemove', handleMouseMove);\n\t}, [mouseClick, handleMouseMove]);\n\tuseEffect(() => {\n\t\tif (!resize) return;\n\t\tlet callback = () => setMouseClick(resize);\n\t\tdocument.addEventListener('mousedown', callback);\n\t\treturn () => document.removeEventListener('mousedown', callback);\n\t}, [resize, setMouseClick]);\n\tuseEffect(() => {\n\t\tlet callback = () => setMouseClick(0);\n\t\tdocument.addEventListener('mouseup', callback);\n\t\treturn () => document.removeEventListener('mouseup', callback);\n\t}, [resize, setMouseClick]);\n}\n\nexport default function Tournament(props: TournamentProps): ReactElement {\n\n\tconst [columns, setColumns] = useState(defaultColumns);\n\tconst [resize, setResize] = useState(0);\n\tconst boundaries = useMemo(() => \tcolumns.reduce((acc, curr) => {\n\t\tacc.push((acc[acc.length - 1] ?? 0) + curr);\n\t\treturn acc;\n\t}, [] as number[]).slice(0, -1), [columns]);\n\n\tconst [displayPlayer, setDisplayPlayerRaw] = useState('');\n    const [crossTable, setCrossTable] = useState(false);\n    const [pasteInput, setPasteInput] = useState(false);\n\tconst [lastRoundOverride, setLastRound] = useState(undefined) as [boolean | undefined, Dispatch<SetStateAction<boolean | undefined>>];\n\tconst [nextRound, toggleNextRound] = useState(false);\n\tconst toggleCrossTable = () => setCrossTable(!crossTable);\n\n\tconst reduceSidebar = useCallback((state: boolean, { set }: { set?: boolean }): boolean => {\n\t\tif (columns[0] === 0) {\n\t\t\tlet _columns = columns.slice(0);\n\t\t\t_columns[0] = defaultColumns[0];\n\t\t\tif (_columns[1] < defaultColumns[0]) _columns = defaultColumns as [number, number, number];\n\t\t\telse _columns[1] = _columns[1] - defaultColumns[0];\n\t\t\tsetColumns(_columns);\n\t\t\treturn true;\n\t\t} else return typeof set === 'boolean' ? set : !state;\n\t}, [columns, setColumns]);\n\n\tconst reduceSettings = useCallback((state: boolean, { set }: { set?: boolean }): boolean => {\n\t\tif (set !== false && boundaries[boundaries.length - 1] === 100) {\n\t\t\tlet _columns = columns.slice(0);\n\t\t\t_columns[_columns.length - 1] = defaultColumns[_columns.length - 1];\n\t\t\tif (_columns[_columns.length - 2] < defaultColumns[_columns.length - 2]) _columns = defaultColumns as [number, number, number];\n\t\t\telse _columns[_columns.length - 2] = _columns[_columns.length - 2] - defaultColumns[_columns.length - 1];\n\t\t\tsetColumns(_columns);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif (!state) setDisplayPlayerRaw('');\n\t\t\treturn typeof set === 'boolean' ? set : !state;\n\t\t};\n\t}, [columns, setDisplayPlayerRaw, boundaries]);\n\t\n\tconst [sidebar, toggleSidebar] = useReducer(reduceSidebar, true);\n\tconst [showSettings, toggleSettings] = useReducer(reduceSettings, true);\n\n\tconst setDisplayPlayer = useCallback((id: string) => {\n\t\tif (columns[0] === 0) {\n\t\t\tlet _columns = columns.slice(0);\n\t\t\t_columns[0] = defaultColumns[0];\n\t\t\tif (_columns[1] < defaultColumns[0]) _columns = defaultColumns as [number, number, number];\n\t\t\telse _columns[1] = _columns[1] - defaultColumns[0];\n\t\t\tsetColumns(_columns);\n\t\t} else if (id && showSettings) toggleSettings({ set: false });\n\t\tsetDisplayPlayerRaw(id);\n\t}, [setColumns, setDisplayPlayerRaw, toggleSettings, columns, showSettings]);\n\n\tconst [playerDictKey, setPlayerDictKey] = useState(Math.random().toString(16).slice(2, 9));\n\n\tconst [status, setStatus] = useState({} as TournamentStatus);\n\tconst [settings, setSettings] = useState({} as TournamentSettings);\n\tconst [rounds, setRounds] = useState([] as Date[]);\n\tconst [players, setPlayers] = useState([] as Player[]);\n\n\tMouseEvents({ columns, boundaries, resize, setColumns, setResize, toggleSidebar, toggleSettings, setDisplayPlayerRaw });\n\n\t/* Fetch Data */\n    \n    const [setDictTimeout, awaitTimeout] = useState(false);\n    const [lastUpdate, setLastUpdate] = useState(Date.now());\n\n\tconst reducePlayerDict = useCallback((state: Map<ID, Player>, action: {\n\t\tid?: ID,\n\t\tplayer?: Player,\n\t\tplayers?: Player[],\n\t\thash?: string\n\t}) => {\n\t\tif (action.id) {\n\t\t\tstate.delete(action.id);\n\t\t\tif (action.id === displayPlayer) setDisplayPlayer('');\n\t\t\treturn state;\n\t\t}\n\t\tlet players: Player[];\n\t\tif (action.players) players = action.players;\n\t\telse players = [action.player];\n        for (let p of players) state.set(p.id, p);\n\t\tsetPlayerDictKey(action.hash || Math.random().toString(16).slice(2, 9));\n\t\treturn state;\n\t}, [setDisplayPlayer, setPlayerDictKey, displayPlayer, lastUpdate])\n\n\tconst [playerDict, setPlayerDict] = useReducer(reducePlayerDict, new Map() as Map<ID, Player>);\n\n\tconst updatePlayerDict = useCallback((force?: boolean): Promise<void> => {\n        if (!force && (Date.now() - lastUpdate < 3000)) {\n            setLastUpdate(Date.now());\n            awaitTimeout(true);\n            return Promise.resolve();\n        }\n        return GET({ url: '/tournament/' + props.id + '/fetchPlayers'})\n            .then((players: Player[]) => {\n                setLastUpdate(Date.now());\n                awaitTimeout(false);\n                setPlayers(players);\n                setPlayerDict({ players });\n            })\n    }, [props.id, setPlayers, setPlayerDictKey, setPlayerDict, lastUpdate]);\n    \n    useEffect(() => {\n        if (!setDictTimeout) return;\n        let x = setTimeout(updatePlayerDict, 5000);\n        return () => clearTimeout(x);\n    }, [setDictTimeout, updatePlayerDict]);\n\n\tconst updateTournamentStatus = useCallback((): Promise<void> => GET({ url: '/tournament/' + props.id + '/getStatus'})\n\t\t.then(setStatus), [props.id, setStatus]);\n\n\tconst updateTournamentSettings = useCallback((): Promise<void> => GET({ url: '/tournament/' + props.id + '/getSettings'})\n\t\t.then(setSettings), [props.id, setSettings]);\n\n\tconst updateSetting = useCallback((k: string, v: any): Promise<void> => POST({\n\t\turl: 'tournament/' + props.id + '/updateSetting',\n\t\tdata: {\n\t\t\t[k]: v\n\t\t}\n\t}).then(updateTournamentSettings), [props.id, updateTournamentSettings]);\n\n\tconst updateRounds = useCallback((): Promise<void> => GET({ url: '/tournament/' + props.id + '/fetchRounds'})\n        .then(setRounds), [props.id, setRounds]);\n        \n\tconst checkIfEnoughPlayers = useCallback(async (): Promise<void> => {\n        toggleNextRound(players.filter(p => p.active !== false).length >= 2);\n    }, [players, toggleNextRound, updatePlayerDict]);\n\t\n\tuseEffect(() => {\n\t\tif (!props.id) return null;\n\t\tupdateRounds();\n\t\tupdateTournamentStatus();\n\t\tupdateTournamentSettings();\n\t\tupdatePlayerDict(true);\n\t}, [props.id, updateRounds, updateTournamentStatus, updateTournamentSettings]);//, updateRounds, updateTournamentStatus, updateTournamentSettings, updatePlayerDict]);\n\n\tif (!props.id) return null;\n\n\tif (crossTable) return (\n\t\t<div className={styles.tournament}>\n\t\t\t<CrossTable\n\t\t\t\tshow={toggleCrossTable}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n\t\t\t\tstatus={status}\n\t\t\t\tplayers={players}\n\t\t\t\tsettings={settings}\n\t\t\t/>\n\t\t\t<Profile\n\t\t\t\tid={props.id}\n\t\t\t\tplayerID={displayPlayer}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tmodifyPlayerDict={(player: Player, hash: string) => setPlayerDict({ player, hash })}\n\t\t\t\tsettings={settings}\n\t\t\t/>\n\t\t</div>\t\t\n\t);\n\n\tif (pasteInput) return (\n\t\t<div className={styles.tournament}>\n\t\t\t<PasteInput\n                closePasteInput={() => setPasteInput(false)}\n                status={status}\n                settings={settings}\n                id={props.id}\n\t\t\t\tupdatePlayerDict={updatePlayerDict}\n\t\t\t/>\n\t\t</div>\t\t\n\t);\n\n\tlet style: CSSProperties = {};\n\tif (resize) style.cursor = 'ew-resize';\n\n\treturn (\n\t\t<div className={styles.tournament} style={{\n\t\t\tgridTemplateColumns: columns.join('% ') + '%',\n\t\t\t...style\n\t\t}}>\n\t\t\t{!sidebar ? null : <Sidebar\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tplayerDictKey={playerDictKey}\n\t\t\t\tupdatePlayerDict={updatePlayerDict}\n\t\t\t\tsetPlayerDict={setPlayerDict}\n\t\t\t\t\n\t\t\t\tsettings={settings}\n\t\t\t\tid={props.id}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n                checkIfEnoughPlayers={checkIfEnoughPlayers}\n                togglePasteInput={() => setPasteInput(true)}\n\t\t\t/>}\n\t\t\t<InfoBar\n\t\t\t\tstatus={status}\n\t\t\t\tsettings={settings}\n\t\t\t\tupdateTournamentStatus={updateTournamentStatus}\n\t\t\t\tround={status.round}\n\t\t\t\ttotalRounds={settings.totalRounds}\n\t\t\t\tcloseTournament={props.closeTournament}\n\t\t\t\ttoggleCrossTable={toggleCrossTable}\n\n\t\t\t\tsetLastRound={setLastRound}\n\t\t\t\tlastRoundOverride={lastRoundOverride}\n\t\t\t\ttriggerError={props.triggerError}\n\t\t\t/>\n\t\t\t<Pairings\n\t\t\t\tstatus={status}\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tupdatePlayerDict={updatePlayerDict}\n\t\t\t\t\n\t\t\t\tsettings={settings}\n\n\t\t\t\tid={props.id}\n\t\t\t\tcanTriggerNextRound={nextRound}\n\t\t\t\ttoggleSidebar={() => toggleSidebar({})}\n\t\t\t\ttoggleSettings={() => toggleSettings({})}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n\t\t\t\tupdateRound={updateTournamentStatus}\n\t\t\t\tsetLastRound={setLastRound}\n\t\t\t\tlastRoundOverride={lastRoundOverride}\n\t\t\t\ttoggleCrossTable={toggleCrossTable}\n\t\t\t\tplayerDictKey={playerDictKey}\n\t\t\t/>\n\t\t\t<Profile\n\t\t\t\tid={props.id}\n\t\t\t\tplayerID={displayPlayer}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tmodifyPlayerDict={(player: Player, hash: string) => setPlayerDict({ player, hash })}\n\t\t\t\tsettings={settings}\n\t\t\t\tplayerDictKey={playerDictKey}\n\t\t\t/>\n\t\t\t{!showSettings ? null : <Settings\n\t\t\t\tupdateTournamentSettings={updateTournamentSettings}\n\t\t\t\tupdateSetting={updateSetting}\n\t\t\t\tstatus={status}\n\t\t\t\tsettings={settings}\n\t\t\t\ttoggleSettings={() => toggleSettings({})}\n\t\t\t\tsetLastRound={setLastRound}\n\t\t\t\ttriggerError={props.triggerError}\n\t\t\t\tplayers={players}\n\t\t\t\tupdateRounds={updateRounds}\n\t\t\t\trounds={rounds}\n\t\t\t/>}\n\t\t</div>\n\t);\n\n}","import React, { useRef, useEffect } from 'react';\nimport styles from '../css/alert.module.css';\nimport { IoMdClose, IoMdCheckbox } from 'react-icons/io';\n\ninterface AlertProps {\n\tmessage: string\n\ttitle?: string\n\tconfirm?: boolean\n\tresolve?: () => void\n\treject?: () => void\n\tclose: () => void\n}\n\nexport default function Alert (props: AlertProps) {\n\t\n    const message = typeof props.message === 'string' ? props.message : JSON.stringify(props.message, null, 4);\n\n    const alertBox = useRef(null as HTMLButtonElement);\n    useEffect(() => {\n        alertBox.current.focus();\n    }, [alertBox]);\n\n    return (\n        <div className={styles.alertBox}>\n            {props.title ? <div>{props.title}</div> : null}\n            <div className={[styles.textBox].join(' ')}>\n                {message}\n            </div>\n            <div className={styles.response}>\n                {\n                    !props.confirm ?\n                        <button className={[styles.NO, 'button'].join(' ')} onClick={props.close} ref={alertBox}>\n                            OK\n                        </button> :\n                        <>\n                            <button className={[styles.NO, 'button'].join(' ')} ref={alertBox} onClick={() => {\n                                props.reject();\n                                props.close();\n                            }}>\n                                <IoMdClose />\n                            </button>\n                            <button className={[styles.YES, 'button'].join(' ')} onClick={() => {\n                                props.resolve();\n                                props.close();\n                            }}>\n                                <IoMdCheckbox />\n                            </button>\n                        </>\n                }\n            </div>\n        </div>\n    );\n\n}","import React, { ReactElement } from 'react';\nimport './App.css';\nimport Login from './tournament/Login';\nimport StatusBar from './StatusBar';\nimport Tournament from './Tournament';\nimport { POST, cookies, setErrorCallback } from './utils/requests';\n//import { isElectron, isDev, isProd } from './utils/electron';\n\nimport Menu from './tournament/Menu';\nimport Alert from './tournament/Alert';\n\nexport default class App extends React.Component<{}, {\n\tsessionID: string\n\ttournamentID: string\n\n\tmode: 'login' | 'menu' | 'tournament' | 'grid'\n\n\talertBox: {\n\t\tmessage: string\n\t\ttitle?: string\n\t\tconfirm?: boolean\n\t\tresolve?: () => void\n\t\treject?: () => void\n\t}\n}> {\n\n\tpublic state = {\n\t\tsessionID: '',\n\t\ttournamentID: '',\n\t\tmode: 'login' as 'login' | 'menu' | 'tournament' | 'grid',\n\n\t\talertBox: { message: '', error: true, confirm: false }\n\t}\n\n\tpublic closeAlertBox = (): void => this.setState({ alertBox: { message: '' }});\n\tpublic triggerConfirm = (message: string, resolve: () => void, reject: () => void) => this.setState({ alertBox: {message, title: 'CONFIRM ACTION', confirm: true, resolve, reject }});\n\tpublic triggerError = (message: string) => this.setState({ alertBox: {message, title: 'ERROR', confirm: false }});\n\n\tpublic setTournamentID = async (tournamentID: string): Promise<void> => {\n\t\tawait cookies.set('tournamentID', tournamentID, { path: '/' });\n\t\tthis.setState({\n\t\t\ttournamentID,\n\t\t\tmode: tournamentID ? 'tournament' : 'menu'\n\t\t});\n\t}\n\n\tpublic hasLoggedIn = async (sessionID: string): Promise<void> => {\n\t\tawait cookies.set('sessionID', sessionID, { path: '/' });\n\t\tthis.setState({ sessionID, mode: 'menu' });\n\t}\n\n\tpublic closeTournament = async (): Promise<void> => {\n\t\tawait cookies.set('tournamentID', '', { path: '/' });\n\t\tthis.setState({ tournamentID: '', mode: 'menu' });\n\t}\n\n\tprivate endSession = async (): Promise<void> => {\n\t\ttry {\n\t\t\tawait cookies.set('sessionID', '', { path: '/' });\n\t\t\tawait POST({ url: '/endSession' });\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t} finally {\n\t\t\tthis.setState({ sessionID: '', mode: 'login' });\n\t\t}\n\t}\n\n\tasync componentDidMount(): Promise<void> {\n\t\tsetErrorCallback((errorMessage: string) => this.triggerError(errorMessage));\n\t\tlet sessionID = await cookies.get('sessionID');\n\t\tif (sessionID) this.setState({ sessionID, mode: 'menu' });\n\t}\n\n\tcomponentWillUnmount() {\n\t\tsetErrorCallback(() => {});\n\t}\n\n\n\trender(): ReactElement {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<StatusBar/>\n\t\t\t\t<div className='stage' style={{\n\t\t\t\t\tbackgroundImage: `url(${process.env.PUBLIC_URL}/images/leaves-texture.png)`\n\t\t\t\t}}>\n\t\t\t\t\t{(() => {\n\t\t\t\t\t\tswitch (this.state.mode) {\n\t\t\t\t\t\tcase 'login': {\n\t\t\t\t\t\t\treturn <Login login={this.hasLoggedIn}/>;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'menu': {\n\t\t\t\t\t\t\treturn <Menu\n\t\t\t\t\t\t\t\tsessionID={this.state.sessionID}\n\t\t\t\t\t\t\t\tendSession={this.endSession}\n\t\t\t\t\t\t\t\tsetTournamentID={this.setTournamentID}\n\t\t\t\t\t\t\t\ttriggerConfirm={this.triggerConfirm}\n\t\t\t\t\t\t\t/>;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'tournament': {\n\t\t\t\t\t\t\treturn <Tournament\n\t\t\t\t\t\t\t\tid={this.state.tournamentID}\n\t\t\t\t\t\t\t\tcloseTournament={this.closeTournament}\n\t\t\t\t\t\t\t\ttriggerError={this.triggerError}\n\t\t\t\t\t\t\t/>;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tconsole.error('invalid mode');\n\t\t\t\t\t\t\tthis.setState({ mode: 'login' });\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})()}\n\t\t\t\t\t{this.state.alertBox.message && this.state.alertBox.message.length > 10 ? <Alert\n\t\t\t\t\t\t{...this.state.alertBox}\n\t\t\t\t\t\tclose={this.closeAlertBox}\n\t\t\t\t\t/> : null}\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}