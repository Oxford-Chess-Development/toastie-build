{"version":3,"sources":["css/login.module.css","css/pairings.module.css","css/crosstable.module.css","css/app.module.css","css/tournament.module.css","css/statusbar.module.css","css/alert.module.css","css/components.module.css","assets/icons/chessCom.svg","assets/icons/lichess.svg","css/profile.module.css","css/menu.module.css","css/sidebar.module.css","utils/electron.ts","utils/cookies.ts","utils/requests.ts","utils/regexes.ts","tournament/Login.tsx","StatusBar.tsx","components/EditableField.tsx","components/Grid.tsx","components/SinglePairing.tsx","components/index.ts","tournament/InfoBar.tsx","tournament/Pairings.tsx","components/Buttons.tsx","components/CollapsableSection.tsx","tournament/Sidebar.tsx","tournament/Profile.tsx","utils/prototype.ts","assets/settings.ts","tournament/Settings.tsx","tournament/CrossTable.tsx","tournament/PasteInput.tsx","Tournament.tsx","components/Vectors.tsx","tournament/Menu.tsx","tournament/Alert.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","isElectron","window","require","isProd","remote","win","session","getCurrentWindow","minimize","maximize","restore","close","isMaximized","electronCookies","webContents","cookies","console","log","process","windowCookies","universalCookies","errorCallback","get","then","arr","reduce","acc","curr","name","value","catch","e","Promise","resolve","getAll","map","cookie","options","details","Object","assign","date","Date","now","url","expirationDate","setFullYear","getFullYear","set","error","remove","reject","server","config","prodServer","resultsServer","prodResultsServer","GET","method","axios","res","data","response","status","statusText","split","pop","join","POST","headers","FORM","preventDefault","persist","form","target","constructor","parentElement","Error","Array","from","type","Number","action","setErrorCallback","c","defaults","baseURL","interceptors","request","use","a","JSON","stringify","Authorization","email","chessComTeam","Crown","props","className","appStyles","logo","classNames","style","visibility","loading","staticLogo","src","alt","crownOutline","loadingGif","Login","useState","setLoading","register","setRegister","errorMessage","triggerError","handleSubmit","useCallback","sessionID","login","finally","loginForm","useMemo","styles","onSubmit","required","placeholder","input","forgottenContainer","forgotten","submit","registerForm","minLength","pattern","regexes","source","loginSection","initialiseButton","loginBackground","flip","onClick","setTimeout","foreground","registerForeground","loginForeground","crownBuild","l","canvas","column","messageBar","StatusBar","maximised","minimise","statusBar","title","menu","favicon","draggable","exec","EditableField","content","setContent","alwaysEnabled","editContent","setEditContent","mustFocus","focus","inputField","useRef","divArea","decrement","button","parentNode","stepDown","increment","stepUp","handleClear","handleAny","handleInfinity","useHandleSubmit","onSubmitSuccess","firstChild","exitEditing","keyCode","useEffect","current","select","useMouseDown","contains","myID","Math","random","toString","slice","displayContent","inputType","isNaN","valueOf","toLocaleString","show","any","ref","container","additionalStyles","id","defaultValue","defaultEditContent","tzoffset","getTimezoneOffset","toISOString","toDatetimeLocal","interDate","setUTCHours","getUTCHours","getUTCMinutes","setUTCMinutes","roundUpDate","formRef","onKeyDown","additionalInputProps","infinity","clear","submitHidden","cancel","children","generateForm","editableField","defaultContent","Grid","header","body","crossTable","table","entries","i","key","scope","th","cell","headerCell","handleHeaderClick","rowData","first","shift","rest","tr","j","UID","td","SinglePairing","undefined","valid","setValid","hover","setHover","handleChange","validate","result","resultsBridge","setResult","neutral","expand","expanded","transform","tournamentID","min","step","inputClassName","onChange","centre","tooltip","tabIndex","reset","hidden","PairingDetails","height","setHeight","getBoundingClientRect","lichess","individual","gameLinks","lichessLink","lichessTeamLink","chessCom","chessComLink","chessComTeamLink","v","matches","match","site","detailsContent","row","board","update","k","inputURL","linkSubmit","dispatchEvent","Event","icons","callback","addEventListener","removeEventListener","InfoProps","lastRound","lastRoundOverride","settings","totalRounds","round","uri","titleBar","gridColumn","updateTournamentStatus","closeTournament","role","aria-label","setLastRound","toggleCrossTable","Pairings","useReducer","resultsState","updateResults","reduceResults","state","W","B","histories","displayPoints","pairingData","setPairings","Map","results","setResults","getPairings","playerDict","size","pairings","w","b","playerDictKey","getDisplayName","player","displayName","competitors","firstName","lastName","score","pending","values","filter","every","triggerNextRound","updatePlayerDict","updateRound","validateForm","resultWhite","resultBlack","validity","gamePointTotal","setExpanded","listing","dict","black","wDisplay","bDisplay","push","pairing","playerInfo","bye","setDisplayPlayer","inputResult","topBanner","pairingContainer","toggleSidebar","nextButton","canTriggerNextRound","length","waitButton","finishButton","generateNextButton","toggleSettings","Bottom","buttons","item","func","icon","SectionBreak","sectionContainer","sectionHeader","sectionHeaderText","CollapsableSection","internalExpanded","innerDiv","useInternalState","sectionToggle","sectionListWrapper","sectionList","ActivePlayer","requireLastName","playerLine","active","playerInactive","allowNewPlayers","rating","played","edit","editPlayer","clearPlayer","activate","activatePlayer","EditableForm","firstInput","createRef","scoreSection","width","onPaste","handlePaste","display","max","Sidebar","setRound","players","setPlayersRaw","linkedState","setLinkedState","updatePlayerState","setPlayers","refresh","sort","checkIfEnoughPlayers","updatePlayer","params","setPlayerDict","clearPlayerList","text","clipboardData","getData","trim","json","CSV","parse","delimitersToGuess","dynamicTyping","fastMode","TypeError","r","all","Forms","forms","Entry","entryProps","setEdit","setPlayer","newPlayer","List","list","section","p","sidebar","playersSection","bottomBanner","togglePasteInput","sidebarStyles","clearClash","SingleClash","handleInput","firstChoice","toLowerCase","startsWith","autofill","setSelectionRange","onInput","autoComplete","Profile","playerID","setPlayerID","getNameFromPlayer","_player","refetch","updatePlayerFromProps","opp","renderEntry","clashes","setClashes","updateClashes","oppId","playerId","Name","profile","Status","Rating","performanceRating","Playing","isPlaying","history","total","totalGames","scores","Score","gamePoints","expectedScore","toFixed","expectedGameScore","allowClashes","find","oppName","minPlayer","colour","resultsRow","capitalise","str","toUpperCase","useStateWithLabel","initialValue","setValue","useDebugValue","defaultSettings","general","tournamentId","locked","primaryKey","enum","convert","pairingSystem","lockOnInit","Infinity","nb","allow","ratingSystem","permissions","public","allowSelfSubmissions","roundTimes","stats","nbPlayers","activePlayers","matchesPlayed","gamesPlayed","averageRating","sum","createdAt","updatedAt","points","lossReward","drawReward","winReward","byeReward","performanceSystem","defaultUserSettings","username","licensed","daysRemaining","user","floor","start","lastLicensed","watchProps","def","keys","Settings","sectionExpando","setSection","handleToggle","index","indexOf","setIndex","updateSetting","message","clearRound","watchedSettings","includes","document","querySelectorAll","h","firstElementChild","modifyHeightValues","renderRound","roundRow","rounds","updateRounds","semiPresent","endsWith","cursor","navigator","clipboard","writeText","updateTournamentSettings","editable","roundEntries","CrossTable","sortValue","byRounds","setState","calcLength","this","prettyScore","winPercentage","ratingDifference","expectedDifference","resultsCell","oppRating","parseFloat","x","y","rows","isPlayer","isScore","playerBox","firstColumn","bodyByRounds","bodyByRobin","titles","closeButton","bodyClassNames","React","Component","PasteInput","textArea","closePasteInput","subheader","textarea","defaultColumns","eventName","event","createEvent","initEvent","Tournament","columns","setColumns","resize","setResize","boundaries","displayPlayer","setDisplayPlayerRaw","setCrossTable","pasteInput","setPasteInput","nextRound","toggleNextRound","reduceSidebar","_columns","reduceSettings","showSettings","setPlayerDictKey","setStatus","setSettings","setRounds","mouseClick","setMouseClick","handleMouseMove","percentX","innerWidth","prev","left","right","findIndex","abs","MouseEvents","setDictTimeout","awaitTimeout","lastUpdate","setLastUpdate","reducePlayerDict","delete","hash","force","clearTimeout","tournament","modifyPlayerDict","gridTemplateColumns","Circle","radius","lineHeight","borderRadius","onMouseEnter","getElementCentre","elem","rect","top","bottom","renderLineBetween","linesMounted","end","base","diff","sqrt","pow","sign","angle","atan","PI","line","backgroundColor","position","opacity","transition","Menu","tournamentDict","setTournamentDict","loadingOverride","overrideLoading","mountLines","linesAdjusted","adjustLines","selected","updateTournamentDict","endSession","validateTournament","setTournamentID","path","createNewTournament","removeID","lines","setLines","logoRef","drawLines","startCoords","_lines","getElementsByClassName","dot","navData","create","description","roundRobin","load","back","triggerConfirm","noSet","border","handleNavData","side","meta","dotDescription","descriptionSelected","dotUnloaded","reverse","dotContainer","dotContainerLoaded","loadTournamentDict","foundNavData","foundProfile","closeListing","UserSettings","leftColumn","rightColumn","Listing","generateListing","profileStyles","clickButton","listWrapper","setUser","renderSettings","Alert","alertBox","textBox","confirm","NO","YES","App","setSession","setTournament","mode","setMode","setAlertBox","closeAlertBox","hasLoggedIn","pageLoad","Mode","backgroundImage","Boolean","location","hostname","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e040356.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"login_column__14Kgt\",\"initialiseButton\":\"login_initialiseButton__3CXrs\",\"forgottenContainer\":\"login_forgottenContainer__2yR4y\",\"forgotten\":\"login_forgotten__3VFQz\",\"form\":\"login_form__1ieaR\",\"input\":\"login_input__3ze1R\",\"submit\":\"login_submit__2qxJT\",\"loginSection\":\"login_loginSection__1BBMn\",\"loginBackground\":\"login_loginBackground__y9UZ2\",\"foreground\":\"login_foreground__2Cqo8\",\"loginForeground\":\"login_loginForeground__lnGgY\",\"registerForeground\":\"login_registerForeground__3D6jX\",\"flip\":\"login_flip__2KG2q\",\"messageBar\":\"login_messageBar__6TM4O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pairings\":\"pairings_pairings__2Z6gd\",\"pairingContainer\":\"pairings_pairingContainer__2snrJ\",\"pairing\":\"pairings_pairing__jh3eo\",\"fade-in\":\"pairings_fade-in__3Iydy\",\"topBanner\":\"pairings_topBanner__duKX4\",\"playerInfo\":\"pairings_playerInfo__2BGOf\",\"statusBar\":\"pairings_statusBar__Y2g9v\",\"slide-in-from-bottom\":\"pairings_slide-in-from-bottom__1tu-V\",\"waitButton\":\"pairings_waitButton__3CIsd\",\"finishButton\":\"pairings_finishButton__elOep\",\"nextButton\":\"pairings_nextButton__1fjha\",\"rotate\":\"pairings_rotate__rWtYA\",\"inputResult\":\"pairings_inputResult__8kpK5\",\"bye\":\"pairings_bye__2Q8Qe\",\"submit\":\"pairings_submit__258vX\",\"errorMessage\":\"pairings_errorMessage__1qM9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"crossTable\":\"crosstable_crossTable__3tCtZ\",\"titles\":\"crosstable_titles__2lOQ_\",\"table\":\"crosstable_table__FafeF\",\"td\":\"crosstable_td__1hxGz\",\"th\":\"crosstable_th__Gp7TR\",\"cell\":\"crosstable_cell__1NDzK\",\"playerBox\":\"crosstable_playerBox__ImPf9\",\"resultsCell\":\"crosstable_resultsCell__3g4mX\",\"headerCell\":\"crosstable_headerCell__2zS_u\",\"firstColumn\":\"crosstable_firstColumn__2m7R_\",\"closeButton\":\"crosstable_closeButton__2pu_0\",\"container\":\"crosstable_container__3ZuI8\",\"textarea\":\"crosstable_textarea__3lS39\",\"form\":\"crosstable_form__2y5OV\",\"submit\":\"crosstable_submit__3U_pw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"app_canvas__1MLEL\",\"column\":\"app_column__2WVoo\",\"logo\":\"app_logo__b6W_t\",\"loadingLine\":\"app_loadingLine__1xeSs\",\"staticLogo\":\"app_staticLogo__1-Wsi\",\"loadingGif\":\"app_loadingGif__2PnUi\",\"crownOutline\":\"app_crownOutline__2IPSS\",\"fade-in\":\"app_fade-in__3kaKs\",\"grow-right\":\"app_grow-right__1NUcX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tournament\":\"tournament_tournament__1ikhA\",\"titleBar\":\"tournament_titleBar__1Kvez\",\"slide-in-from-top\":\"tournament_slide-in-from-top__22vmU\",\"row\":\"tournament_row__3K-Kn\",\"header\":\"tournament_header__hB1Cf\",\"container\":\"tournament_container__DVAFe\",\"form\":\"tournament_form__1Pn88\",\"input\":\"tournament_input__xb1Th\",\"editableField\":\"tournament_editableField__1rO3U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBar\":\"statusbar_statusBar__3f7HO\",\"favicon\":\"statusbar_favicon__1Unmh\",\"menu\":\"statusbar_menu__3nFvT\",\"title\":\"statusbar_title__3ClL5\",\"exec\":\"statusbar_exec__2fXB2\",\"close\":\"statusbar_close__3ssky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertBox\":\"alert_alertBox__-kpK4\",\"error\":\"alert_error__wKYnQ\",\"textBox\":\"alert_textBox__ATagI\",\"response\":\"alert_response__1RX0q\",\"NO\":\"alert_NO__2Bl9f\",\"YES\":\"alert_YES__pKi26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"components_container__1CCB7\",\"editableField\":\"components_editableField__2fs18\",\"form\":\"components_form__1RjIP\",\"input\":\"components_input__I_Vv7\",\"submitHidden\":\"components_submitHidden__PvrYt\",\"any\":\"components_any__3pCEP\",\"submit\":\"components_submit__1SFYQ\",\"increment\":\"components_increment__19rbD\",\"cancel\":\"components_cancel__1_2ia\",\"infinity\":\"components_infinity__1rF3u\",\"resultsBridge\":\"components_resultsBridge__9qnay\",\"details\":\"components_details__1FuFV\",\"resolve\":\"components_resolve__1X_KN\",\"reject\":\"components_reject__3ymMO\",\"neutral\":\"components_neutral__392Xn\",\"flash-green\":\"components_flash-green__2Wczz\",\"setResult\":\"components_setResult__ToBDd\",\"inputURL\":\"components_inputURL__3WU4U\",\"centre\":\"components_centre__2BcEl\",\"tooltip\":\"components_tooltip__1IKxP\",\"detailsContent\":\"components_detailsContent__2yLbz\",\"row\":\"components_row__1jpeO\",\"linkSubmit\":\"components_linkSubmit__TNip6\",\"sectionContainer\":\"components_sectionContainer__1tg1I\",\"sectionHeader\":\"components_sectionHeader__-UWwY\",\"sectionHeaderText\":\"components_sectionHeaderText__1OTig\",\"sectionListWrapper\":\"components_sectionListWrapper__a03uW\",\"sectionList\":\"components_sectionList__117sb\",\"expanded\":\"components_expanded__3qOxR\",\"sectionToggle\":\"components_sectionToggle__2z6Il\"};","module.exports = __webpack_public_path__ + \"static/media/chessCom.228db28e.svg\";","module.exports = __webpack_public_path__ + \"static/media/lichess.9ff6e305.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__1V8qL\",\"slide-in-from-right\":\"profile_slide-in-from-right__2jdIT\",\"bottomBanner\":\"profile_bottomBanner__b2MfX\",\"roundRow\":\"profile_roundRow__3OA2r\",\"row\":\"profile_row__aUfgI\",\"resultsRow\":\"profile_resultsRow__4zleX\",\"editable\":\"profile_editable__24Eas\",\"editableField\":\"profile_editableField__2onPe\",\"input\":\"profile_input__2tu2X\",\"sectionContainer\":\"profile_sectionContainer__Tm0AF\",\"sectionHeader\":\"profile_sectionHeader__UZUfT\",\"sectionHeaderText\":\"profile_sectionHeaderText__XE7UN\",\"sectionListWrapper\":\"profile_sectionListWrapper__1K1-l\",\"sectionList\":\"profile_sectionList__3bJ8Z\",\"expanded\":\"profile_expanded__3QtaO\",\"sectionToggle\":\"profile_sectionToggle__2qBPk\",\"semiPresent\":\"profile_semiPresent__1APEU\",\"playerLine\":\"profile_playerLine__IVVus\",\"cancel\":\"profile_cancel__AKFEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftColumn\":\"menu_leftColumn__13Ey0\",\"rightColumn\":\"menu_rightColumn__2D55A\",\"line\":\"menu_line__2oByf\",\"row\":\"menu_row__q-PZk\",\"listWrapper\":\"menu_listWrapper__1_77c\",\"clickButton\":\"menu_clickButton__1F_HI\",\"dotContainer\":\"menu_dotContainer__ze3l6\",\"dotDescription\":\"menu_dotDescription__19QYi\",\"dot\":\"menu_dot__3Dq9b\",\"dotContainerLoaded\":\"menu_dotContainerLoaded__3YmWC\",\"descriptionSelected\":\"menu_descriptionSelected__2aKX-\",\"close\":\"menu_close__3eKoV\",\"sidebar\":\"menu_sidebar__l1_lg\",\"profile\":\"menu_profile__3-O4-\",\"bottomBanner\":\"menu_bottomBanner__3Od_g\",\"slide-in-from-right\":\"menu_slide-in-from-right__2syBl\",\"logo\":\"menu_logo__3MwZ9\",\"float-down\":\"menu_float-down__1GhiB\",\"dotUnloaded\":\"menu_dotUnloaded__2DT-h\",\"expand\":\"menu_expand__1E6M-\",\"license1\":\"menu_license1__1o4qd\",\"license2\":\"menu_license2__1N8w4\",\"license3\":\"menu_license3__2EL0m\",\"briefly-expand\":\"menu_briefly-expand__ex-pm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__3Z89I\",\"slide-in-from-left\":\"sidebar_slide-in-from-left__3kaGk\",\"playersSection\":\"sidebar_playersSection__3_kKf\",\"scoreSection\":\"sidebar_scoreSection__2Qh1c\",\"addPlayerForm\":\"sidebar_addPlayerForm__1BL-S\",\"input\":\"sidebar_input__3Y8ld\",\"submit\":\"sidebar_submit__22Uk4\",\"edit\":\"sidebar_edit__zaTlg\",\"cancel\":\"sidebar_cancel__1DhJL\",\"activate\":\"sidebar_activate__2-tDL\",\"playerInfo\":\"sidebar_playerInfo__12dBq\",\"playerLine\":\"sidebar_playerLine__1cnKs\",\"scoreSeparator\":\"sidebar_scoreSeparator__1zbAQ\",\"sectionHeader\":\"sidebar_sectionHeader__2UjkE\",\"playerInactive\":\"sidebar_playerInactive__1Y9Kw\",\"topBanner\":\"sidebar_topBanner__3fw_E\",\"bottomBanner\":\"sidebar_bottomBanner__ZFfBX\"};","export const isElectron = typeof window.require === 'function'; //detect !in-browser\nexport const isDev = process.env.NODE_ENV === 'development'; //detects a react dev build\nexport const isProd = typeof window.require === 'function' && !window.require('electron-is-dev'); //detect an electron prod build\n\n// export const renderedArguments = !window.process.argv.includes('--production');\n/**\n * \t\t\t\t|\t\tisDev\t\t\t\t\t\t|\t\t\t\t\t!isDev\t\n * _________________________________________________________________________________________________\n * !isElectron\t|\t\tyarn start (in-browser)\t\t|\t\tyarn deploy (gh-pages build)\n *  isElectron\t|\t\tyarn gui (linked electron)\t|\t\tyarn gui-prod (headless electron build)\n * \n * isProd: yarn exe (OS-specific executable)\n */\n\nexport const remote = isElectron ? window.require('electron').remote : null;\nexport const session = isElectron ? remote.session : null;\n\nexport const win = (isElectron ? remote.getCurrentWindow() : {\n\tminimize: () => {},\n\tmaximize: () => {},\n\trestore: () => {},\n\tclose: () => {},\n\tisMaximized: () => true\t\t\n}) as any;\n\nexport const electronCookies = isElectron ? win.webContents.session.cookies : null;\n\nconsole.log('isDev', isDev);\nconsole.log('isElectron', isElectron);\nconsole.log('isProd', isProd);","import universalCookies, { Cookie, CookieSetOptions } from 'universal-cookie';\nimport { isElectron, electronCookies, isProd } from './electron';\nimport { CookiesSetDetails } from 'electron';\nimport { server as url } from './requests';\nimport { StringDictionary } from '../interfaces';\n\nconst windowCookies = new universalCookies();\n\nexport default class Cookies {\n\n\tgetAll(): Promise<StringDictionary> {\n\t\tif (isElectron || isProd) {\n\t\t\treturn (electronCookies.get({}) as Promise<Electron.Cookie[]>)\n\t\t\t\t.then((arr: Cookie[]) => arr.reduce((acc: StringDictionary, curr: Cookie) => {\n\t\t\t\t\tacc[curr.name] = curr.value;\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {}))\n\t\t\t\t.catch((e: Error) => {\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t\treturn {};\n\t\t\t\t});\n\t\t} else return Promise.resolve(windowCookies.getAll() || {});\n\t}\n\n\tget(name: string): Promise<string> {\n\t\tif (isElectron || isProd) {\n\t\t\treturn (electronCookies.get({ name }) as Promise<Electron.Cookie[]>)\n\t\t\t\t.then((arr: Cookie[]) => arr.map(cookie => cookie.value))\n\t\t\t\t.then((arr: Cookie[]) => arr[0] || '')\n\t\t\t\t.catch((e: Error) => {\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t\treturn '';\n\t\t\t\t});\n\t\t} else return Promise.resolve(windowCookies.get(name) || '');\n\t}\n\n\tset(name: string, value: any, options: CookieSetOptions = {}): Promise<void> {\n\t\tlet details = Object.assign({}, options) as CookiesSetDetails;\n\t\tif (isElectron || isProd) {\n\t\t\tlet date = new Date(Date.now());\t\n\t\t\tdetails = Object.assign(details, {\n\t\t\t\tname,\n\t\t\t\tvalue,\n\t\t\t\turl,\n\t\t\t\texpirationDate: date.setFullYear(date.getFullYear() + 1)\n\t\t\t});\n\t\t\treturn electronCookies.set(details)\n\t\t\t\t.then(() => electronCookies.get({}))\n\t\t\t\t.then((arr: Cookie[]) => arr.map(cookie => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: cookie.name,\n\t\t\t\t\t\tvalue: cookie.value\n\t\t\t\t\t};\n\t\t\t\t}))\n\t\t\t\t.catch(console.error);\n\t\t} else {\n\t\t\treturn Promise.resolve(windowCookies.set(name, value, options));\n\t\t}\n\t}\n\n\tremove(name: string, options: CookieSetOptions = {}): Promise<void> {\n\t\tif (isElectron || isProd) {\n\t\t\treturn electronCookies.remove(url, name);\t\t\t\n\t\t} else {\n\t\t\tif (windowCookies.get(name)) {\n\t\t\t\treturn Promise.resolve(windowCookies.remove(name, options));\n\t\t\t} else {\n\t\t\t\treturn Promise.reject('Couldn\\'t remove cookie');\n\t\t\t}\n\t\t}\n\t}\n}","import axios, { AxiosRequestConfig, AxiosResponse, AxiosError } from 'axios';\nimport config from '../config.json';\nimport { isDev } from './electron';\nimport { AnyDictionary } from '../interfaces.js';\nimport Cookies from './cookies';\n\nlet errorCallback: (message: string) => void = () => {};\n\nexport let cookies = new Cookies();\n\nexport const server = !isDev || config.useProd ? config.prodServer : config.server;\nexport const resultsServer = !isDev || config.useProd ? config.prodResultsServer : config.resultsServer;\n\naxios.defaults.baseURL = server;\n\n// alter all requests to use cookies only from AsyncStorageCookieStore\naxios.interceptors.request.use(async config => {\n\t\n\t// the device will have it's own cookie store, and attempt to\n\t// send cookies itself.\n\t// this has been documented to be unreliable, so we wipe these cookies\n\t// and implement the cookie store ourselves.\n\n\t//await AsyncStorage.clear()\n\treturn {\n\t\t...config,\n\t\theaders: {\n\t\t\t...config.headers,\n\t\t\tAuthorization: JSON.stringify(await cookies.getAll())\n\t\t}\n\t};\n\n});\n\nexport function GET(options: AxiosRequestConfig): Promise<any> {\n\toptions = Object.assign(options, {\n\t\tmethod: 'GET'\n\t});\n\treturn axios(options)\n\t\t.then((res: AxiosResponse<any>) => res.data)\n\t\t.catch((e: AxiosError) => {\n\t\t\tconsole.error(e);\n\t\t\tif (e.response) errorCallback([e.response.status, e.response.statusText, ':', '/' + e.response.config.url.split('/').pop()].join(' '));\n\t\t\tthrow e;\n\t\t});\n}\n\nexport function POST(options: AxiosRequestConfig): Promise<any> {\n\toptions = Object.assign(options, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t}\n\t});\n\treturn axios(options)\n\t\t.then((res: AxiosResponse<any>) => res.data)\n\t\t.catch((e) => {\n\t\t\tif (e && e.response && e.response.data) errorCallback(e.response.data);\n\t\t\tthrow e;\n\t\t});\n}\n\nexport function FORM(e: React.FormEvent<HTMLFormElement>): Promise<any> {\n\te.preventDefault();\n\te.persist();\n    let form = e.target as HTMLFormElement;\n    while (form.constructor.name !== 'HTMLFormElement' && form.parentElement) {\n        form = form.parentElement as HTMLFormElement;\n    }\n    if (form.constructor.name !== 'HTMLFormElement') throw new Error('Couldn\\'t find valid form');\n    let inputs = Array.from(form) as HTMLInputElement[];\n\tlet data = inputs.reduce((acc, curr) => {\n\t\tif (!curr.name) return acc;\n\t\tif (curr.name === 'submit') return acc;\n\t\tif (curr.type === 'number') acc[curr.name] = Number(curr.value);\n\t\telse acc[curr.name] = curr.value;\n\t\treturn acc;\n\t}, {} as AnyDictionary);\n\tlet options = {\n\t\tdata,\n\t\turl: form.action\n\t} as AxiosRequestConfig;\n\treturn POST(options);\n}\n\nexport function setErrorCallback(c: (message: string) => void) {\n\terrorCallback = c;\n}\n\n/*\n\nclass Requests {\n\n\tGET(options: AxiosRequestConfig): Promise<any> {\n\t\toptions = Object.assign(options, {\n\t\t\tmethod: 'GET'\n\t\t});\n\t\treturn axios(options)\n\t\t\t.then((res: AxiosResponse<any>) => res.data);\n\t}\n\n\tPOST(options: AxiosRequestConfig): Promise<any> {\n\t\toptions = Object.assign(options, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t});\n\t\treturn axios(options)\n\t\t\t.then((res: AxiosResponse<any>) => res.data);\n\t}\n\n\tFORM(e: React.FormEvent<HTMLFormElement>): Promise<any> {\n\t\te.preventDefault();\n\t\tlet form = e.target as HTMLFormElement;\n\t\tlet inputs = Array.from(form) as HTMLInputElement[];\n\t\tlet data = inputs.reduce((acc, curr) => {\n\t\t\tif (!curr.name) return acc;\n\t\t\tif (curr.name === 'submit') return acc;\n\t\t\tacc[curr.name] = curr.value;\n\t\t\treturn acc;\n\t\t}, {} as AnyDictionary);\n\t\tlet options = {\n\t\t\tdata,\n\t\t\turl: form.action\n\t\t} as AxiosRequestConfig;\n\t\treturn this.POST(options);\n\t}\n\n}\n\nlet r = new Requests();\nexport const GET = r.GET;\nexport const POST = r.POST;\nexport const FORM = r.FORM;\n\n*/","export const space = /\\s+/g;\nexport const letters = /\\w+/g;\nexport const image = /<img\\s+.*?src=[\"'](.*).*?\">/;\nexport const date = /^[0-9]{4}-[0-9]{1,2}-[0-9]{1,2}_/;\nexport const href = /^(https?:)?\\/\\//;\n\t/* eslint-disable-next-line no-control-regex */\nexport const email = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n\nexport const chessComTeam = /chess\\.com\\/(?:live#tm=|club\\/matches\\/live\\/(?:[a-z-]+\\/)?)([0-9]+)/;","import React, { ReactElement, useState, useCallback, useMemo } from 'react';\nimport url from 'url';\nimport { server, FORM } from '../utils/requests';\nimport * as regexes from '../utils/regexes';\n\nimport appStyles from '../css/app.module.css';\nimport styles from '../css/login.module.css';\nimport { StringDictionary } from '../interfaces';\nimport { IoIosArrowForward, IoIosArrowBack } from 'react-icons/io';\n\n/*\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport iconFont from 'react-native-vector-icons/Fonts/FontAwesome.ttf';\nconst iconFontStyles = `@font-face {\n  src: url(${iconFont});\n  font-family: FontAwesome;\n}`;*/\n\nexport function Crown(props: {\n\tloading: boolean,\n\tsetLoading: (loading: boolean) => void\n\tclassNames?: StringDictionary\n}) {\n\n\treturn (\n\t\t<div\n\t\t\tclassName={[appStyles.logo, props.classNames?.logo].join(' ')}\n\t\t>\n\t\t\t<img style={{visibility: props.loading ? 'hidden' : 'visible'}} className={appStyles.staticLogo} src={process.env.PUBLIC_URL + '/images/favicon.png'} alt='swiss-logo.png'/>\n\n\t\t\t<img style={{visibility: props.loading ? 'visible' : 'hidden'}} className={appStyles.staticLogo} src={process.env.PUBLIC_URL + '/images/dubrovny.png'} alt='swiss-logo.png'/>\n\t\t\t<img style={{visibility: props.loading ? 'visible' : 'hidden'}} className={appStyles.crownOutline} src={process.env.PUBLIC_URL + '/images/crown-outline.png'} alt='outline-gif'/>\n\t\t\t<img style={{visibility: props.loading ? 'visible' : 'hidden'}} className={appStyles.loadingGif} src={process.env.PUBLIC_URL + '/images/loading-crown.gif'} alt='loading-gif'/>\n\t\t\t{/*\n\t\t\t<div>\n\t\t\t\t<hr className={appStyles.loadingLine}/>\n\t\t\t\t<hr className={appStyles.loadingLine}/>\n\t\t\t\t<hr className={appStyles.loadingLine}/>\n\t\t\t</div>*/}\n\t\t</div>\n\t);\n}\n\ninterface LoginProps {\n\tlogin: (sessionID: string) => void\n}\nexport default function Login(props: LoginProps) {\n\n\tconst [loading, setLoading] = useState(false);\n\tconst [register, setRegister] = useState(false);\n\tconst [errorMessage, triggerError] = useState('');\n\n\tconst handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>): void => {\n\t\tsetLoading(false);\n\t\tFORM(e)\n\t\t\t.then((sessionID: string) => props.login(sessionID))\n\t\t\t.catch((e) => {\n\t\t\t\tif (e && e.response && e.response.data) triggerError(e.response.data);\n\t\t\t\tconsole.error(e);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t}, [setLoading, triggerError, props.login]);\n\n\tconst loginForm = useMemo((): ReactElement => {\n\t\treturn (\n\t\t\t<form\n\t\t\t\tclassName={styles.form}\n\t\t\t\tmethod='POST'\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\taction={url.resolve(server, 'login')}\n\t\t\t>\n\t\t\t\t<input type='text' name='username' required placeholder='username' className={['input', styles.input].join(' ')}></input>\n\t\t\t\t<input type='password' name='password' required placeholder='password' className={['input', styles.input].join(' ')}></input>\n\t\t\t\t<div className={styles.forgottenContainer}>\n\t\t\t\t\t<div className={['input', styles.forgotten].join(' ')}>username reminder</div>\n\t\t\t\t\t<div className={['input', styles.forgotten].join(' ')}>password reset</div>\n\t\t\t\t</div>\n\t\t\t\t<input type='submit' value='LOGIN' className={['input', styles.submit].join(' ')}></input>\n\t\t\t</form>\n\t\t);\n\t}, [handleSubmit]);\n\n\tconst registerForm = useMemo((): ReactElement => {\n\t\treturn (\n\t\t\t<form\n\t\t\t\tclassName={styles.form}\n\t\t\t\tmethod='POST'\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\taction={url.resolve(server, 'register')}\n\t\t\t>\n\t\t\t\t<input type='text' name='username' required placeholder='username' className={['input', styles.input].join(' ')}></input>\n\t\t\t\t<input type='password' name='password' required placeholder='password' minLength={8} className={['input', styles.input].join(' ')}></input>\n\t\t\t\t<input type='email' name='email' required placeholder='email' className={['input', styles.input].join(' ')} pattern={regexes.email.source}></input>\n\t\t\t\t<input type='submit' value='REGISTER' className={['input', styles.submit].join(' ')}></input>\n\t\t\t</form>\n\t\t);\n\t}, [handleSubmit]);\n\n\tconst loginSection = useMemo((): ReactElement => {\n\t\treturn (\n\t\t\t<div className={[styles.loginSection, styles.initialiseButton].join(' ')}>\n\t\t\t\t<div className={styles.loginBackground}>\n\t\t\t\t\t<div className={[styles.flip, 'button'].join(' ')} onClick={() => {\n\t\t\t\t\t\tsetLoading(true);\n\t\t\t\t\t\tsetRegister(false);\n\t\t\t\t\t\ttriggerError('');\n\t\t\t\t\t\tsetTimeout(() => setLoading(false), 500);\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<div>LOGIN</div>\n\t\t\t\t\t\t<div>\n                            <IoIosArrowBack />\n                        </div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div></div>\n\t\t\t\t\t<div className={[styles.flip, 'button'].join(' ')} onClick={() => {\n\t\t\t\t\t\tsetLoading(true);\n\t\t\t\t\t\tsetRegister(true);\n\t\t\t\t\t\ttriggerError('');\n\t\t\t\t\t\tsetTimeout(() => setLoading(false), 500);\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<div>REGISTER</div>\n\t\t\t\t\t\t<div>\n                            <IoIosArrowForward />\n                        </div>\n\t\t\t\t\t</div>\n\t\t\t\t\tBackground\n\t\t\t\t</div>\n\t\t\t\t<div className={[styles.foreground, register ? styles.registerForeground : styles.loginForeground].join(' ')}>\n\t\t\t\t\t{\n\t\t\t\t\t\tregister ? registerForm : loginForm\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}, [setLoading, setRegister, triggerError, register]);\n\n\tconst crownBuild = useMemo(() => <Crown setLoading={(l: boolean) => setLoading(l)} loading={loading} />, [setLoading, loading]);\n\n\treturn (\n\t\t<div className={appStyles.canvas}>\n\t\t\t<div className={appStyles.column} />\n\t\t\t<div className={[appStyles.column, styles.column].join(' ')}>\n\t\t\t\t{crownBuild}\n\t\t\t\t{loginSection}\n\t\t\t\t<div className={styles.messageBar}>\n\t\t\t\t\t{errorMessage || '\\u200b'}\n\t\t\t\t</div>\n\t\t\t\t{/*<div className={['button', styles.initialiseButton].join(' ')}>\n\t\t\t\t\t{this.state.register ? <>\n\t\t\t\t\t\t<div className={styles.registerForm}>{this.registerForm}</div>\n\t\t\t\t\t\t<div className={styles.flip} onClick={() => this.setState({ register: false })}>{'LOGIN\\n🡄'}</div>\n\t\t\t\t\t</> : <>\n\t\t\t\t\t\t<div className={styles.flip} onClick={() => this.setState({ register: true })}>{'REGISTER\\n🡆'}</div>\n\t\t\t\t\t\t<div className={styles.loginForm}>{this.loginForm}</div>\n\t\t\t\t\t</>}\n\t\t\t\t</div>*/}\n\t\t\t</div>\n\t\t\t<div className={appStyles.column} />\n\t\t</div>\n\t);\n\n\n}","import React from 'react';\nimport { win } from './utils/electron';\nimport { FaWindowMaximize, FaWindowRestore, FaWindowMinimize, FaWindowClose } from 'react-icons/fa';\n\nimport styles from './css/statusbar.module.css';\n\nexport default function StatusBar() {\n    \n    const initialName = 'Tournament by Oxford Chess Development';\n\n\tconst maximised = win.isMaximized();\n    const minimise = win.minimize();\n    const close = win.close();\n\n\tconst toggleMaximisation = () => {\n\t\tif (maximised) {\n\t\t\twin.restore();\n\t\t} else {\n\t\t\twin.maximize();\n\t\t}\n\t}\n\n    return (\n        <div className={styles.statusBar}>\n            <div className={styles.title}>\n                {initialName}\n            </div>\n            <div className={styles.menu}>\n                <div className={styles.favicon}>\n                    <img\n                        alt='favicon'\n                        draggable={false}\n                        src={process.env.PUBLIC_URL + '/logo192.png'}\n                    />\n                </div>\n            </div>\n            <div className={styles.exec}>\n                <div onClick={minimise}>\n                    <FaWindowMinimize />\n                </div> \n                <div onClick={toggleMaximisation} >\n                    {maximised ? \n                        <FaWindowRestore /> :\n                        <FaWindowMaximize />\n                    }\n                </div> \n                <div onClick={close} className={styles.close}>\n                    <FaWindowClose />\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState, useRef, ReactElement, useCallback, ReactNode, ReactNodeArray, RefObject } from 'react';\nimport { useMouseDown } from '.';\nimport { FORM } from '../utils/requests';\nimport styles from '../css/components.module.css';\nimport { AiOutlineClose, AiOutlineDown, AiOutlineUp, AiOutlineCheck } from 'react-icons/ai';\n\ninterface EditableFieldProps {\n    content: string\n    defaultEditContent?: string\n    defaultContent?: string\n    inputType?: 'button' | 'checkbox' | 'color' | 'date' | 'datetime-local' | 'email' | 'file' | 'hidden' | 'image' | 'month' | 'number' | 'password' | 'radio' | 'range' | 'reset' | 'search' | 'submit' | 'tel' | 'text' | 'time' | 'url' | 'week',\n\n    url: string, //url.resolve(server, ['tournament', props.id, 'editTournamentName'].join('/'))\n    handleSubmit: (k: string, v: any) => Promise<void>\n    onSubmitSuccess: (e: React.FormEvent<HTMLFormElement>) => React.FormEvent<HTMLFormElement>\n    handleClear?: () => Promise<void>\n    useHandleSubmit?: boolean\n    additionalStyles: { [key: string]: string }\n    additionalInputProps: { [key: string]: any }\n    name?: string\n    alwaysEnabled?: boolean\n    show?: {\n        submit?: boolean\n        infinity?: boolean\n        increment?: boolean\n        any?: boolean\n        clear?: boolean\n    }\n    formRef?: RefObject<HTMLFormElement>\n    children?: ReactNode | ReactNodeArray\n}\n\nfunction roundUpDate(date: Date): Date {\n    let interDate = new Date(date.setUTCHours(date.getUTCHours() + 1));\n    let nextDate: Date;\n    if (interDate.getUTCMinutes() < 30) nextDate = new Date(interDate.setUTCMinutes(30));\n    else nextDate = new Date(new Date(interDate.setUTCMinutes(0)).setUTCHours(interDate.getUTCHours() + 1));\n    return nextDate;\n}\n\nfunction toTimeDate(date: Date): string {\n    if (isNaN(date.valueOf())) return '';\n    return date.toLocaleString('en-GB').slice(0, -3);\n    //return date.toTimeString().slice(0, 8) + ' ' + date.toDateString().slice(0, 10);\n}\n\nfunction toDatetimeLocal(date: Date) {\n    if (isNaN(date.valueOf())) return '';\n    let tzoffset = date.getTimezoneOffset() * 60000; //offset in milliseconds\n    let localDate = new Date(date.valueOf() - tzoffset);\n    return localDate.toISOString().slice(0, 16);\n}\n\nexport default function EditableField(props: EditableFieldProps): ReactElement {\n\n    const [content, setContent] = useState(props.content);\n    const [editContent, setEditContent] = useState(props.alwaysEnabled || false);\n    const [mustFocus, focus] = useState(false);\n    const inputField = useRef(null as HTMLInputElement);\n    const divArea = useRef(null as HTMLDivElement);\n\n    const decrement = useCallback((e: React.MouseEvent<HTMLButtonElement>): void => {\n        e.preventDefault();\n        let button = e.target as HTMLButtonElement;\n        if (button.constructor.name !== 'HTMLButtonElement') return;\n        let form = button.parentNode as HTMLFormElement;\n        let input = form[props.name || 'name'] as HTMLInputElement;\n        input.stepDown();\n    }, [props.name]);\n\n    const increment = useCallback((e: React.MouseEvent<HTMLButtonElement>): void => {\n        e.preventDefault();\n        let button = e.target as HTMLButtonElement;\n        if (button.constructor.name !== 'HTMLButtonElement') return;\n        let form = button.parentNode as HTMLFormElement;\n        let input = form[props.name || 'name'] as HTMLInputElement;\n        input.stepUp();\n    }, [props.name]);\n\n    const handleClear = useCallback((e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        e.preventDefault();\n        if (!props.handleClear) return;\n        return props.handleClear()\n            .then(() => {\n                setEditContent(props.alwaysEnabled || false);\n                setContent('');\n            });\n    }, [props.handleClear, setEditContent, setContent, props.alwaysEnabled]);\n\n    const handleAny = useCallback((e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        e.preventDefault();\n        return props.handleSubmit(props.name || 'name', 0)\n            .then(() => {\n                setEditContent(props.alwaysEnabled || false);\n                setContent('0');\n            });\n    }, [props.handleSubmit, setEditContent, setContent, props.name]);\n\n    const handleInfinity = useCallback((e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        e.preventDefault();\n        return props.handleSubmit(props.name || 'name', 'Infinity')\n            .then(() => {\n                setEditContent(props.alwaysEnabled || false);\n                setContent('∞');\n            });\n    }, [props.handleSubmit, setEditContent, setContent, props.alwaysEnabled, props.name]);\n\n    const handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n        e.preventDefault();\n        if (props.useHandleSubmit) {\n            let form = e.target as HTMLFormElement;\n            if (form.constructor.name !== 'HTMLFormElement') return Promise.resolve(setEditContent(props.alwaysEnabled || false));\n            let input = form[props.name || 'name'] as HTMLInputElement;\n            return props.handleSubmit(props.name || 'name', input.value)\n                .then(() => {\n                    setEditContent(props.alwaysEnabled || false);\n                    return e;\n                })\n                .then(props.onSubmitSuccess)\n                .then(() => setContent(input.value))\n        } else return FORM(e)\n            .then(() => {\n                setEditContent(props.alwaysEnabled || false);\n                return e;\n            })\n            .then(props.onSubmitSuccess)\n            .then((e) => {\n                let form = e.target as HTMLFormElement;\n                while (form.constructor.name !== 'HTMLFormElement' && form.parentElement) form = form.parentElement as HTMLFormElement;\n                if (form.constructor.name !== 'HTMLFormElement') throw new Error('Couldn\\'t find valid form');\n                let input = form.firstChild as HTMLInputElement;\n                let content = input.value;\n                setContent(content);\n            });\n    }, [props.useHandleSubmit, props.handleSubmit, props.name, setEditContent, props.onSubmitSuccess, props.alwaysEnabled, setEditContent, setContent]);\n\n    const exitEditing = useCallback((e: React.KeyboardEvent<HTMLFormElement>): React.KeyboardEvent<HTMLFormElement> => {\n        switch (e.keyCode) {\n            case 27: {\n                setEditContent(props.alwaysEnabled || false);\n                return e;\n            }\n            case 13: {\n                handleSubmit(e);\n                return e;\n            }\n            default: {\n                return e;\n            }\n        }\n    }, [setEditContent, handleSubmit, props.alwaysEnabled]);\n\n    const generateForm = (name: string): JSX.Element => {\n        let defaultValue = name || props.defaultEditContent;\n        if (props.inputType === 'datetime-local') defaultValue = toDatetimeLocal(roundUpDate(new Date(defaultValue)));\n        else if (props.show?.any && defaultValue === '0') defaultValue = '';\n        return (\n            <form\n                ref={props.formRef}\n                className={styles.form}\n                target='_self'\n                onKeyDown={exitEditing}\n                onSubmit={handleSubmit}\n                method='POST'\n                action={props.url}\n            >\n                <input\n                    type={props.inputType}\n                    className={[styles.input, props.additionalStyles.input].join(' ')}\n                    name={props.name || 'name'}\n                    defaultValue={defaultValue || '\\u200b'}\n                    required\n                    ref={inputField}\n                    {...props.additionalInputProps}\n                />\n                <button\n                    className={[props.show?.submit && !props.show?.infinity && !props.show?.any && !props.show?.clear ? '' : styles.submitHidden, styles.cancel].join(' ')}\n                    onClick={() => setEditContent(props.alwaysEnabled || false)}\n                >\n                    <AiOutlineClose />\n                </button>\n                <button\n                    className={[!props.show?.clear ? styles.submitHidden : '', styles.cancel].join(' ')}\n                    onClick={handleClear}\n                >\n                    <AiOutlineClose />\n                </button>\n                <button\n                    className={[!props.show?.any ? styles.submitHidden : '', styles.any].join(' ')}\n                    onClick={handleAny}\n                >Any</button>\n                <button\n                    className={[!props.show?.infinity ? styles.submitHidden : '', styles.infinity].join(' ')}\n                    onClick={handleInfinity}\n                >∞</button>\n                <button\n                    type='button'\n                    value='▼'\n                    className={[!props.show?.increment ? styles.submitHidden : '', styles.increment].join(' ')}\n                    onClick={decrement}\n                >\n                    <AiOutlineDown />\n                </button>\n                <button\n                    className={[!props.show?.increment ? styles.submitHidden : '', styles.increment].join(' ')}\n                    onClick={increment}\n                >\n                    <AiOutlineUp />\n                </button>\n                <button\n                    type='submit'\n                    className={[!props.show?.submit ? styles.submitHidden : '', styles.submit].join(' ')}\n                >\n                    <AiOutlineCheck />\n                </button>\n                {props.children}\n            </form>\n        );\n    }\n\n    useEffect(() => {\n        setContent(props.content);\n    }, [props.content]);\n    useEffect(() => {\n        if (!mustFocus) return;\n        let form = inputField.current;\n        if (!form) return;\n        if (form.select) form.select();\n        else if (form.focus) form.focus();\n    }, [inputField, mustFocus]);\n    useMouseDown((e) => {\n        if (divArea.current && divArea.current.contains(e.target as Node)) return;\n        setEditContent(props.alwaysEnabled || false);\n    });\n\n    const myID = Math.random().toString(16).slice(2, 9);\n\n    let displayContent = content;\n    if (displayContent && props.inputType === 'datetime-local') displayContent = toTimeDate(new Date(content));\n    else if (props.show?.any && displayContent === '0') displayContent = 'Any';\n\n    return (\n        <div\n            ref={divArea}\n            className={[styles.container, props.additionalStyles.container].join(' ')}\n            id={myID}\n        >\n            {editContent ?\n                generateForm(content) : <>\n                    <div\n                        className={[styles.editableField, props.additionalStyles.editableField || ''].join(' ')}\n                        onClick={() => {\n                            setEditContent(true);\n                            focus(true);\n                        }}\n                    >\n                        {displayContent || props.defaultContent || '\\u200b'}\n                    </div>\n                    {props.children}\n                </>\n            }\n        </div>\n    );\n\n}","import React, { ReactElement } from 'react';\n\ninterface GridProps {\n\theader: {[key: string]: string | undefined}\n\tbody: JSX.Element[][]\n\tstyles: any\n\tbodyClassNames: string[]\n\tstyle: any\n\thandleHeaderClick: (key: string) => void\n}\n\nexport default function Grid(props: GridProps): ReactElement {\n\n\tconst headers = props.header;\n\tconst body = props.body;\n\n\treturn (\n\t\t<div className={props.styles.crossTable} style={props.style}>\n\t\t\t<table className={props.styles.table}>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t{Object.entries(headers).map(([key, header], i) => {\n\t\t\t\t\t\t\treturn <th scope='column' key={['column', i].join('.')} className={props.styles.th}>\n\t\t\t\t\t\t\t\t{header ? <div\n\t\t\t\t\t\t\t\t\tclassName={[props.styles.cell, props.styles.headerCell].join(' ')}\n\t\t\t\t\t\t\t\t\tonClick={() => props.handleHeaderClick(key)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{header}\n\t\t\t\t\t\t\t\t</div> : ''}\n\t\t\t\t\t\t\t</th>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\t\t\t\t\t\t\n\t\t\t\t\t{body.map((rowData, i) => {\n\t\t\t\t\t\tlet first = rowData.shift();\n\t\t\t\t\t\tlet rest = rowData;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr key={'row.' + i} className={props.styles.tr}>\n\t\t\t\t\t\t\t\t<th scope='row'>\n\t\t\t\t\t\t\t\t\t{first}\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t{rest.map((cell, j) => {\n\t\t\t\t\t\t\t\t\tlet UID = ['cell', i, j].join('.');\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<td id={UID} key={UID} className={props.styles.td}>\n\t\t\t\t\t\t\t\t\t\t\t{cell}\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n\t\n}","import React, { useState, ReactElement, useRef, RefObject, useEffect, useCallback } from 'react';\nimport url from 'url';\nimport { FORM, server, POST } from '../utils/requests';\nimport { AnyDictionary, GameLinks } from '../interfaces';\n\nimport styles from '../css/components.module.css';\nimport { AiOutlineCheck, AiOutlineClose, AiOutlineMinus } from 'react-icons/ai';\nimport * as icons from '../assets/icons';\nimport * as regexes from '../utils/regexes';\nimport EditableField from './EditableField';\n\ninterface SinglePairingProps {\n    result: [number | null, number | null]\n\ttournamentID: string\n\tinputClassName: any\n    hidden: AnyDictionary\n    expanded: boolean\n    expand: (set: boolean) => void\n\tvalidate: (form: HTMLFormElement) => boolean | string | void\n\thandleSubmit: (e: React.FormEvent<HTMLFormElement>) => Promise<React.FormEvent<HTMLFormElement>>\n}\n\nexport default function SinglePairing(props: SinglePairingProps): ReactElement {\n\n    const [valid, setValid] = useState(undefined as boolean | undefined);\n    const [hover, setHover] = useState('');\n\n    const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n\t\tlet input = e.target as HTMLInputElement;\n        let form = input.parentElement as HTMLFormElement;\n        let valid = props.validate(form);\n        if (typeof valid === 'string') setHover(valid);\n        else setHover('');\n        if (typeof valid === 'boolean') setValid(valid);\n        else if (typeof valid === 'string') setValid(false);\n\t\telse setValid(undefined);\n    }\n\n    const clear = (e: React.FormEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n\t\tlet input = e.target as HTMLButtonElement;\n        let div = input.parentElement as HTMLDivElement;\n        let form = div.parentElement as HTMLFormElement\n        form.reset();\n        setHover('');\n        setValid(undefined);\n    }\n\n    if (props.result[0] !== null || props.result[1] !== null) return (\n        <div className={styles.resultsBridge}>\n            <div className={styles.setResult}>{props.result[0] ?? '\\u200b'}</div>\n            <div className={styles.neutral} onClick={() => props.expand(!props.expanded)} style={{\n                transform: props.expanded ? 'rotate(450deg)' : 'rotate(0deg)'\n            }}>\n                <AiOutlineMinus />\n            </div>\n            <div className={styles.setResult}>{props.result[1] ?? '\\u200b'}</div>\n        </div>\n    );\n    \n    return <form\n        className={styles.resultsBridge}\n        target='_self'\n        onSubmit={(e) => {\n            e.persist();\n            if (!props.validate(e.target as HTMLFormElement)) return e.preventDefault();\n            FORM(e).then(() => props.handleSubmit(e));\n        }}\n        method='POST'\n        action={url.resolve(server, ['tournament', props.tournamentID, 'addResult'].join('/'))}\n    >\n        <input type='number' min={0} step={0.5} name='resultWhite' required className={props.inputClassName} onChange={handleChange}/>\n        <div className={styles.centre}>\n            {hover ? <span className={styles.tooltip}>{hover}</span> : null}\n            {valid ?\n                <button tabIndex={-1} className={styles.resolve}>\n                    <AiOutlineCheck />\n                </button> :\n                valid === false ?\n                    <button tabIndex={-1} className={styles.reject} onClick={clear}>\n                        <AiOutlineClose />\n                    </button> :\n                    <div className={styles.neutral} onClick={() => props.expand(!props.expanded)} style={{\n                        transform: props.expanded ? 'rotate(450deg)' : 'rotate(0deg)'\n                    }}>\n                        <AiOutlineMinus />\n                    </div>\n            }\n        </div>\n        <input type='number' min={0} step={0.5} name='resultBlack' required className={props.inputClassName} onChange={handleChange}/>\n        {Object.entries(props.hidden).map(([name, value], i) => {\n            return <input key={['hiddenInput', i].join('.')} type='hidden' name={name} value={value} required />;\n        })}\t\t\n    </form>;\n}\n\ninterface DetailsProps {\n    tournamentID: string\n    id: string\n    className: string\n    expanded: boolean\n    gameLinks: GameLinks\n    individual: boolean\n    board: number\n    update: () => Promise<void>\n}\n\nexport function PairingDetails(props: DetailsProps): ReactElement {\n\n    const [height, setHeight] = useState('0px');\n\n    const details = useRef(null) as RefObject<HTMLDivElement>;\n    const form = useRef(null) as RefObject<HTMLFormElement>;\n\n    useEffect(() => {\n        if (!details.current) return;\n        if (!props.expanded) return;\n        setHeight(details.current.getBoundingClientRect().height + 'px');\n        return () => setHeight('0px');\n    }, [details, setHeight, props.expanded]);\n\n    const lichess = props.individual ? props.gameLinks.lichessLink : props.gameLinks.lichessTeamLink;\n    const chessCom = props.individual ? props.gameLinks.chessComLink : props.gameLinks.chessComTeamLink;\n\n    const handleSubmit = useCallback((key: 'lichess' | 'chessCom', value: string): Promise<void> => {\n        let v = value;\n        if (!props.individual) {\n            let matches = value.match(regexes.chessComTeam);\n            if (!matches) {\n                console.error('Invalid syntax on tournament: ' + value);\n                return Promise.resolve();\n            }\n            v = 'https://chess.com/club/matches/live/' + matches[1];\n        }\n        return POST({\n            url: url.resolve(server, ['tournament', props.tournamentID, 'updateResultLink'].join('/')),\n            data: {\n                id: props.id,\n                [key]: v,\n                type: props.individual ? 'individual' : 'team'\n            }\n        });\n    }, [props.id, props.individual, props.tournamentID]);\n\n    const handleClear = useCallback((key: 'lichess' | 'chessCom'): Promise<void> => {\n        return POST({\n            url: url.resolve(server, ['tournament', props.tournamentID, 'clearResultLink'].join('/')),\n            data: {\n                id: props.id,\n                site: key,\n                type: props.individual ? 'individual' : 'team'\n            }\n        });\n    }, [props.id, props.individual, props.tournamentID]);\n\n    return (\n        <div className={[props.className, styles.details].join(' ')} style={{\n            height\n        }}>\n            <div ref={details} className={[styles.detailsContent].join(' ')}>\n                <div className={[styles.row, 'topBanner'].join(' ')}>\n                    Board: {props.board}{'\\n'}\n                    For online games, enter {props.individual ? '' : 'team match '}game links below:\n                </div>\n                <div className={styles.row}>\n                    <EditableField\n                        content={chessCom}\n                        url={url.resolve(server, ['tournament', props.tournamentID, 'updateResultLink'].join('/'))}\n                        onSubmitSuccess={(e) => {\n                            props.update();\n                            return e\n                        }}\n                        handleSubmit={(k: string, v: string) => handleSubmit('chessCom', v)}\n                        name={'link'}\n                        additionalInputProps={{}}\n                        additionalStyles={{\n                            input: styles.inputURL,\n                            editableField: styles.editableField\n                        }}\n                        formRef={form}\n                        useHandleSubmit\n                        handleClear={() => handleClear('chessCom')}\n                        show={{\n                            clear: true\n                        }}\n                    >\n                        <button className={[styles.submit, styles.linkSubmit].join(' ')} onClick={e => form.current ? form.current.dispatchEvent(new Event('submit')) : null}>\n                            <img src={icons.chessCom} alt='chess.com' />\n                        </button>\n                    </EditableField>\n                </div>\n                <div className={styles.row}>\n                    <EditableField\n                        content={lichess}\n                        url={url.resolve(server, ['tournament', props.tournamentID, 'updateResultLink'].join('/'))}\n                        onSubmitSuccess={(e) => {\n                            props.update();\n                            return e\n                        }}\n                        handleSubmit={(k: string, v: string) => handleSubmit('lichess', v)}\n                        name={'link'}\n                        additionalInputProps={{}}\n                        additionalStyles={{\n                            input: styles.inputURL,\n                            editableField: styles.editableField\n                        }}\n                        formRef={form}\n                        useHandleSubmit\n                        handleClear={() => handleClear('lichess')}\n                        show={{\n                            clear: true\n                        }}\n                    >\n                        <button className={[styles.increment, styles.linkSubmit].join(' ')} onClick={e => form.current ? form.current.dispatchEvent(new Event('submit')) : null}>\n                            <img src={icons.lichess} alt='lichess' />\n                        </button>\n                    </EditableField>\n                </div>\n            </div>\n        </div>\n    );\n}","import { useEffect } from 'react';\n\nimport EditableField from './EditableField';\nimport Grid from './Grid';\nimport SinglePairing from './SinglePairing';\n\nexport { EditableField, Grid, SinglePairing };\n\nexport const useMouseDown = (callback: (e: MouseEvent) => any) => {\n\tuseEffect(() => {\n\t    window.addEventListener('mousedown', callback);\n\t    return () => window.removeEventListener('mousedown', callback);\n\t}, [callback]);\n};","import React, { ReactElement } from 'react';\nimport { server, POST } from '../utils/requests';\nimport url from 'url';\nimport styles from '../css/tournament.module.css';\nimport { TournamentStatus, TournamentSettings } from '../interfaces';\nimport { EditableField } from '../components/';\nimport { MdExitToApp, MdStop } from 'react-icons/md';\nimport { IoMdPlay, IoMdGrid } from 'react-icons/io';\n\ninterface InfoProps {\n\tstatus: TournamentStatus\n\tsettings: TournamentSettings\n\tupdateTournamentStatus: () => void\n\tround: number\n\ttotalRounds: number | 'Infinity'\n\tcloseTournament: () => void\n\ttoggleCrossTable: () => void\n\n\tlastRoundOverride: boolean\n\tsetLastRound: (override: boolean) => void\n\ttriggerError: (message: string) => void\n}\n\nexport default function InfoProps(props: InfoProps): ReactElement {\n\n    let lastRound = false;\n    if (typeof props.lastRoundOverride !== 'undefined') lastRound = props.lastRoundOverride;\n    else lastRound = props.settings.totalRounds === props.status.round;\n\n    let uri = url.resolve(server, ['tournament', props.status.id, 'setName'].join('/'));\n\n    return (\n        <div className={styles.titleBar} style={{\n            gridColumn: '2 /span 1'\n        }}>\n            <div className={styles.row}>\n                <div className={['topBanner', styles.header].join(' ')}>\n                    <EditableField\n                        content={props.status.name}\n                        url={uri}\n                        inputType='text'\n                        handleSubmit={(k: string, v: any) => POST({\n                            url: uri,\n                            data: {\n                                [k]: v\n                            }\n                        })}\n                        additionalStyles={styles}\n                        additionalInputProps={{}}\n                        onSubmitSuccess={(e) => {\n                            props.updateTournamentStatus();\n                            return e;\n                        }}\n                        defaultContent='Unnamed Swiss Tournament'\n                        show={{\n                            submit: true\n                        }}\n                    />\n                </div>\n            </div>\n            <div className={styles.row}>\n                <div className={'topBanner ' + styles.header}>\n                    ID: {props.status.id}\n                </div>\n                <div className={'topBanner ' + styles.header}>\n                    Round: {!props.status.round ? 'Not yet initialised' : props.status.round + ' / ' + (props.totalRounds === 'Infinity' ? '∞' : props.totalRounds)}\n                </div>\n            </div>\n            <div className={styles.row}>\n                <div className='button' onClick={props.closeTournament}>\n                    <span role='img' aria-label='back'>\n                        <MdExitToApp />\n                    </span>\n                </div>\n                <div className='button' onClick={() => {\n                    if (props.status.round >= props.settings.totalRounds) props.triggerError('Increase the number of rounds in Settings to continue!')\n                    props.setLastRound(!lastRound);\n                }}>\n                    <span role='img' aria-label='decommission'>\n                        {lastRound ? \n                            <IoMdPlay /> :\n                            <MdStop />\n                        }\n                    </span>\n                </div>\n                <div className='button' onClick={props.toggleCrossTable}>\n                    <IoMdGrid />\n                </div>\n            </div>\n        </div>\n    );\n\n}","import React, { ReactElement, useState, useEffect, useCallback, useMemo, useReducer } from 'react';\nimport styles from '../css/pairings.module.css';\nimport { TournamentStatus, TournamentSettings, ID, Player, PairingObject } from '../interfaces';\nimport { SinglePairing } from '../components/';\nimport { GET, POST } from '../utils/requests';\nimport { AiOutlineLoading3Quarters } from 'react-icons/ai';\nimport { IoIosSettings } from 'react-icons/io';\nimport { TiThMenu } from 'react-icons/ti';\nimport { PairingDetails } from '../components/SinglePairing';\n\ninterface PairingsProps {\n\tstatus: TournamentStatus\n\tplayerDict: Map<ID, Player>\n\tupdatePlayerDict: () => {}\n    playerDictKey: string\n\tsettings: TournamentSettings\n\n\tid: string\n\tcanTriggerNextRound: boolean\n\tsetDisplayPlayer: (id: string) => void\n\ttoggleSidebar: () => void\n\ttoggleSettings: () => void\n\n\tupdateRound: () => void\n\tsetLastRound: (override: boolean) => void\n\ttoggleCrossTable: () => void\n\tlastRoundOverride: boolean\n}\n\nexport default function Pairings(props: PairingsProps): ReactElement {\n\n    const round = useMemo(() => props.status.round, [props.status.round]);\n    \n    const [resultsState, updateResults] = useReducer(() => Math.random().toString(16).slice(2, 9), '');\n\tconst reduceResults = useCallback((state: Map<string, [number | null, number | null]>, {id, W, B}: {\n\t\tid: string\n\t\tW: Player,\n\t\tB: Player\n\t}): Map<string, [number | null, number | null]> => {\n\t\tstate.set(id, [\n\t\t\tW ? W.histories ? W.histories[round][props.settings.displayPoints] : null : 0,\n\t\t\tB ? B.histories ? B.histories[round][props.settings.displayPoints] : null : 0\n        ]);\n        updateResults({});\n\t\treturn state;\n\t}, [round, props.settings.displayPoints])\n\n\tconst [pairingData, setPairings] = useState([] as PairingObject[]);\n\tconst [results, setResults] = useReducer(reduceResults, new Map() as Map<string, [number | null, number | null]>);\n\tconst [loading, setLoading] = useState(false);\n\n\n\tconst getPairings = useCallback((): Promise<void> => {\n        if (!round) return;\n        if (!props.playerDict.size) return;\n\t\treturn GET({ url: '/tournament/' + props.id + '/getPairings'})\n\t\t\t.then((pairings: PairingObject[]) => {\n\t\t\t\tfor (let [w, b] of pairings) {\n                    setResults({\n                        id: w + '.' + b, \n                        W: props.playerDict.get(w),\n                        B: props.playerDict.get(b)\n                    });\n                }\n\t\t\t\tsetPairings(pairings);\n\t\t\t})\n\t\t\t.catch(console.error);\n\t}, [props.id, setPairings, setResults, round, props.playerDict, props.playerDictKey]);\n\n\tfunction getDisplayName(id: ID, player: Player): string {\n\t\tif (id === 'bye') return 'BYE';\n\t\tif (!player) return id;\n\t\tlet displayName: string;\n\t\tif (props.settings.competitors === 'individual') displayName = [player.firstName, player.lastName].join(' ');\n\t\telse displayName = player.firstName;\n\t\treturn `${displayName} [${player.score}]`;\n\t}\n\t\n\tlet pending = Array.from(results.values())\n\t\t\t.filter(arr => arr.every(v => v === null));\n\t\t\t\n\tconst triggerNextRound = (): Promise<void> => {\n\t\tsetLoading(true);\n\t\treturn POST({\n\t\t\turl: '/tournament/' + props.id + '/getNextPairings'\n\t\t})\n\t\t\t.then((pairings: PairingObject[]) => setPairings(pairings))\n\t\t\t.then(() => {\n\t\t\t\tgetPairings();\n\t\t\t\tprops.updatePlayerDict();\n\t\t\t})\n\t\t\t.then(props.updateRound)\n\t\t\t.catch(console.error)\n\t\t\t.finally(() => setLoading(false));\n\t}\n\n\tfunction generateNextButton(): ReactElement {\n\t\tlet lastRound: boolean;\n\t\tif (props.status.round >= props.settings.totalRounds) lastRound = true;\n\t\telse if (typeof props.lastRoundOverride !== 'undefined') lastRound = props.lastRoundOverride;\n\t\telse lastRound = false;\n\n\t\treturn loading ? (\n\t\t\t<div\n\t\t\t\tclassName={[styles.nextButton, 'button'].join(' ')}\n\t\t\t>\n\t\t\t\t<AiOutlineLoading3Quarters />\n\t\t\t</div>\n\t\t) : !props.canTriggerNextRound ? (\n\t\t\t<div className={[styles.waitButton].join(' ')}>\n\t\t\t\tTournament must have at least 2 active players\n\t\t\t</div>\n\t\t) : pending.length > 0 ? (\n\t\t\t<div className={[styles.waitButton].join(' ')} >\n\t\t\t\t{`Awaiting ${pending.length} result${pending.length > 1 ? 's' : ''}`}\n\t\t\t</div>\n\t\t) : lastRound ? (\n\t\t\t<div\n\t\t\t\tclassName={[styles.finishButton, 'button'].join(' ')}\n\t\t\t\tonClick={props.toggleCrossTable}\n\t\t\t>\n\t\t\t\tFinal Standings\n\t\t\t</div>\n\t\t) : (\n\t\t\t<div\n\t\t\t\tclassName={[styles.nextButton, 'button'].join(' ')}\n\t\t\t\tonClick={triggerNextRound}\n\t\t\t>\n\t\t\t\tNext Round\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\tfunction validateForm(form: HTMLFormElement): boolean | string | void {\n\t\tif (form.resultWhite.value === '' && form.resultBlack.value === '') return undefined;\n\t\tif (!Array.from(form).every((input) => (input as HTMLInputElement).validity.valid)) return false;\n\t\tif (!props.settings.gamePointTotal) return true;\n\t\tlet nW = Number(form.resultWhite.value);\n\t\tlet nB = Number(form.resultBlack.value);\n\t\tlet total = props.settings.displayPoints === 'game' ? props.settings.gamePointTotal : 1;\n\t\tif (nW + nB === total) return true;\n\t\treturn 'Setting: sum results to ' + props.settings.gamePointTotal;\n    }\n    \n    const [expanded, setExpanded] = useState('');\n\n\tfunction Listing(): ReactElement[] {\n\t\tlet pairings = [] as ReactElement[];\n        let dict = props.playerDict;\n        let i = 1;\n\t\tfor (let [w, b, gameLinks] of pairingData) {\n\t\n\t\t\tlet [white, black] = [dict.get(w), dict.get(b)];\n\t\t\tlet [wDisplay, bDisplay] = [getDisplayName(w, white), getDisplayName(b, black)];\t\t\t\n\t\t\tlet id = w + '.' + b;\n\t\t\tlet result = results.get(id);\n            if (!result) continue;\n\t\t\tpairings.push(\n\t\t\t\t<div id={id} className={styles.pairing} key={['pairings', w, b].join('.')} >\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={['playerInfo', styles.playerInfo, w === 'bye' ? styles.bye : ''].join(' ')}\n\t\t\t\t\t\tid={w}\n\t\t\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => w === 'bye' ? null : props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n\t\t\t\t\t>{wDisplay}</div>\n                        <SinglePairing\n                            expand={(set: boolean) => setExpanded(set ? id : '')}\n                            expanded={expanded === id}\n                            result={result}\n\t\t\t\t\t\t\ttournamentID={props.id}\n\t\t\t\t\t\t\tinputClassName={styles.inputResult}\n\t\t\t\t\t\t\thidden={{\n\t\t\t\t\t\t\t\tW: w,\n\t\t\t\t\t\t\t\tB: b\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvalidate={validateForm}\n\t\t\t\t\t\t\thandleSubmit={async (e) => {\n                                let form = e.target as HTMLFormElement & {resultWhite: HTMLInputElement, resultBlack: HTMLInputElement};\n                                results.set(id, [Number(form.resultWhite.value), Number(form.resultBlack.value)]);\n                                updateResults({});\n\t\t\t\t\t\t\t\tprops.updatePlayerDict();\n\t\t\t\t\t\t\t\treturn e;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={['playerInfo', styles.playerInfo, styles.playerInfo, b === 'bye' ? styles.bye : ''].join(' ')}\n\t\t\t\t\t\tid={b}\n\t\t\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => b === 'bye' ? null : props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n\t\t\t\t\t>{bDisplay}</div>\n                </div>,\n                <PairingDetails\n                    tournamentID={props.status.id}\n                    id={id}\n                    board={i}\n                    className={styles.pairing}\n                    expanded={expanded === id}\n                    gameLinks={gameLinks}\n                    individual={props.settings.competitors === 'individual'}\n                    update={getPairings}\n                />\n            );\n            i++;\n\t\t}\n\t\treturn pairings;\n\t}\n\n\tuseEffect(() => {\n\t\tgetPairings();\n    }, [getPairings]);\n    \n    const listing = useMemo(Listing, [props.playerDict, pairingData, getDisplayName, results, resultsState, props.updatePlayerDict, getPairings, props.setDisplayPlayer, setResults, props.playerDictKey]);\n\n\treturn (\n        <>\n            <div className={styles.pairings}>\n                <div className={['topBanner', styles.topBanner].join(' ')}>\n                    Pairings\n                </div>\n                <div className={styles.pairingContainer}>\n                    {listing}\n                </div>\n            </div>\n            <div className={['bottomBanner', styles.statusBar].join(' ')}>\n                <div className={['button'].join(' ')} onClick={props.toggleSidebar}>\n                    <TiThMenu />\n                </div>\n                {generateNextButton()}\n                <div className={['button'].join(' ')} onClick={props.toggleSettings}>\n                    <IoIosSettings />\n                </div>\n            </div>\n        </>\n\t);\n\n}","import React, { ReactElement } from 'react';\n\nexport function Bottom(...arr: [\n    (() => Promise<void> | void),\n    ReactElement | string,\n    string\n][]): ReactElement[] {\n    let buttons = [] as ReactElement[];\n    for (let item of arr) {\n        if (!item) continue;\n        let [func, icon, name] = item;\n        buttons.push(<div key={['button', name].join('.')} onClick={func} className='button'>\n            {icon}\n        </div>);\n    }\n    return buttons;\n}","import React, { ReactElement, useEffect, CSSProperties, useState, ReactNode, useRef } from 'react';\nimport { AiOutlineLeft } from 'react-icons/ai';\nimport styles from '../css/components.module.css';\n\ninterface SectionProps {\n    children?: ReactNode & ReactNode[]\n    header: string | ReactElement\n    useInternalState?: boolean\n    value?: string\n    expanded?: boolean\n    setExpanded?: (state: boolean, action: string) => void\n    style?: CSSProperties\n    id?: string\n}\n\nexport function SectionBreak() {\n\n    return (\n        <div className={styles.sectionContainer}>\n            <div className={[styles.sectionHeader, 'topBanner'].join(' ')}>\n                <div className={styles.sectionHeaderText} />\n            </div>\n        </div>\n    );\n}\n\nexport default function CollapsableSection(props: SectionProps) {\n\n    const [internalExpanded, setExpanded] = useState(props.expanded || true);\n    const [height, setHeight] = useState(0);\n\n    const innerDiv = useRef() as React.RefObject<HTMLDivElement>;\n\n    let expanded = props.useInternalState ? internalExpanded : props.expanded;\n\tuseEffect((): void => {\n        if (!innerDiv.current) return;\n        setHeight(expanded ? innerDiv.current.getBoundingClientRect().height : 0);\n\t}, [expanded, innerDiv, props.children]);\n\n    return (\n        <div className={styles.sectionContainer} style={props.style}>\n            <div className={[styles.sectionHeader, 'topBanner'].join(' ')}>\n                <div className={styles.sectionHeaderText} onClick={() => props.useInternalState ? setExpanded(!expanded) : props.setExpanded(!expanded, props.value)}>\n                    {props.header}\n                </div>\n                {!props.children.length ?\n                    null : \n                    <div className={styles.sectionToggle} onClick={() => props.useInternalState ? setExpanded(!expanded) : props.setExpanded(!expanded, props.value)}>\n                        <AiOutlineLeft style={{\n                            transform: expanded ? 'rotate(-90deg)' : 'rotate(0deg)'\n                        }}/>\n                    </div>\n                }\n            </div>\n            <div className={[styles.sectionListWrapper, expanded ? styles.expanded : ''].join(' ')} style={{\n                height\n            }}>\n                <div ref={innerDiv} className={[styles.sectionList].join(' ')} id={props.id}>\n                    {props.children}\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { ReactElement, FormEvent, useState, useCallback, useMemo, useEffect, createRef } from 'react';\nimport CSV from 'papaparse';\nimport url from 'url';\nimport { Player, TournamentPlayers, ID, TournamentStandings, TournamentSettings } from '../interfaces';\nimport { GET, POST, server, FORM} from '../utils/requests';\n\nimport styles from '../css/sidebar.module.css';\nimport { AiFillEdit, AiOutlineClose, AiOutlineCheck } from 'react-icons/ai';\nimport { MdRefresh, MdMenu } from 'react-icons/md';\nimport { IoMdClose } from 'react-icons/io';\nimport { Bottom } from '../components/Buttons';\nimport CollapsableSection, { SectionBreak } from '../components/CollapsableSection';\n\ninterface SidebarProps {\n\tplayerDict: Map<ID, Player>\n\tplayerDictKey: string //required to force a reload\n\tupdatePlayerDict: (force?: boolean) => void\n    setPlayerDict: (value: {\n        id?: string;\n        player?: Player;\n        players?: Player[];\n        hash?: string;\n    }) => void\n\tid: string\n\tsettings: TournamentSettings\n\tsetDisplayPlayer: (id: string) => void\n    checkIfEnoughPlayers: (reload?: boolean) => void\n    togglePasteInput: () => void\n}\n\ninterface ActiveProps {\n\tplayer: Player\n\n\teditPlayer: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n\tactivatePlayer: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n    clearPlayer: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n    allowNewPlayers: boolean\n    setDisplayPlayer: (id: string) => void\n\n\tround: number\n\trequireLastName: boolean\n}\n\nexport function ActivePlayer(props: ActiveProps): ReactElement {\n\n\tconst displayName = props.requireLastName ?\n\t\t[props.player.firstName, props.player.lastName].join(' ') :\n\t\tprops.player.firstName;\n\t\n\treturn (\n\t\t<div id={props.player.id} className={styles.playerLine}>\n\t\t\t<div\n\t\t\t\tclassName={['playerInfo', styles.playerInfo, !props.player.active ? styles.playerInactive : ''].join(' ')}\n\t\t\t\tstyle={{\n\t\t\t\t\tgridColumn: props.round && !props.allowNewPlayers ? '1 / span 3' : undefined\n\t\t\t\t}}\n\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => props.setDisplayPlayer((e.target as HTMLDivElement).parentElement.id)}\n\t\t\t>\n\t\t\t\t{displayName} ({props.player.rating.toString()}) {props.round && (props.player.played < props.round) ? '*' : ''}\n\t\t\t</div>\n\t\t\t{props.round && !props.allowNewPlayers ? null : <>\n\t\t\t\t<button name='edit' className={styles.edit} onClick={(props.editPlayer)} >\n\t\t\t\t\t<AiFillEdit />\n\t\t\t\t</button>\n\t\t\t\t{props.player.active ?\n\t\t\t\t\t<button name='cancel' className={styles.cancel} onClick={(props.clearPlayer)}>\n\t\t\t\t\t\t<AiOutlineClose />\n\t\t\t\t\t</button> :\n\t\t\t\t\t<button name='active' className={styles.activate} onClick={(props.activatePlayer)}>\n\t\t\t\t\t\t<AiOutlineCheck />\n\t\t\t\t\t</button>\n\t\t\t\t}\n\t\t\t</>}\n\t\t</div>\n\t);\n\n}\n\ninterface FormProps {\n\tid: string\n\tplayer?: Player,\n\trequireLastName: boolean\n\tonSubmit: (e: React.FormEvent<HTMLFormElement>) => Promise<void>\n\tonKeyDown?: (e: React.KeyboardEvent<HTMLFormElement>) => void\n    handlePaste?: (e: React.ClipboardEvent<HTMLInputElement>) => void\n    action: string\n}\n\nexport function EditableForm(props: FormProps) {\n\n    const firstInput = createRef() as React.RefObject<HTMLInputElement>;\n    const [focus, mustFocus] = useState(false);\n\n    useEffect(() => {\n        if (!focus && !props.player) return;\n        if (!firstInput.current) return;\n        firstInput.current.focus();\n    }, [firstInput])\n\t\n\treturn (\n\t\t<div className={styles.scoreSection}>\n\t\t\t<form\n\t\t\t\ttarget='_self'\n\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\tonSubmit={(e) => props.onSubmit(e).then(() => mustFocus(true))}\n\t\t\t\tmethod='POST'\n\t\t\t\taction={props.action}\n\t\t\t>\n                <input type='text' className={styles.input} name='firstName' required style={{width: props.requireLastName ? '25%' : '65%'}}\n                    ref={firstInput}\n\t\t\t\t\tplaceholder={props.player ? undefined : props.requireLastName ? 'First name' : 'Team name'}\n\t\t\t\t\tdefaultValue={props.player?.firstName}\n\t\t\t\t\tonPaste={props.handlePaste}\n\t\t\t\t/>\n\t\t\t\t<input type='text' className={styles.input} name='lastName' required={props.requireLastName} style={{width: '40%', display: props.requireLastName ? 'block' : 'none'}}\n\t\t\t\t\tplaceholder={props.player ? undefined : 'Last name'}\n\t\t\t\t\tdefaultValue={props.player?.lastName} \n\t\t\t\t/>\n\t\t\t\t<input type='number' className={styles.input} min={0} max={3200} name='rating' required style={{width: '20%'}}\n\t\t\t\t\tplaceholder={props.player ? undefined : props.requireLastName ? 'Rating' : 'Av. Rating'}\n\t\t\t\t\tdefaultValue={props.player?.rating}\n\t\t\t\t/>\n\t\t\t\t<input type='hidden' name='id' value={props.player?.id} required/>\n\t\t\t\t<button tabIndex={-1} className={styles.submit}>\n\t\t\t\t\t<AiOutlineCheck />\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default function Sidebar(props: SidebarProps): ReactElement {\n\n\tconst [round, setRound] = useState(0);\n\tconst [players, setPlayersRaw] = useState({} as TournamentPlayers);\n\tconst [linkedState, setLinkedState] = useState({} as TournamentStandings);\n\n\t/** UPDATES SECTION */\n\n\tconst updatePlayerState = useCallback((): Promise<TournamentStandings> => {\n\t\tif (!props.id) return Promise.resolve({} as TournamentStandings);\n\t\treturn GET({ url: '/tournament/' + props.id + '/getState' })\n\t\t\t.then(({round, players}: {round: number, players: TournamentStandings}) => {\n\t\t\t\tsetLinkedState(players);\n\t\t\t\tsetRound(round);\n\t\t\t\treturn players;\n\t\t\t});\n\t}, [props.id]);\n\n\t/**\n\t * The fundamental method. Called everytime there's a change to the player list. The backbone of this element.\n\t */\n\tconst setPlayers = useCallback(async (refresh?: boolean | void): Promise<void> => {\n\t\tlet state = refresh !== false ? await updatePlayerState() : linkedState;\n\t\tif (!state) return Promise.resolve();\n\t\tlet players = {} as TournamentPlayers;\n\t\tfor (let [k, v] of Object.entries(state)) {\n\t\t\tplayers[k] = v.map((id: string) => {\n\t\t\t\tlet player = props.playerDict.get(id);\n\t\t\t\t//if (!player) console.error('Unmatched ID: ' + id);\n\t\t\t\treturn player;\n\t\t\t}).sort((a: Player, b: Player) => b.rating - a.rating).filter((v) => v);\n\t\t}\n\t\tsetPlayersRaw(players);\n\t\tprops.checkIfEnoughPlayers(false);\n\t}, [updatePlayerState, props.playerDict, props.checkIfEnoughPlayers, linkedState]);\n\n\t/** CALLBACK SECTION */\n\t\n\tconst updatePlayer = useCallback((id: ID): Promise<Player> => {\n\t\treturn GET({\n\t\t\turl: '/tournament/' + props.id + '/fetchPlayer',\n\t\t\tparams: { id }\n\t\t})\n\t\t\t.then((player: Player) => {\n\t\t\t\tprops.setPlayerDict({player});\n\t\t\t\treturn player;\n\t\t\t});\n\t}, [props.id, props.setPlayerDict]);\n\n\tconst activatePlayer = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n\t\tlet button = e.target as HTMLButtonElement;\n\t\tif (button.constructor.name !== 'HTMLButtonElement') return;\n        let id = (button.parentNode as HTMLDivElement).id;\n\t\tPOST({\n\t\t\turl: '/tournament/' + props.id + '/activatePlayer',\n\t\t\tdata: { id }\n\t\t})\n\t\t\t.then(() => updatePlayer(id))\n\t\t\t.catch(console.error);\n\t}, [props.id, updatePlayer]);\n\n\t/**\n\t * Clears a single page. Called when the 'X' button is hit next to a player\n\t */\n\tconst clearPlayer = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n\t\tlet button = e.target as HTMLButtonElement;\n\t\tif (button.constructor.name !== 'HTMLButtonElement') return;\n\t\tlet id = (button.parentNode as HTMLDivElement).id;\n\t\tPOST({\n\t\t\turl: '/tournament/' + props.id + '/clearPlayer',\n\t\t\tdata: { id }\n\t\t})\n\t\t\t.then((data: string) => {\n                if (data === 'inactive') updatePlayer(id);\n                else props.setPlayerDict({id});\n            })\n\t\t\t.catch(console.error);\n\t}, [updatePlayer, props.id]);\n\n\t/**\n\t * Clears all players. Called when the 'X' button is pressed at the bottom of the sidebar\n\t */\n\tconst clearPlayerList = useCallback(async (): Promise<void> => {\n\t\tawait POST({ url: '/tournament/' + props.id + '/clearPlayers' }).catch(console.error);\n\t\tprops.checkIfEnoughPlayers();\n\t}, [props.id, props.checkIfEnoughPlayers]);\n\t\n\tconst requireLastName = useMemo(() => props.settings.competitors === 'individual', [props.settings.competitors]);\n\n\t/* RENDERING SECTION */\n\n\tconst handlePaste = useCallback((e: React.ClipboardEvent<HTMLInputElement>) => {\n\t\tlet text = e.clipboardData.getData('text').toString();\n\t\tif (!text.trim()) return;\n\t\tif (!text.split('\\n').length && text.split(',').length && text.split('\\t').length) return;\n\t\te.preventDefault();\n\t\tlet json = CSV.parse(text, {\n\t\t\tdelimitersToGuess: [',', '\\t'],\n\t\t\tdynamicTyping: true,\n\t\t\tfastMode: true\n\t\t} as CSV.ParseConfig) as CSV.ParseResult;\n\t\tif (json.data.length > 100) return console.error('Can\\'t paste more than 100 players at once!');\n\t\tlet data = json.data.map((row) => {\n\t\t\tlet [firstName, lastName, rating]: [string, string, number] = row;\n\t\t\tif (!requireLastName) [firstName, rating, lastName] = [...row, ''];\n\t\t\tif (!firstName || (!lastName && requireLastName) || rating === null || rating === undefined) return null;\n\t\t\ttry {\n\t\t\t\tif (typeof firstName !== 'string') throw [firstName, 'string'].join(',');\n\t\t\t\tif (typeof lastName !== 'string' && requireLastName) throw [lastName, 'string'].join(',');\n\t\t\t\tif (typeof rating !== 'number') throw [rating, 'number'].join(',');\n\t\t\t\treturn {firstName, lastName, rating};\n\t\t\t} catch (error) {\n\t\t\t\tif (!text.split('\\n').length) return null;\n\t\t\t\tlet e = error.split(',');\n\t\t\t\tconsole.error(new TypeError('Bad input on row ' + row.join(',') + '\\n' + e[0] + ' is not type ' + e[1]));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t})\n\t\t\t.filter(r => r);\n\t\tPOST({\n\t\t\turl: 'tournament/' + props.id + '/appendPlayers',\n\t\t\tdata\n\t\t})\n\t\t\t.then(() => Promise.all([props.updatePlayerDict(), setPlayers()]));\n\t}, [props.id, requireLastName, props.updatePlayerDict, setPlayers]);\n\n\tconst Forms = useMemo((): JSX.Element[] => {\n\n\t\tlet forms = [] as JSX.Element[];\n\t\t\n\t\tfor (let i = 0; i < Math.max(1, 10 - Object.values(players).reduce((acc: number, curr: Player[]) => acc += curr.length, 0)); i++) {\n\t\t\tforms.push(\n\t\t\t\t<EditableForm\n\t\t\t\t\tkey={['newPlayerForm', i].join('.')}\n\t\t\t\t\tid={props.id}\n\t\t\t\t\tplayer={null}\n\t\t\t\t\trequireLastName={requireLastName}\n\t\t\t\t\tonSubmit={(e: FormEvent<HTMLFormElement>): Promise<void> => FORM(e)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tlet form = e.target as HTMLFormElement;\n\t\t\t\t\t\t\tform.reset();\n\t\t\t\t\t\t})\n                        .then(() => props.updatePlayerDict())\n                    }\n                    handlePaste={i ? undefined : handlePaste}\n                    action={url.resolve(server, ['tournament', props.id, 'appendPlayer'].join('/'))}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn forms;\n    }, [props.updatePlayerDict, props.id, requireLastName, players, handlePaste]);\n    \n    function Entry(entryProps: { player: Player }): ReactElement {\n\n        const [edit, setEdit] = useState(false);\n        const [player, setPlayer] = useState(entryProps.player);\n\n        if (edit) return <EditableForm\n            id={props.id}\n            requireLastName={requireLastName}\n            player={player}\n            onKeyDown={(e: React.KeyboardEvent<HTMLFormElement>) => {\n                const ESCAPE_KEY = 27;\n                if (e.keyCode !== ESCAPE_KEY) return;\n                setEdit(false);\n            }}\n            onSubmit={async (e: FormEvent<HTMLFormElement>): Promise<void> => FORM(e)\n                .then(async () => {\n                    let newPlayer = await updatePlayer(player.id);\n                    setPlayer(newPlayer);\n                    setEdit(false);\n                })\n            }\n            action={url.resolve(server, ['tournament', props.id, 'editPlayer'].join('/'))}\n        />\n\n        return <ActivePlayer\n            player={player}\n            round={round}\n            requireLastName={requireLastName}\n            editPlayer={() => setEdit(true)}\n            activatePlayer={activatePlayer}\n            clearPlayer={clearPlayer}\n            allowNewPlayers={props.settings.allowNewPlayers}\n            setDisplayPlayer={props.setDisplayPlayer}\n        />\n    }\n\n\tconst List = useMemo((): ReactElement[] => {\n\t\tlet list = [] as ReactElement[];\n\t\tfor (let i = round; i >= 0; i-= 0.5) {\n\t\t\tlet score = i.toString();\n            if (!players[score] || !players[score].length) continue;\n            let section = <CollapsableSection\n                key={['sidebar', 'round', score].join('.')}\n                header={score + ' points'}\n                useInternalState={true}\n                id={['container', score].join('.')}\n            >\n                {players[score].map((p) => <Entry key={p.id} player={p} />)}\t\n            </CollapsableSection>\n            list.push(section);\n\t\t}\n\t\treturn list;\n    }, [round, players, requireLastName, props.settings.allowNewPlayers]);\n\n    useEffect(() => {\n        if (!props.playerDict.size) return;\n        setPlayers();\n        props.checkIfEnoughPlayers(false);\n    }, [props.playerDictKey]);\n\n\treturn (\t\t\n        <>\t\n            <div className={styles.sidebar}>\n                <div className={styles.topBanner}>\n                    Tournament Players\n                </div>\t\n                <div className={styles.playersSection}>\n                    {!List.length ? <div className={styles.scoreSection}>\n                        <div className={styles.playerLine}>\n                            <div className={styles.sectionHeader}>\n                                {List.length ? 'Player List' :'No players added yet'}\n                            </div>\n                        </div>\n                    </div> : null}\n                    {List}\n                    {round && !props.settings.allowNewPlayers ? null :\n                        <div className={styles.scoreSection}>\n                            {Forms}\n                        </div>\n                    }\n                    <SectionBreak />\n                </div>\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                {Bottom(\n                    [async () => {\n                        props.togglePasteInput();\n                    }, <MdMenu />, 'paste'],\n                    [async () => {\n                        props.updatePlayerDict(true);\n                    }, <MdRefresh />, 'refresh'],\n                    round === 0 ? [async () => { /*\n                        for (let form of Object.values(this.refs)) {\n                            if (form.constructor.name !== 'HTMLFormElement') continue;\n                            (form as HTMLFormElement).reset();\n                        }*/\n                        if (round !== 0) return;\n                        await clearPlayerList();\n                        props.updatePlayerDict();\n                        setPlayers();\n                    }, <IoMdClose />, 'close'] : null\n                )}\n            </div>\n        </>\n\t);\n};","import React, { ReactElement, useCallback, useState, useEffect, useMemo, createRef, FormEvent } from 'react';\nimport { GET, server, POST } from '../utils/requests';\nimport { Player, TournamentSettings, ID, History, PairingObject } from '../interfaces';\nimport url from 'url';\n\nimport styles from '../css/profile.module.css';\nimport sidebarStyles from '../css/sidebar.module.css';\nimport { IoMdClose } from 'react-icons/io';\nimport { Bottom } from '../components/Buttons';\nimport CollapsableSection, { SectionBreak } from '../components/CollapsableSection';\nimport { AiOutlineCheck, AiOutlineClose } from 'react-icons/ai';\nimport { AxiosRequestConfig } from 'axios';\n\ninterface ActiveProps {\n\tplayer: Player\n    clearClash: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n    setDisplayPlayer: (id: string) => void\n\trequireLastName: boolean\n}\n\nexport function ActivePlayer(props: ActiveProps): ReactElement {\n\n\tconst displayName = props.requireLastName ?\n\t\t[props.player.firstName, props.player.lastName].join(' ') :\n\t\tprops.player.firstName;\n\t\n\treturn (\n\t\t<div id={props.player.id} className={[sidebarStyles.playerLine, styles.playerLine].join(' ')}>\n\t\t\t<div\n\t\t\t\tclassName={['playerInfo', sidebarStyles.playerInfo].join(' ')}\n\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => props.setDisplayPlayer((e.target as HTMLDivElement).parentElement.id)}\n\t\t\t>\n\t\t\t\t{displayName}\n\t\t\t</div>\n\t\t\t{\n                <button name='cancel' className={[sidebarStyles.cancel, styles.cancel].join(' ')} onClick={(props.clearClash)}>\n                    <AiOutlineClose />\n                </button>\n            }\n\t\t</div>\n\t);\n\n}\n\ninterface FormProps {\n\tid: string\n\tonSubmit: (e: React.FormEvent<HTMLFormElement>) => Promise<void>\n    action: string\n    player: Player\n    players: Player[]\n    getDisplayName: (player: string) => string\n}\n\nexport function SingleClash(props: FormProps) {\n\n    const firstInput = createRef() as React.RefObject<HTMLInputElement>;\n    const [focus, mustFocus] = useState(false);\n\n    useEffect(() => {\n        if (!focus) return;\n        if (!firstInput.current) return;\n        firstInput.current.focus();\n    }, [firstInput, focus]);\n\n    const handleInput = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n        let input = e.target as HTMLInputElement;\n        let text = input.value;\n        if (!text.trim()) return;\n        let length = text.length;\n        let choices = props.players.filter(p => p.id !== props.player.id && props.getDisplayName(p.id).toLowerCase().startsWith(text.toLowerCase()));\n        let firstChoice = choices[0];\n        if (!firstChoice) return;\n        let autofill = props.getDisplayName(firstChoice.id);\n        input.value = autofill;\n        input.select();\n        input.setSelectionRange(length, autofill.length, 'forward');\n    }, [props.players])\n\t\n\treturn (\n\t\t<div className={styles.scoreSection}>\n\t\t\t<form\n\t\t\t\ttarget='_self'\n\t\t\t\tonSubmit={(e) => props.onSubmit(e).then(() => mustFocus(true))}\n\t\t\t\tmethod='POST'\n\t\t\t\taction={props.action}\n\t\t\t>\n                <input type='text' className={[sidebarStyles.input, styles.input].join(' ')} name='oppName' required\n                    placeholder='Opponent name'\n                    onInput={handleInput}\n                    autoComplete={'off'}\n\t\t\t\t/>\n\t\t\t\t<button tabIndex={-1} className={sidebarStyles.submit}>\n\t\t\t\t\t<AiOutlineCheck />\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\ninterface ProfileProps {\n\tid: string\n\tplayerID: string\n\tsetDisplayPlayer: (id: string) => void\n\tplayerDict: Map<ID, Player>\n\tmodifyPlayerDict: (p: Player, hash: string) => void\n\tsettings: TournamentSettings\n\tplayerDictKey?: string\n}\n\nexport default function Profile(props: ProfileProps): ReactElement {\n    \n    const [playerID, setPlayerID] = useState('');\n    const [player, setPlayer] = useState(null as Player);\n\n    const requireLastName = useMemo(() => props.settings.competitors === 'individual', [props.settings.competitors]);\n\n\tconst updatePlayerFromProps = (refetch?: boolean) => {\n\t\tsetPlayerID(playerID);\t\t\n\t\tif (!props.playerID) {\n\t\t\tsetPlayer(null as Player);\n\t\t\treturn;\n\t\t}\n\t\tif (refetch === false) {\n\t\t\tsetPlayer(props.playerDict.get(props.playerID));\n\t\t} else {\n\t\t\treturn GET({\n\t\t\t\turl: '/tournament/' + props.id + '/fetchPlayer',\n\t\t\t\tparams: {\n\t\t\t\t\tid: props.playerID\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then((_player: Player) => {\n\t\t\t\t\tif (!_player.histories[0]) _player.histories[0] = null;\n\t\t\t\t\tsetPlayer(_player);\n\t\t\t\t});\n\t\t}\n\t}\n\n\tconst getNameFromPlayer = useCallback((_player: Player): string  =>{\n\t\tif (!_player) return '\\u200b';\n\t\tif (requireLastName) return [_player.firstName, _player.lastName].join(' ');\n\t\telse return _player.firstName;\n\t}, [requireLastName]);\n    \n    useEffect(() => {\n        updatePlayerFromProps();\n    }, [props.playerID, props.playerDictKey])\n\n\tconst getDisplayName = useCallback((id: ID): string => {\n        if (!id) return '\\u200b';\n\t\tif (id === 'bye') return 'BYE';\n\t\tlet opp = props.playerDict.get(id);\n\t\tif (!opp) return id;\n\t\tlet displayName: string;\n\t\tif (requireLastName) displayName = [opp.firstName, opp.lastName].join(' ');\n\t\telse displayName = opp.firstName;\n\t\treturn displayName;\n    }, [props.playerDict, requireLastName]);\n    \n    const renderEntry = useCallback(([k, v]: [string, any], i: number): ReactElement => {\n        if (k === 'Playing' && v) {\n            return (\n                <div className={styles.row} key={['row', i].join('.')}>\n                    <div className='fieldBox'>{k + ':'}</div>\n                    <div\n                        className='playerInfo'\n                        id={v as string}\n                        onClick={(e: React.MouseEvent<HTMLDivElement>) => props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n                    >{getDisplayName(v)}</div>\n                </div>\n            );\n        } else {\n            return (\n                <div className={styles.row} key={['row', i].join('.')}>\n                    <div className='fieldBox'>{k + ':'}</div>\n                    <div className='fieldBox'>{v !== null && v!== '' ? v : '\\u200b'}</div>\n                </div>\n            );\n        }\n    }, [props.setDisplayPlayer, getDisplayName]);    \n\n    const [clashes, setClashes] = useState([] as PairingObject[]);\n\n    const updateClashes = useCallback(async () => {\n        if (!player || !player.id) return;\n        GET({\n            url: '/tournament/' + props.id + '/fetchClashes',\n            params: { id: player.id }\n        })\n            .then(setClashes)\n    }, [props.id, setClashes, player]);\n    const clearClash = useCallback(async (oppId) => POST({\n        url: '/tournament/' + props.id + '/clearClash',\n        data: {\n            playerId: player.id,\n            oppId\n        }\n    })\n        .then(updateClashes), [props.id, player, updateClashes]);\n\n    const List = useMemo((): ReactElement[] => {\n        if (!props.playerDict.size) return null;\n        let list = [] as ReactElement[];\n        for (let i = 0; i < clashes.length; i++) {\n            let opp = props.playerDict.get(clashes[i][1]);\n            if (!opp) continue;\n            list.push(<ActivePlayer\n                key={['clash', i].join('.')}\n                player={opp}\n                requireLastName={requireLastName}\n                clearClash={() => clearClash(opp.id)}\n                setDisplayPlayer={props.setDisplayPlayer}\n            />);\n        }\n        return list;\n    }, [props.playerDict, props.playerDictKey, clashes, clearClash, props.setDisplayPlayer, requireLastName]);\n\n    useEffect(() => {\n        updateClashes();\n    }, [updateClashes]);\n\n    const players = useMemo(() => Array.from(props.playerDict.values()), [props.playerDict, props.playerDictKey]);\n\n    if (!player) return null;\n    let Name = getNameFromPlayer(player);\n    const profile = !player ? {} : {\n        'Unique ID': player.id,\n        Status: player.active !== false ? 'Active' : 'Inactive',\n        Rating: player.rating,\n        'Performance rating': player.performanceRating,\n        Playing: player.isPlaying\n    };\n    let history = player.histories;\n\n    const total = (Math.max(player.histories.length, 1) - 1 - (player.isPlaying ? 1 : 0)).toString();\n    const totalGames = player.histories.reduce((acc, curr) => {\n        if (!curr) return acc;\n        acc += curr.played\n        return acc;\n    }, 0);\n    const scores = !player ? {} : {\n        Score: player.score.toString() + ' / ' + total,\n        'Game score': player.gamePoints.toString() + ' / ' + totalGames.toString(),\n        'Expected score': player.expectedScore.toFixed(2),\n        'Expected game score': player.expectedGameScore.toFixed(2) + ' / ' + totalGames,\n    };\n    if (!props.settings.displayPoints) {\n        delete scores['Game score'];\n        delete scores['Expected game score'];\n    }\n\n    return (\n        <>\n            <div className={styles.profile}>\t\t\n                <div className='topBanner'>\n                    {Name}\n                </div>\t\n                {Object.entries(profile).map(renderEntry)}\n                <CollapsableSection\n                    header='Score'\n                    useInternalState={true}\n                    style={{ gridColumn: '1 / span 2' }}\n                >\n                    {Object.entries(scores).map(renderEntry)}\n                </CollapsableSection>\n                {props.settings.allowClashes ? <CollapsableSection\n                    header='Forbidden Pairings'\n                    useInternalState={true}\n                    style={{ gridColumn: '1 / span 2' }}\n                >\n                    {List}\n                    <SingleClash\n                        id={props.id}\n                        getDisplayName={getDisplayName}\n                        onSubmit={(e: FormEvent<HTMLFormElement>): Promise<void> => {\n                            e.preventDefault();\n                            e.persist();\n                            let form = e.target as HTMLFormElement & { oppName: HTMLInputElement };\n                            let opp = players.find(p => getDisplayName(p.id) === form.oppName.value);\n                            let options = {\n                                data: {\n                                    playerId: player.id,\n                                    oppId: opp.id\n                                },\n                                url: form.action\n                            } as AxiosRequestConfig;\n                            return POST(options)\n                                .then(() => {\n                                    let form = e.target as HTMLFormElement;\n                                    form.reset();\n                                })\n                                .then(updateClashes)\n                        }}\n                        player={player}\n                        players={players}\n                        action={url.resolve(server, ['tournament', props.id, 'createClash'].join('/'))}\n                    />\n                </CollapsableSection> : null}\n                <CollapsableSection\n                    header='Results'\n                    useInternalState={true}\n                    style={{ gridColumn: '1 / span 2' }}\n                >\n                    {history.map((minPlayer: History, i: number): ReactElement => {\n                        if (i === 0 || !minPlayer) return null;\n                        let { id, colour } = minPlayer;\n                        let result = minPlayer[props.settings.displayPoints];\n                        return (\n                            <div className={styles.resultsRow} key={['row', 'history', i].join('.')}>\n                                <div className='fieldBox'>{i}</div>\n                                <div\n                                    className='playerInfo'\n                                    id={id}\n                                    onClick={(e: React.MouseEvent<HTMLDivElement>) => props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n                                >{getDisplayName(id)}</div>\n                                <div className='fieldBox'>{colour || '\\u200b'}</div>\n                                <div className='fieldBox'>{typeof result !== 'undefined' && result !== null ? result : '\\u200b'}</div>\n                            </div>\n                        );\n                    })}\n                </CollapsableSection>\n                <SectionBreak />\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                {Bottom([() => props.setDisplayPlayer(''), <IoMdClose />, 'close'])}\n            </div>\t\n        </>\n    );\n}","import { useDebugValue, useState } from 'react';\n\nexport function capitalise(str: string): string {\n\tif (!str) return str;\n\treturn str.slice(0, 1).toUpperCase() + str.slice(1).toLowerCase();\n}\n\nexport function delay(ms: number): Promise<void> {\n\treturn new Promise((res) => {\n\t\tsetTimeout(res, ms);\n\t});\n}\n\nexport function calculateHypotenuse(base: number, height: number): number {\n\treturn Math.sqrt(Math.pow(base, 2) + Math.pow(height, 2));\n}\n\nexport function useStateWithLabel(initialValue: any, name: string) {\n    const [value, setValue] = useState(initialValue);\n    useDebugValue(`${name}: ${value}`);\n    return [value, setValue];\n}\n\nexport function daysBetween(start: Date, end: Date): number {\n\n    const oneDay = 1000 * 60 * 60 * 24; // The number of milliseconds in all UTC days (no DST)\n  \n    // so it's safe to divide by 24 hours\n    return (end.valueOf() - start.valueOf()) / oneDay;\n  }","import { capitalise, daysBetween } from '../utils/prototype';\nimport { TournamentStatus, Player, TournamentSettings, User } from '../interfaces';\nimport { resultsServer } from '../utils/requests';\n\nexport interface TournamentSetting {\n\tname?: string\n\tenum?: string[]\n\tconvert?: (v: any) => string\n\tvalue?: (status: any, players: Player[]) => any\n\ttype?: string\n\tlocked?: boolean,\n\tlockOnInit?: boolean\n\tshow?: {\n        [key in keyof TournamentSettings]?: any\n    }\n\tallow?: {\n\t\tinfinity?: boolean\n\t\tany?: boolean\n\t\tsubmit?: boolean\n        increment?: boolean\n        clear?: boolean\n\t}\n\tnb?: {\n\t\tmin?: number\n\t\tmax?: number\n\t\tstep?: number\n\t}\n\n\tprimaryKey?: boolean\n\tdefaultValue?: any\n}\n\nexport const defaultSettings = {\n\tgeneral: {\n\t\ttournamentId: {\n\t\t\tname: 'Unique ID',\n\t\t\ttype: 'string',\n\t\t\tlocked: true,\n\t\t\tprimaryKey: true\n\t\t},\n\t\tstatus: {\n\t\t\tname: 'Status',\n\t\t\tenum: ['uninitialised', 'active', 'finished'],\n\t\t\tconvert: capitalise,\n\t\t\tdefaultValue: 'uninitialised',\n\t\t\tvalue: (status: TournamentStatus): string => {\n\t\t\t\tif (!status.round) return 'uninitialised';\n\t\t\t\tif (status.active === false) return 'finished';\n\t\t\t\telse return 'active';\n\t\t\t}\n\t\t},\n\t\tpairingSystem: {\n\t\t\tname: 'Pairing system',\n\t\t\tenum: ['swiss'],\n\t\t\tconvert: capitalise,\n\t\t\tlockOnInit: true,\n\t\t\tdefaultValue: 'swiss'\n\t\t},\n\t\tcompetitors: {\n\t\t\tname: 'Tournament type',\n\t\t\tenum: ['individual', 'team'],\n\t\t\tconvert: capitalise,\n\t\t\tlockOnInit: true,\n\t\t\tdefaultValue: 'individual'\n\t\t},\n\t\ttotalRounds: {\n\t\t\tname: 'Total rounds',\n\t\t\tconvert: (v: number | 'Infinity') => v === 'Infinity' ? '∞' : v.toString(),\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: Infinity,\n\t\t\tnb: {\n\t\t\t\tmin: 1,\n\t\t\t\tmax: 100\n\t\t\t},\n\t\t\tallow: {\n\t\t\t\tinfinity: true\n\t\t\t}\n\t\t},\n\t\tratingSystem: {\n\t\t\tname: 'Rating system',\n\t\t\tenum: ['ECF', 'FIDE', 'USCF'],\n\t\t\tlockOnInit: true,\n\t\t\tdefaultValue: 'FIDE'\n\t\t},\n\t\tdisplayPoints: {\n\t\t\tname: 'Show',\n\t\t\tconvert: (v: 'match' | 'game') => capitalise(v) + ' Points',\n\t\t\tenum: ['match', 'game'],\n\t\t\tdefaultValue: 'match'\n\t\t},\n\t\tgamePointTotal: {\n\t\t\tname: 'Sum results to',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 1,\n\t\t\tshow: {\n                displayPoints: 'game'\n            },\n\t\t\tlockOnInit: true,\n\t\t\tnb: {\n\t\t\t\tstep: 1,\n\t\t\t\tmin: 1\n\t\t\t},\n\t\t\tallow: {\n\t\t\t\tany: true\n\t\t\t}\n\t\t}\n\t},\n\tpermissions: {\n        public: {\n            name: 'Public',\n            convert: (v: boolean) => capitalise(v.toString()),\n            lockOnInit: false,\n            type: 'boolean',\n            defaultValue: false\n        },\n\t\turl: {\n\t\t\tname: 'URL',\n\t\t\ttype: 'link',\n            defaultValue: '',\n\t\t\tshow: {\n                public: true\n            },\n\t\t\tvalue: (status: TournamentStatus): string => `${resultsServer}tournament/${status.id}`\n\t\t},\n\t\tallowNewPlayers: {\n\t\t\tname: 'Mid-way joining?',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\tlockOnInit: false,\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: true\n\t\t},\n\t\tallowSelfSubmissions: {\n\t\t\tname: 'User submissions?',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\tlockOnInit: false,\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: true\n\t\t},\n\t\tallowClashes: {\n\t\t\tname: 'Forbid certain pairings?',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\tlockOnInit: false,\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: true\n        },\n\t\troundTimes: {\n\t\t\tname: 'Round times?',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: false,\n\t\t\tlocked: false // TODO: implement on backend\n\t\t}\n\t},\n\tstats: {\n\t\tnbPlayers: {\n\t\t\tname: 'Number of players',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => players.length,\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\tactivePlayers: {\n\t\t\tname: 'Active players',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => players.filter(p => p.active).length,\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\tmatchesPlayed: {\n\t\t\tname: 'Matches played',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => players.reduce((acc, curr) => acc += curr.played, 0) / 2,\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\tgamesPlayed: {\n\t\t\tname: 'Games played',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => players.reduce((acc, curr) => acc += curr.histories.reduce((acc, curr) => curr ? acc += curr.played : acc, 0), 0) / 2,\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\taverageRating: {\n\t\t\tname: 'Average rating',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 1200,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => {\n\t\t\t\tlet sum = players.reduce((acc, curr) => acc += curr.rating, 0);\n\t\t\t\treturn Math.round(sum / players.length);\n\t\t\t},\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\tcreatedAt: {\n\t\t\tname: 'Created at',\n\t\t\tconvert: (v: string) => new Date(v).toString().slice(0, 24),\n\t\t\tlocked: true\n\t\t},\n\t\tupdatedAt: {\n\t\t\tname: 'Last updated',\n\t\t\tconvert: (v: string) => new Date(v).toString().slice(0, 24),\n\t\t\tlocked: true\n\t\t}\n\t},\n\tpoints: {\n\t\tlossReward: {\n\t\t\tname: 'Points on loss',\n\t\t\tlockOnInit: true,\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tnb: {\n\t\t\t\tstep: 0.1\n\t\t\t}\n\t\t},\n\t\tdrawReward: {\n\t\t\tname: 'Points on draw',\n\t\t\tlockOnInit: true,\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0.5,\n\t\t\tnb: {\n\t\t\t\tstep: 0.1\n\t\t\t}\n\t\t},\n\t\twinReward: {\n\t\t\tname: 'Points on win',\n\t\t\tlockOnInit: true,\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 1,\n\t\t\tnb: {\n\t\t\t\tstep: 0.1\n\t\t\t}\n\t\t},\n\t\tbyeReward: {\n\t\t\tname: 'Bye reward',\n\t\t\tenum: ['win', 'draw', 'loss'],\n\t\t\tlockOnInit: true,\n\t\t\tdefaultValue: 'win'\n\t\t},\n\t\tperformanceSystem: {\n\t\t\tname: 'Performance rating',\n\t\t\tenum: ['ELO', 'FIDE'],\n\t\t\tlockOnInit: false,\n\t\t\tdefaultValue: 'ELO'\n\t\t}\n\t}\n} as {\n\t[key: string]: {\n\t\t[key: string]: TournamentSetting\n\t}\n};\n\nexport const defaultUserSettings = {\n\tusername: {\n\t\tname: 'Username',\n\t\ttype: 'string',\n\t\tlocked: true,\n\t\tprimaryKey: true,\n\t},\n\temail: {\n\t\tname: 'Email',\n\t\ttype: 'string',\n\t\tlocked: true,\n\t\tdefaultValue: ''\n\t},\n    licensed: {\n        name: 'License',\n        type: 'number',\n        defaultValue: 0,\n        locked: true,\n        convert: (v: number) => {\n            if (v === 1) return 'Trial';\n            if (v === 2) return 'Full';\n            if (v === 3) return 'Admin';\n            return 'Free';\n        }\n    },\n    daysRemaining: {\n        name: 'Trial time',\n        type: 'number',\n        locked: true,\n        value: (user: User) => Math.floor(30 - daysBetween(new Date(user.lastLicensed), new Date(Date.now()))),\n        convert: (v: number) => v + ' days'\n    },\n    lastLicensed: {\n        name: 'Last licensed',\n        type: 'date',\n        defaultValue: null,\n        locked: true,\n        convert: (v: string) => new Date(v).toString().slice(0, 21),\n        validate: (v: string) => !!v\n    },\n\tcreatedAt: {\n\t\tname: 'Account created',\n\t\tconvert: (v: string) => new Date(v).toString().slice(0, 21),\n\t\tlocked: true,\n\t\tdefaultValue: Date.now()\n\t},\n\tupdatedAt: {\n\t\tname: 'Last seen',\n\t\tconvert: (v: string) => new Date(v).toString().slice(0, 21),\n\t\tlocked: true,\n\t\tdefaultValue: Date.now()\n\t}\n} as {\n\t[key: string]: {\n\t\tname?: string,\n\t\tenum?: string[],\n        convert?: (v: any) => string,\n        validate?: (v: any) => boolean\n        value?: (user: User) => any\n\t\ttype?: string\n\t\tlocked?: boolean\n\n\t\tprimaryKey?: boolean\n\t\tdefaultValue?: any\n\t}\n};","import React, { ReactElement, useEffect, useState, useMemo, useCallback } from 'react';\nimport { EditableField } from '../components/';\nimport { TournamentSettings, TournamentStatus, Player } from '../interfaces';\nimport url from 'url';\n\nimport styles from '../css/profile.module.css';\nimport { server, POST } from '../utils/requests';\nimport { defaultSettings, TournamentSetting } from '../assets/settings';\nimport { capitalise } from '../utils/prototype';\nimport { Bottom } from '../components/Buttons';\nimport { IoMdClose } from 'react-icons/io';\nimport CollapsableSection, { SectionBreak } from '../components/CollapsableSection';\n\ninterface SettingsProps {\n\tupdateTournamentSettings: () => Promise<void>\n\tupdateSetting: (k: string, v: any) => Promise<void>\n\tupdateRounds: () => Promise<void>\n\tstatus: TournamentStatus\n\tsettings: TournamentSettings\n\ttoggleSettings: () => void\n\tsetLastRound: (override: boolean) => void // need to include a method to cancel a last round token when the total rounds is incremented\n\ttriggerError: (message: string) => void\n\tplayers: Player[]\n\trounds: Date[]\n}\n\nconst watchProps = Object.values(defaultSettings).reduce((acc, curr) => {\n    for (let def of Object.values(curr)) {\n        if (def.show) acc.push(...Object.keys(def.show));\n    }\n    return acc;\n}, []) as (keyof TournamentSettings)[];\n\nfunction modifyHeightValues (): void {\n    let headers = Array.from(document.querySelectorAll('.' + [styles.sectionListWrapper].join('.'))) as HTMLDivElement[];\n    for (let h of headers) {\n        let list = h.firstElementChild as HTMLDivElement;\n        h.style.height = h.className.includes(styles.expanded) ? list.getBoundingClientRect().height + 'px' : '0px';\n    }\n};\n\nexport default function Settings(props: SettingsProps): ReactElement {\n\n    const [sectionExpando, setSection] = useState('general');\n\n\tconst handleToggle = useCallback((k: string, v: any, def: {\n\t\tname?: string,\n\t\tenum?: string[],\n\t\tconvert?: (v: any) => string,\n\t\ttype?: string,\n\t\tlocked?: boolean,\n\t\tlockOnInit?: boolean\n\t}) => {\n\t\ttry {\n\t\t\tlet value: any;\n\t\t\tif (def.enum) {\n\t\t\t\tlet index = def.enum.indexOf(v);\n\t\t\t\tif (index === -1) console.error('Invalid setting value ' + k + ': ' + v);\n\t\t\t\tlet setIndex = (index + 1) % def.enum.length;\n\t\t\t\tvalue = def.enum[setIndex];\n\t\t\t} else\n\t\t\tif (def.type === 'boolean') {\n\t\t\t\tvalue = !v;\n\t\t\t} else\n\t\t\tif (def.type === 'number') {\n\n\t\t\t\tif (v === 'Infinity') value = Infinity as number;\n\t\t\t\telse if (v === '∞') value = Infinity as number;\n\t\t\t\telse v = Number(v) as number;\n\n\t\t\t\tif (k === 'totalRounds') {\n\t\t\t\t\tif (v <= props.status.round) throw new Error('Can\\'t make total number of rounds less than current round number');\n\t\t\t\t\tif (v !== Infinity && v >= 100) throw new Error('Can\\'t make total number of rounds more than 100');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tprops.updateSetting(k, value);\n\t\t} catch (e) {\n\t\t\tif (e && e.message) props.triggerError(e.message);\n\t\t}\n    }, [props.status.round, props.updateSetting, props.triggerError]);\n    \n    const clearRound = useCallback((round: number): Promise<void> => {\n        return POST({\n            url: '/tournament/' + props.status.id + '/clearRound',\n            data: { round }\n\t\t});\n    }, [props.status.id]);\n\n    const watchedSettings = useMemo(() => Object.entries(props.settings).filter(([k]) => watchProps.includes(k as keyof TournamentSettings)), [props.settings])\n    \n    useEffect(() => {\n        modifyHeightValues();\n    }, [JSON.stringify(watchedSettings)]);\n\n    \n    const renderRound = useCallback((i: number) => {\n        return (\n            <div className={[styles.row, styles.roundRow].join(' ')} key={['row', i].join('.')}>\n                <div className='fieldBox'>\n                    {`Round ${i}:`}\n                </div>\n                <EditableField\n                    handleSubmit={props.updateSetting}\n                    handleClear={() => clearRound(i)}\n                    content={props.rounds[i] ? props.rounds[i].toString() : ''}\n                    defaultEditContent={new Date(Date.now()).toISOString()}\n                    url={url.resolve(server, ['tournament', props.status.id, 'updateRound'].join('/'))}\n                    inputType='datetime-local'\n                    onSubmitSuccess={(e) => {\n                        props.updateRounds();\n                        return e;\n                    }}\n                    additionalStyles={{\n                        editableField: styles.editableField,\n                        input: styles.input,\n                    }}\n                    additionalInputProps={{}}\n                    name={i.toString()}\n                    show={{\n                        submit: true,\n                        increment: false,\n                        clear: true\n                    }}\n                />\n            </div>\n        );\n    }, [props.updateSetting, props.rounds, props.status.id, props.updateRounds]);\n\n\tconst renderEntry = useCallback((([k, def]: [keyof TournamentSettings, TournamentSetting], i: number): ReactElement => {\n        let hidden = false;\n        if (def.show) {\n            for (let [k, v] of Object.entries(def.show)) {\n                let value = props.settings[k as keyof TournamentSettings];\n                if (value !== v) hidden = true;\n            }\n        }\n        if (hidden) return null;\n        \n\t\tlet locked = false;\n\t\tif (def.locked) locked = true;\n        else if (def.lockOnInit && props.status.round) locked = true;\n        \n        let v = props.settings[k as keyof TournamentSettings] ?? def.defaultValue;\n\t\tlet content = def.convert && !def.value ? def.convert(v) : v as string;\n        let displayContent = typeof content !== 'undefined' ? content.toString() : '\\u200b';\n\t\treturn (\n\t\t\t<div className={styles.row} key={['row', i].join('.')}>\n\t\t\t\t<div className={['fieldBox', def.show ? styles.semiPresent : ''].join(' ')}>\n\t\t\t\t\t{def.name}\n\t\t\t\t\t{def.name.endsWith('?') ? '' : ':'}\n\t\t\t\t</div>\n\t\t\t\t{(() => {\n\t\t\t\t\tif (locked || def.value) {\n                        if (def.value) displayContent = def.value(props.status, props.players);\n                        if (def.convert) displayContent = def.convert(displayContent);\n                        return <div\n                            style={{\n                                cursor: def.type === 'link' ? 'copy' : 'default'\n                            }}\n                            className={['fieldBox', styles.locked].join(' ')}\n                            onClick={def.type !== 'link' ? null : () => navigator.clipboard.writeText(displayContent)}\n                        >\n\t\t\t\t\t\t\t{displayContent}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t} else\n\t\t\t\t\tif (def.type === 'number') {\n\t\t\t\t\t\treturn <EditableField\n\t\t\t\t\t\t\thandleSubmit={props.updateSetting}\n\t\t\t\t\t\t\tcontent={displayContent}\n\t\t\t\t\t\t\turl={url.resolve(server, ['tournament', props.status.id, 'updateSetting'].join('/'))}\n\t\t\t\t\t\t\tinputType='number'\n\t\t\t\t\t\t\tonSubmitSuccess={(e) => {\n\t\t\t\t\t\t\t\tprops.updateTournamentSettings();\n\t\t\t\t\t\t\t\treturn e;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tadditionalStyles={{\n\t\t\t\t\t\t\t\teditableField: styles.editableField,\n\t\t\t\t\t\t\t\tinput: styles.input\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tname={k}\n\t\t\t\t\t\t\tadditionalInputProps={def.nb}\n\t\t\t\t\t\t\tshow={{\n\t\t\t\t\t\t\t\tsubmit: true,\n\t\t\t\t\t\t\t\tincrement: true,\n\t\t\t\t\t\t\t\t...def.allow\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn <div\n\t\t\t\t\t\t\tclassName={['fieldBox', styles.editable].join(' ')}\n\t\t\t\t\t\t\tonClick={() => handleToggle(k, v, def)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{displayContent}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t})()}\n\t\t\t</div>\n\t\t);\n\t}), [props.settings, props.status, props.players, props.updateSetting, props.status.id, props.updateTournamentSettings]);\n\n\n    let roundEntries = [];\n    let length = props.settings.totalRounds === Infinity || props.settings.totalRounds === 'Infinity' ? Math.max(props.rounds.length, 1) : props.settings.totalRounds;\n    for (let i = 1; i <= length; i++) roundEntries.push(i);\n\n    return (\n        <>\n            <div className={styles.profile} >\t\t\t\t\n                <div className='topBanner'>\n                    Settings\n                </div>\n                {Object.entries(defaultSettings).map(([section, data]): ReactElement => {\n                    return (\n                        <CollapsableSection\n                            key={section}\n                            value={section}\n                            header={capitalise(section)}\n                            expanded={sectionExpando === section}\n                            setExpanded={(state: boolean, action: string) => setSection(state ? action : '')}\n                        >\n                            {(Object.entries(data) as [keyof TournamentSettings, TournamentSetting][])\n                                .map(renderEntry)}\n                        </CollapsableSection>\n                    )\n                })}\n                {props.settings.roundTimes ? <CollapsableSection\n                    key={'rounds'}\n                    value={'rounds'}\n                    header={'Rounds'}\n                    expanded={sectionExpando === 'rounds'}\n                    setExpanded={(state: boolean, action: string) => setSection(state ? action : '')}\n                >\n                    {roundEntries.map(renderRound)}\n                </CollapsableSection> : null}\n                <SectionBreak />\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                {Bottom([\n                    props.toggleSettings,\n                    <IoMdClose />,\n                    'close'\n                ])}\n            </div>\n        </>\n    );\n}","import React, { ReactElement } from 'react';\nimport Grid from '../components/Grid';\nimport { TournamentStatus, Player, TournamentSettings } from '../interfaces';\n\nimport styles from '../css/crosstable.module.css';\nimport { MdExitToApp } from 'react-icons/md';\n\nexport default class CrossTable extends React.Component<{\n\tsetDisplayPlayer: (id: string) => void\n\tshow: () => void\n\tstatus: TournamentStatus\n\tplayers: Player[]\n\tsettings: TournamentSettings\n}, {\n\tsortValue: string,\n\tbyRounds: boolean\n}> {\n\n\tpublic state = {\n\t\tsortValue: 'score',\n\t\tbyRounds: true\n\t}\n\n\tget bodyByRobin(): JSX.Element[][] {\n\t\treturn [[]];\n\t}\n\n\tget totalRounds():number {\n\t\tlet totalRounds: number;\n\t\tif (this.props.status.round > this.props.settings.totalRounds) totalRounds = this.props.status.round;\n\t\telse if (this.props.settings.totalRounds === 'Infinity') totalRounds = this.props.status.round;\n\t\telse totalRounds = this.props.settings.totalRounds;\n\t\treturn totalRounds;\n\t}\n\n\theader(): {[key: string]: string} {\n\t\tlet rounds = [] as string[];\n\t\t\n\t\tfor (let i = 1; i <= this.totalRounds; i++) {\n\t\t\trounds.push((i).toString());\n\t\t}\n\t\treturn {\n\t\t\tid: '',\n\t\t\tname: 'Name',\n\t\t\trating: 'Rating',\n\t\t\t...Object.entries(rounds).reduce((acc, [k, v]) => { acc['score.' + k] = v; return acc;}, {} as {[key: string]: string}),\n\t\t\tprettyScore: 'Score',\n            winPercentage: 'Win %',\n            gamePoints: 'GP',\n\t\t\tperformanceRating: 'Perf',\n\t\t\tratingDifference: 'P. +/-',\n\t\t\texpectedScore: 'Expected',\n\t\t\texpectedDifference: 'E. +/-'\n\t\t}; //{[key: string]: {name: string, sortable: boolean, headerClass: string, bodyClass: string}}\n\t}\n\n\tpublic handleHeaderClick = (sortValue: string): void => {\n\t\tif (sortValue.startsWith('score.')) return;\n\t\tif (sortValue === 'expectedScore') return;\n\t\tif (sortValue === 'prettyScore') sortValue = 'score';\n\t\tthis.setState({ sortValue });\n\t}\n\n\tprivate calcLength = 9;\n\n\tclassNames(): string[] {\n\t\tlet rounds = [] as string[];\n\t\tfor (let i = 1; i <= this.totalRounds; i++) {\n\t\t\trounds.push(styles.resultsCell);\n\t\t}\n\t\treturn [\n\t\t\t'',\n\t\t\t'',\n\t\t\t...rounds,\n\t\t\t'',\n            '',\n            '',\n\t\t\t'',\n\t\t\t'',\n\t\t\t'',\n\t\t\t''\n\t\t];\n\t}\n\n\tbodyByRounds(state: { sortValue: string }): JSX.Element[][] {\n\t\treturn this.props.players\n\t\t\t.map((p) => {\n\t\t\t\tlet scores = [] as string[];\n\t\t\t\tfor (let j = 1; j <= this.totalRounds; j++) {\n\t\t\t\t\tlet minPlayer = p.histories[j];\n\t\t\t\t\tif (!j) continue;\n\t\t\t\t\telse if (!minPlayer) scores.push('');\n\t\t\t\t\telse if (typeof minPlayer.match !== 'number') scores.push('*');\n\t\t\t\t\telse if (minPlayer.match === 0.5) scores.push('½');\n\t\t\t\t\telse if (minPlayer.oppRating === undefined) scores.push(minPlayer.match.toString() + ('b'));\n\t\t\t\t\telse scores.push(minPlayer.match.toString());\n\t\t\t\t}\n\t\t\t\tlet ratingDifference = p.performanceRating - p.rating;\n                let expectedDifference = p.score - p.expectedScore;\n\t\t\t\treturn {\n\t\t\t\t\tid: p.id,\n\t\t\t\t\tname: this.props.settings.competitors === 'individual' ? [p.firstName, p.lastName].join(' ') : p.firstName,\n\t\t\t\t\trating: p.rating,\n\t\t\t\t\t...Object.entries(scores).reduce((acc, [k, v]) => { acc['score.' + k] = v; return acc;}, {} as {[key: string]: string}),\n\t\t\t\t\tscore: p.score,\n\t\t\t\t\tprettyScore: parseFloat(p.score.toString()).toFixed(1) + ' / ' + p.played,\n                    winPercentage: p.played === 0 ? '-' : (p.score * 100 / p.played).toFixed(2),\n                    gamePoints: (p.gamePoints && p.gamePoints.toFixed ? p.gamePoints.toFixed(1) : '0.0') + ' / ' + p.played,\n\t\t\t\t\tperformanceRating: p.performanceRating ? p.performanceRating.toFixed() : '',\n\t\t\t\t\tratingDifference: p.performanceRating ? ratingDifference > 0 ? '+' + ratingDifference.toString() : ratingDifference.toString() : '',\n\t\t\t\t\texpectedScore: p.expectedScore.toFixed(2) + ' / ' + p.played,\n\t\t\t\t\texpectedDifference: expectedDifference > 0 ? '+' + expectedDifference.toFixed(2) : expectedDifference.toFixed(2)\n\t\t\t\t};\n\t\t\t})\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (!(state.sortValue in a)) return 0;\n\t\t\t\tlet x: any, y: any;\n\t\t\t\tif (state.sortValue !== 'name') {\n\t\t\t\t\tx = Number((a as {[key: string]: string | number})[state.sortValue]);\n\t\t\t\t\ty = Number((b as {[key: string]: string | number})[state.sortValue]);\n\t\t\t\t} else {\n\t\t\t\t\tx = a[state.sortValue];\n\t\t\t\t\ty = b[state.sortValue];\n\t\t\t\t}\n\t\t\t\tif (x !== y) return y - x;\n\t\t\t\treturn (b.rating as number) - (a.rating as number);\n\t\t\t})\n\t\t\t.map((p, i) => {\n\t\t\t\tlet rows = [\n\t\t\t\t\t['Ranking', i.toString()],\n\t\t\t\t\t...Object.entries(p)\n\t\t\t\t];\n\t\t\t\treturn rows.filter(([k]) => {\n\t\t\t\t\tif (k === 'id') return false;\n\t\t\t\t\tif (k === 'score') return false;\n\t\t\t\t\treturn true;\n\t\t\t\t}).map(([key, value], j) => {\n\t\t\t\t\tlet isPlayer = j === 1;\n\t\t\t\t\tlet isScore = j > 2 && j < rows.length - this.calcLength;\n\t\t\t\t\treturn (\t\t\t\t\t\t\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid={isPlayer ? p.id : [value, j].join('.')}\n\t\t\t\t\t\t\tkey={[value, j].join('.')}\n\t\t\t\t\t\t\tclassName={[\n\t\t\t\t\t\t\t\tstyles.cell,\n\t\t\t\t\t\t\t\tisScore ? styles.resultsCell : '',\n\t\t\t\t\t\t\t\tisPlayer ? styles.playerBox : '',\n\t\t\t\t\t\t\t\tj === 0 ? styles.firstColumn : ''\n\t\t\t\t\t\t\t].join(' ')}\n\t\t\t\t\t\t\tonClick={!isPlayer ? () => {} : (e: React.MouseEvent<HTMLDivElement>) => this.props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{value || '\\u200b'}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\t\t\n\t}\n\n\trender(): ReactElement {\n\t\t//styles.cell.height = `calc(100vh - ${body.length + 1})`;\n\t\t\n\t\tlet body = this.state.byRounds ? this.bodyByRounds(this.state) : this.bodyByRobin;\n\t\tlet title = `Tournament '${this.props.status.name || this.props.status.id}' results after ${this.props.status.round} rounds`;\n\t\tlet subtitle = '';\n\t\treturn (\n\t\t\t<>\t\t\t\t\n\t\t\t\t<div className={styles.titles}>\n\t\t\t\t\t<div>{title}</div>\n\t\t\t\t\t<div>{subtitle}</div>\n\t\t\t\t\t<div className={['button', styles.closeButton].join(' ')} onClick={this.props.show}>\n                        <MdExitToApp />\n                    </div>\n\t\t\t\t</div>\n\t\t\t\t<Grid\n\t\t\t\t\theader={this.header()}\n\t\t\t\t\tbody={body}\n\t\t\t\t\tstyles={styles}\n\t\t\t\t\tbodyClassNames={this.classNames()}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tgridColumn: '1 / span 2'\n\t\t\t\t\t}}\n\t\t\t\t\thandleHeaderClick={this.handleHeaderClick}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\t\n\t}\n}","import React, { ReactElement, useCallback } from 'react';\nimport { TournamentSettings, TournamentStatus } from '../interfaces';\nimport CSV from 'papaparse';\n\nimport styles from '../css/crosstable.module.css';\nimport { MdExitToApp } from 'react-icons/md';\nimport { POST } from '../utils/requests';\n\ninterface PasteInputProps {\n    closePasteInput: () => void\n    status: TournamentStatus\n    settings: TournamentSettings\n    id: string\n    updatePlayerDict: () => void\n}\n\nexport default function PasteInput(props: PasteInputProps): ReactElement {\n\n    const requireLastName = false;\n\n\tconst handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        let form = e.target as HTMLFormElement;\n        let textArea = form.textArea as HTMLTextAreaElement;\n        let text = textArea.value;\n\t\tif (!text.trim()) return;\n\t\tif (!text.split('\\n').length && text.split(',').length && text.split('\\t').length) return;\n\t\tlet json = CSV.parse(text, {\n\t\t\tdelimitersToGuess: [',', '\\t'],\n\t\t\tdynamicTyping: true,\n\t\t\tfastMode: true\n\t\t} as CSV.ParseConfig) as CSV.ParseResult;\n\t\tif (json.data.length > 150) return console.error('Can\\'t paste more than 150 players at once!');\n\t\tlet data = json.data.map((row) => {\n\t\t\tlet [firstName, rating]: [string, number] = row;\n\t\t\ttry {\n\t\t\t\tif (typeof firstName !== 'string') throw [firstName, 'string'].join(',');\n\t\t\t\tif (typeof rating !== 'number') throw [rating, 'number'].join(',');\n\t\t\t\treturn {firstName, rating};\n\t\t\t} catch (error) {\n\t\t\t\tif (!text.split('\\n').length) return null;\n\t\t\t\tlet e = error.split(',');\n\t\t\t\tconsole.error(new TypeError('Bad input on row ' + row.join(',') + '\\n' + e[0] + ' is not type ' + e[1]));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t})\n            .filter(r => r);\n\t\tPOST({\n\t\t\turl: 'tournament/' + props.id + '/appendPlayers',\n\t\t\tdata\n\t\t}); /*\n\t\tPOST({\n\t\t\turl: 'tournament/' + props.id + '/appendPlayersHack',\n\t\t\tdata: json.data\n\t\t})\n\t\t\t.then(() => Promise.all([props.updatePlayerDict()]));*/\n\t}, [props.id, requireLastName, props.updatePlayerDict]);\n\t\t\n    let title = `CSV player data entry for tournament '${props.status.name || props.status.id}'`;\n    return (\n        <>\t\t\t\t\n            <div className={styles.titles}>\n                <div>{title}</div>\n                <div className={['button', styles.closeButton].join(' ')} onClick={props.closePasteInput}>\n                    <MdExitToApp />\n                </div>\n            </div>\n            <div className={styles.subheader}>\n                Please paste your input in csv (comma-separated values) format\n            </div>\n            <div className={styles.container}>\n                <form\n                    className={styles.form}\n                    target='_self'\n                    onSubmit={handleSubmit}\n                    method='POST'\n                >\n                    <textarea className={styles.textarea} name='textArea'/>                \n                    <button\n                        type='submit'\n                        className={styles.submit}\n                    >\n                        SUBMIT\n                    </button>\n                </form>\n            </div>\n        </>\n    );\n}","import React, { ReactElement, useState, useEffect, Dispatch, SetStateAction, CSSProperties, useCallback, useReducer, useMemo } from 'react';\nimport { InfoBar, Pairings, Sidebar, Profile, Settings, CrossTable, PasteInput } from './tournament';\nimport { Player, TournamentSettings, ID, TournamentStatus } from './interfaces';\nimport { GET, POST } from './utils/requests';\n\nimport styles from './css/tournament.module.css';\n\nconst defaultColumns = [30.8, 38.4, 30.8];\n\ninterface TournamentProps {\n\tid: string\n\tcloseTournament: () => void\n\ttriggerError: (message: string) => void\n}\n\nfunction dispatchEvent(eventName: string): void {\n\tlet event = document.createEvent('HTMLEvents') as Event & { eventName: string };\n\tevent.initEvent(eventName, true, true);\n\tevent.eventName = eventName;\n\tdocument.dispatchEvent(event);\n}\n\nfunction MouseEvents({ columns, boundaries, resize, setColumns, setResize, toggleSidebar, toggleSettings, setDisplayPlayerRaw }: {\n\tcolumns: number[],\n\tboundaries: number[],\n\tresize: number,\n\tsetColumns: (columns: number[]) => void\n\tsetResize: Dispatch<SetStateAction<number>>,\n\ttoggleSidebar: ({set}: { set?: boolean }) => void\n\ttoggleSettings: ({set}: { set?: boolean }) => void\n\tsetDisplayPlayerRaw: Dispatch<SetStateAction<string>>\n}): void {\n\n\tconst [mouseClick, setMouseClick] = useState(0);\n\n\tconst handleMouseMove = useCallback((e: MouseEvent) => {\n\t\tlet percentX = e.x / window.innerWidth * 100;\n\t\tif (mouseClick) {\n\t\t\tlet prev = (columns.slice(0, mouseClick - 1).reduce((acc, curr) => acc += curr, 0));\n\t\t\tlet sum = prev + columns[mouseClick - 1] + columns[mouseClick];\n\t\t\tlet left = percentX - prev;\n\t\t\tlet right = sum - percentX;\n\t\t\tlet threshold = 2;\n\t\t\tif (left < threshold) {\n\t\t\t\tright += left;\n\t\t\t\tleft = 0;\n\t\t\t\tif (mouseClick === 1) toggleSidebar({set: false});\n\t\t\t\tdispatchEvent('mouseup');\n\t\t\t} else\n\t\t\tif (right < threshold) {\n\t\t\t\tleft += right;\n\t\t\t\tright = 0;\n\t\t\t\tif (mouseClick === columns.length - 1) {\n\t\t\t\t\tsetDisplayPlayerRaw('');\n\t\t\t\t\ttoggleSettings({set: false});\n\t\t\t\t\tdispatchEvent('mouseup');\n\t\t\t\t}\n\t\t\t}\n\t\t\tcolumns[mouseClick - 1] = left\n\t\t\tcolumns[mouseClick] = right;\n\t\t\tsetColumns(columns.slice(0));\n\t\t} else {\n\t\t\tlet threshold = 1;\n\t\t\tlet index = boundaries.findIndex(b => Math.abs(b - percentX) < threshold);\n\t\t\tif (index === 0 && boundaries[0] === 0) index = -1;\n\t\t\telse if (index === boundaries.length - 1 && boundaries[boundaries.length - 1] === 100) index = -1;\n\t\t\tsetResize(index + 1);\n\t\t}\n\t}, [mouseClick, columns, setDisplayPlayerRaw, toggleSettings, setResize, setColumns, boundaries, toggleSidebar]);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('mousemove', handleMouseMove);\n\t\treturn () => document.removeEventListener('mousemove', handleMouseMove);\n\t}, [mouseClick, handleMouseMove]);\n\tuseEffect(() => {\n\t\tif (!resize) return;\n\t\tlet callback = () => setMouseClick(resize);\n\t\tdocument.addEventListener('mousedown', callback);\n\t\treturn () => document.removeEventListener('mousedown', callback);\n\t}, [resize, setMouseClick]);\n\tuseEffect(() => {\n\t\tlet callback = () => setMouseClick(0);\n\t\tdocument.addEventListener('mouseup', callback);\n\t\treturn () => document.removeEventListener('mouseup', callback);\n\t}, [resize, setMouseClick]);\n}\n\nexport default function Tournament(props: TournamentProps): ReactElement {\n\n\tconst [columns, setColumns] = useState(defaultColumns);\n\tconst [resize, setResize] = useState(0);\n\tconst boundaries = useMemo(() => \tcolumns.reduce((acc, curr) => {\n\t\tacc.push((acc[acc.length - 1] ?? 0) + curr);\n\t\treturn acc;\n\t}, [] as number[]).slice(0, -1), [columns]);\n\n\tconst [displayPlayer, setDisplayPlayerRaw] = useState('');\n    const [crossTable, setCrossTable] = useState(false);\n    const [pasteInput, setPasteInput] = useState(false);\n\tconst [lastRoundOverride, setLastRound] = useState(undefined) as [boolean | undefined, Dispatch<SetStateAction<boolean | undefined>>];\n\tconst [nextRound, toggleNextRound] = useState(false);\n\tconst toggleCrossTable = () => setCrossTable(!crossTable);\n\n\tconst reduceSidebar = useCallback((state: boolean, { set }: { set?: boolean }): boolean => {\n\t\tif (columns[0] === 0) {\n\t\t\tlet _columns = columns.slice(0);\n\t\t\t_columns[0] = defaultColumns[0];\n\t\t\tif (_columns[1] < defaultColumns[0]) _columns = defaultColumns as [number, number, number];\n\t\t\telse _columns[1] = _columns[1] - defaultColumns[0];\n\t\t\tsetColumns(_columns);\n\t\t\treturn true;\n\t\t} else return typeof set === 'boolean' ? set : !state;\n\t}, [columns, setColumns]);\n\n\tconst reduceSettings = useCallback((state: boolean, { set }: { set?: boolean }): boolean => {\n\t\tif (set !== false && boundaries[boundaries.length - 1] === 100) {\n\t\t\tlet _columns = columns.slice(0);\n\t\t\t_columns[_columns.length - 1] = defaultColumns[_columns.length - 1];\n\t\t\tif (_columns[_columns.length - 2] < defaultColumns[_columns.length - 2]) _columns = defaultColumns as [number, number, number];\n\t\t\telse _columns[_columns.length - 2] = _columns[_columns.length - 2] - defaultColumns[_columns.length - 1];\n\t\t\tsetColumns(_columns);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif (!state) setDisplayPlayerRaw('');\n\t\t\treturn typeof set === 'boolean' ? set : !state;\n\t\t};\n\t}, [columns, setDisplayPlayerRaw, boundaries]);\n\t\n\tconst [sidebar, toggleSidebar] = useReducer(reduceSidebar, true);\n\tconst [showSettings, toggleSettings] = useReducer(reduceSettings, true);\n\n\tconst setDisplayPlayer = useCallback((id: string) => {\n\t\tif (columns[0] === 0) {\n\t\t\tlet _columns = columns.slice(0);\n\t\t\t_columns[0] = defaultColumns[0];\n\t\t\tif (_columns[1] < defaultColumns[0]) _columns = defaultColumns as [number, number, number];\n\t\t\telse _columns[1] = _columns[1] - defaultColumns[0];\n\t\t\tsetColumns(_columns);\n\t\t} else if (id && showSettings) toggleSettings({ set: false });\n\t\tsetDisplayPlayerRaw(id);\n\t}, [setColumns, setDisplayPlayerRaw, toggleSettings, columns, showSettings]);\n\n\tconst [playerDictKey, setPlayerDictKey] = useState(Math.random().toString(16).slice(2, 9));\n\n\tconst [status, setStatus] = useState({} as TournamentStatus);\n\tconst [settings, setSettings] = useState({} as TournamentSettings);\n\tconst [rounds, setRounds] = useState([] as Date[]);\n\tconst [players, setPlayers] = useState([] as Player[]);\n\n\tMouseEvents({ columns, boundaries, resize, setColumns, setResize, toggleSidebar, toggleSettings, setDisplayPlayerRaw });\n\n\t/* Fetch Data */\n    \n    const [setDictTimeout, awaitTimeout] = useState(false);\n    const [lastUpdate, setLastUpdate] = useState(Date.now());\n\n\tconst reducePlayerDict = useCallback((state: Map<ID, Player>, action: {\n\t\tid?: ID,\n\t\tplayer?: Player,\n\t\tplayers?: Player[],\n\t\thash?: string\n\t}) => {\n\t\tif (action.id) {\n\t\t\tstate.delete(action.id);\n\t\t\tif (action.id === displayPlayer) setDisplayPlayer('');\n\t\t\treturn state;\n\t\t}\n\t\tlet players: Player[];\n\t\tif (action.players) players = action.players;\n\t\telse players = [action.player];\n        for (let p of players) state.set(p.id, p);\n\t\tsetPlayerDictKey(action.hash || Math.random().toString(16).slice(2, 9));\n\t\treturn state;\n\t}, [setDisplayPlayer, setPlayerDictKey, displayPlayer, lastUpdate])\n\n\tconst [playerDict, setPlayerDict] = useReducer(reducePlayerDict, new Map() as Map<ID, Player>);\n\n\tconst updatePlayerDict = useCallback((force?: boolean): Promise<void> => {\n        if (!force && (Date.now() - lastUpdate < 3000)) {\n            setLastUpdate(Date.now());\n            awaitTimeout(true);\n            return Promise.resolve();\n        }\n        return GET({ url: '/tournament/' + props.id + '/fetchPlayers'})\n            .then((players: Player[]) => {\n                setLastUpdate(Date.now());\n                awaitTimeout(false);\n                setPlayers(players);\n                setPlayerDict({ players });\n            })\n    }, [props.id, setPlayers, setPlayerDictKey, setPlayerDict, lastUpdate]);\n    \n    useEffect(() => {\n        if (!setDictTimeout) return;\n        let x = setTimeout(updatePlayerDict, 5000);\n        return () => clearTimeout(x);\n    }, [setDictTimeout, updatePlayerDict]);\n\n\tconst updateTournamentStatus = useCallback((): Promise<void> => GET({ url: '/tournament/' + props.id + '/getStatus'})\n\t\t.then(setStatus), [props.id, setStatus]);\n\n\tconst updateTournamentSettings = useCallback((): Promise<void> => GET({ url: '/tournament/' + props.id + '/getSettings'})\n\t\t.then(setSettings), [props.id, setSettings]);\n\n\tconst updateSetting = useCallback((k: string, v: any): Promise<void> => POST({\n\t\turl: 'tournament/' + props.id + '/updateSetting',\n\t\tdata: {\n\t\t\t[k]: v\n\t\t}\n\t}).then(updateTournamentSettings), [props.id, updateTournamentSettings]);\n\n\tconst updateRounds = useCallback((): Promise<void> => GET({ url: '/tournament/' + props.id + '/fetchRounds'})\n        .then(setRounds), [props.id, setRounds]);\n        \n\tconst checkIfEnoughPlayers = useCallback(async (): Promise<void> => {\n        toggleNextRound(players.filter(p => p.active !== false).length >= 2);\n    }, [players, toggleNextRound, updatePlayerDict]);\n\t\n\tuseEffect(() => {\n\t\tif (!props.id) return null;\n\t\tupdateRounds();\n\t\tupdateTournamentStatus();\n\t\tupdateTournamentSettings();\n\t\tupdatePlayerDict(true);\n\t}, [props.id, updateRounds, updateTournamentStatus, updateTournamentSettings]);//, updateRounds, updateTournamentStatus, updateTournamentSettings, updatePlayerDict]);\n\n\tif (!props.id) return null;\n\n\tif (crossTable) return (\n\t\t<div className={styles.tournament}>\n\t\t\t<CrossTable\n\t\t\t\tshow={toggleCrossTable}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n\t\t\t\tstatus={status}\n\t\t\t\tplayers={players}\n\t\t\t\tsettings={settings}\n\t\t\t/>\n\t\t\t<Profile\n\t\t\t\tid={props.id}\n\t\t\t\tplayerID={displayPlayer}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tmodifyPlayerDict={(player: Player, hash: string) => setPlayerDict({ player, hash })}\n\t\t\t\tsettings={settings}\n\t\t\t/>\n\t\t</div>\t\t\n\t);\n\n\tif (pasteInput) return (\n\t\t<div className={styles.tournament}>\n\t\t\t<PasteInput\n                closePasteInput={() => setPasteInput(false)}\n                status={status}\n                settings={settings}\n                id={props.id}\n\t\t\t\tupdatePlayerDict={updatePlayerDict}\n\t\t\t/>\n\t\t</div>\t\t\n\t);\n\n\tlet style: CSSProperties = {};\n\tif (resize) style.cursor = 'ew-resize';\n\n\treturn (\n\t\t<div className={styles.tournament} style={{\n\t\t\tgridTemplateColumns: columns.join('% ') + '%',\n\t\t\t...style\n\t\t}}>\n\t\t\t{!sidebar ? null : <Sidebar\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tplayerDictKey={playerDictKey}\n\t\t\t\tupdatePlayerDict={updatePlayerDict}\n\t\t\t\tsetPlayerDict={setPlayerDict}\n\t\t\t\t\n\t\t\t\tsettings={settings}\n\t\t\t\tid={props.id}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n                checkIfEnoughPlayers={checkIfEnoughPlayers}\n                togglePasteInput={() => setPasteInput(true)}\n\t\t\t/>}\n\t\t\t<InfoBar\n\t\t\t\tstatus={status}\n\t\t\t\tsettings={settings}\n\t\t\t\tupdateTournamentStatus={updateTournamentStatus}\n\t\t\t\tround={status.round}\n\t\t\t\ttotalRounds={settings.totalRounds}\n\t\t\t\tcloseTournament={props.closeTournament}\n\t\t\t\ttoggleCrossTable={toggleCrossTable}\n\n\t\t\t\tsetLastRound={setLastRound}\n\t\t\t\tlastRoundOverride={lastRoundOverride}\n\t\t\t\ttriggerError={props.triggerError}\n\t\t\t/>\n\t\t\t<Pairings\n\t\t\t\tstatus={status}\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tupdatePlayerDict={updatePlayerDict}\n\t\t\t\t\n\t\t\t\tsettings={settings}\n\n\t\t\t\tid={props.id}\n\t\t\t\tcanTriggerNextRound={nextRound}\n\t\t\t\ttoggleSidebar={() => toggleSidebar({})}\n\t\t\t\ttoggleSettings={() => toggleSettings({})}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n\t\t\t\tupdateRound={updateTournamentStatus}\n\t\t\t\tsetLastRound={setLastRound}\n\t\t\t\tlastRoundOverride={lastRoundOverride}\n\t\t\t\ttoggleCrossTable={toggleCrossTable}\n\t\t\t\tplayerDictKey={playerDictKey}\n\t\t\t/>\n\t\t\t<Profile\n\t\t\t\tid={props.id}\n\t\t\t\tplayerID={displayPlayer}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tmodifyPlayerDict={(player: Player, hash: string) => setPlayerDict({ player, hash })}\n\t\t\t\tsettings={settings}\n\t\t\t\tplayerDictKey={playerDictKey}\n\t\t\t/>\n\t\t\t{!showSettings ? null : <Settings\n\t\t\t\tupdateTournamentSettings={updateTournamentSettings}\n\t\t\t\tupdateSetting={updateSetting}\n\t\t\t\tstatus={status}\n\t\t\t\tsettings={settings}\n\t\t\t\ttoggleSettings={() => toggleSettings({})}\n\t\t\t\tsetLastRound={setLastRound}\n\t\t\t\ttriggerError={props.triggerError}\n\t\t\t\tplayers={players}\n\t\t\t\tupdateRounds={updateRounds}\n\t\t\t\trounds={rounds}\n\t\t\t/>}\n\t\t</div>\n\t);\n\n}","import React, { CSSProperties, ReactElement } from 'react';\n\nexport function Circle(props: {\n\tradius: string | number\n\tclassName?: string\n\tid?: string\n\tstyle?: CSSProperties\n\tcontent?: string | ReactElement\n\tonClick?: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n\tonMouseEnter?: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n\tonMouseLeave?: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n}) {\n\t\n\treturn <span\n\t\tid={props.id}\n\t\tclassName={props.className}\n\t\tstyle={{\n\t\t\theight: props.radius,\n\t\t\twidth: props.radius,\n\t\t\tlineHeight: props.radius,\n\t\t\tborderRadius: '50%',\n\t\t\tdisplay: 'inline-block',\n\t\t\tcursor: 'default',\n\t\t\t...props.style\n\t\t}}\n\t\tonClick={props.onClick}\n\t\tonMouseEnter={props.onMouseEnter}\n\t\t//onMouseLeave={props.onMouseLeave}\n\t>{props.content}</span>;\n\n}","import React, { ReactElement, useEffect, useCallback, useState, useMemo, useRef } from 'react';\n\nimport appStyles from '../css/app.module.css';\nimport profileStyles from '../css/profile.module.css';\nimport styles from '../css/menu.module.css';\n\nimport { NumberDictionary, StringDictionary, NavData, User } from '../interfaces';\nimport { Crown } from './Login';\nimport { GET, POST, cookies } from '../utils/requests';\nimport { AxiosError } from 'axios';\nimport { Circle } from '../components/Vectors';\nimport { calculateHypotenuse, useStateWithLabel } from '../utils/prototype';\nimport { defaultUserSettings } from '../assets/settings';\n\nimport { IoMdArrowRoundBack, IoIosSettings, IoMdClose, IoIosCloseCircle } from 'react-icons/io';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport { TiThMenu } from 'react-icons/ti';\nimport { MdRefresh } from 'react-icons/md';\nimport { FaEarlybirds, FaPlusCircle } from 'react-icons/fa';\n\nfunction getElementCentre(elem: HTMLElement): {x: number, y: number} {\n    var rect = elem.getBoundingClientRect();\n    return {\n        x: (rect.left + rect.right) / 2,\n        y: (rect.top + rect.bottom) / 2 - 30 //on account of parent being 30px from top\n    };\n}\n\nfunction renderLineBetween(linesMounted: boolean, start: {x: number, y: number}, end: {x: number, y: number}, width: number): ReactElement {\n    let diff = {x: Math.abs(end.x - start.x), y: Math.abs(end.y - start.y)};\n    let length = calculateHypotenuse(end.x - start.x, end.y - start.y);\n\n    let sign = Math.sign((end.x - start.x) * (end.y - start.y));\n    let angle = Math.atan(diff.y / diff.x) * 180 / Math.PI;\n    return <div key={['line', end.x, end.y].join('.')} className={styles.line} style={{\n        width: length + 'px',\n        height: width + 'px',\n        backgroundColor: 'white',\n        position: 'absolute',\n        left: !linesMounted ? start.x - (diff.x / 2) : ((start.x + end.x) / 2) - (diff.x / 2),\n        top: !linesMounted ? start.y : ((start.y + end.y) / 2),\n        transform: `rotate(${angle * sign}deg) scaleX(${linesMounted ? 1 : 0}) scaleY(1)`,\n        opacity: !linesMounted ? 0 : 1,\n        transition: 'transform 3s, left 3s, top 3s, opacity 3s'\n    }}/>;\n}\n\ninterface MenuProps {\n\tsessionID: string\n\tendSession: () => void\n\tsetTournamentID: (id: string) => void\n\ttriggerConfirm: (message: string, resolve: () => void, reject: () => void) => void\n}\n\nexport default function Menu(props: MenuProps): ReactElement {\n\n    const [tournamentDict, setTournamentDict] = useStateWithLabel({} as StringDictionary, 'tournamentDict');\n    const [loading, setLoading] = useStateWithLabel(true, 'loading');\n    const [loadingOverride, overrideLoading] = useStateWithLabel(false, 'loadingOverride');\n    const [linesMounted, mountLines] = useStateWithLabel(false, 'linesMounted');\n    const [linesAdjusted, adjustLines] = useStateWithLabel(false, 'adjustedLines');\n    const [selected, select] = useStateWithLabel('', 'selected');\n\n\tconst updateTournamentDict = useCallback((): Promise<StringDictionary> => {\n\t\treturn GET({ url: '/tournaments' })\n\t\t\t.then((tournamentDict: StringDictionary) => {\n\t\t\t\tsetTournamentDict(tournamentDict);\n\t\t\t\treturn tournamentDict;\n\t\t\t})\n\t\t\t.catch((e: Error) => {\n\t\t\t\tconsole.error(e);\n\t\t\t\tprops.endSession();\n\t\t\t\treturn {} as StringDictionary;\n\t\t\t});\n    }, [setTournamentDict, props.endSession]);\n\n\tconst validateTournament = useCallback((tournamentID: string): Promise<void> => {\n\t\tif (!tournamentID) return Promise.reject();\n\t\tif (!Object.values(tournamentDict).length) {\n\t\t\treturn updateTournamentDict()\n\t\t\t\t.then((tournamentDict: StringDictionary) => {\n\t\t\t\t\tif (tournamentDict[tournamentID] === undefined) throw new Error();\n\t\t\t\t\treturn;\n\t\t\t\t});\n\t\t} else return tournamentID in tournamentDict ? Promise.resolve() : Promise.reject();\n\t}, [tournamentDict, updateTournamentDict]);\n\n\tconst setTournamentID = useCallback((tournamentID: string): Promise<void> => {\n\t\treturn validateTournament(tournamentID)\n\t\t\t.then(() => {\n\t\t\t\tcookies.set('tournamentID', tournamentID, { path: '/' }).catch(console.error);\n\t\t\t\tprops.setTournamentID(tournamentID);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tcookies.remove('tournamentID').catch(console.error);\n\t\t\t\tprops.setTournamentID('');\n\t\t\t});\n\t}, [validateTournament, props.setTournamentID]);\n\n\tconst createNewTournament = useCallback(async (): Promise<void> => {\n\t\ttry {\n\t\t\tlet id = await POST({ url: '/initialise' });\n\t\t\tif (!id) throw new Error();\n\t\t\tprops.setTournamentID(id);\n\t\t\tawait updateTournamentDict();\n\t\t} catch (error) {\n\t\t\tlet e = error as AxiosError;\n\t\t\tif (!e.response || e.response.status === 401) props.endSession();\n\t\t}\n\t}, [props.setTournamentID, updateTournamentDict, props.endSession]);\n\n\tconst removeID = useCallback(async (id?: string): Promise<void> => {\n\t\tif (!id) {\n\t\t\tawait POST({ url: '/closeAuthorization/all' });\n\t\t\tsetTournamentDict({});\n\t\t} else {\n\t\t\tlet dict = Object.assign({}, tournamentDict);\n\t\t\tdelete dict[id];\n\t\t\tawait POST({ url: '/closeAuthorization/' + id });\n\t\t\tsetTournamentDict(dict);\t\n\t\t}\n    }, [tournamentDict, setTournamentDict]);\n\n    const [lines, setLines] = useState([] as ReactElement[]);\n\tconst logoRef = useRef() as React.RefObject<HTMLDivElement>\n\tconst drawLines = useCallback(() => {\n        if (!logoRef.current) return;\n\t\tlet startCoords = getElementCentre(logoRef.current);\n\t\tlet circles = Array.from(document.getElementsByClassName(styles.dot)) as HTMLElement[];\n\t\tlet _lines = [] as ReactElement[];\n\t\tfor (let c of circles) {\n            if (c.style.opacity === '0') continue;\n\t\t\t_lines.push(renderLineBetween(linesMounted, startCoords, getElementCentre(c), 2));\n        }\n        setLines(_lines);\n    }, [logoRef, renderLineBetween, linesMounted]);\n    useEffect(() => {\n        drawLines();\n        mountLines(true);\n        let x = setTimeout(() => adjustLines(true), 3000);\n        return () => clearTimeout(x);\n    }, [drawLines, adjustLines, mountLines, selected]);\n\n\tconst navData = useMemo((): NavData => {\n\t\treturn {\n\t\t\tcreate: {\n\t\t\t\tonClick: createNewTournament,\n\t\t\t\tcontent: <AiOutlinePlus />,\n\t\t\t\tdescription: 'Create new Swiss tournament'\n\t\t\t},\n\t\t\troundRobin: {\n\t\t\t\tonClick: () => {},\n\t\t\t\tcontent: <FaEarlybirds />,\n\t\t\t\tdescription: 'Create new Round-Robin tournament'\n\t\t\t},\n\t\t\tsettings: {\n\t\t\t\tonClick: () => {},\n\t\t\t\tcontent: <IoIosSettings />,\n\t\t\t\tdescription: 'User settings'\n\t\t\t},\n\t\t\tload: {\n\t\t\t\tonClick: updateTournamentDict,\n\t\t\t\tcontent: <TiThMenu />,\n\t\t\t\tdescription: 'Load previous tournaments'\n\t\t\t},\n\t\t\tback: {\n\t\t\t\tonClick: props.endSession,\n\t\t\t\tcontent: <IoMdArrowRoundBack />,\n\t\t\t\tdescription: 'Exit to login'\n\t\t\t},\n\t\t\tclose: {\n\t\t\t\tonClick: () => props.triggerConfirm('Delete all saved tournaments?', removeID, () => {}),\n\t\t\t\tnoSet: true,\n\t\t\t\tcontent: <IoMdClose />,\n\t\t\t\tdescription: 'Close all tournaments',\n\t\t\t\tstyle: {\t\t\t\t\t\n\t\t\t\t\tborder: '8px solid darkred'\n\t\t\t\t}\n\t\t\t},\n\t\t\trefresh: {\n\t\t\t\tonClick: updateTournamentDict,\n\t\t\t\tnoSet: true,\n\t\t\t\tcontent: <MdRefresh />,\n\t\t\t\tdescription: 'Refresh tournament list',\n\t\t\t\tstyle: {\t\t\t\t\t\n\t\t\t\t\tborder: '8px solid darkblue'\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}, [createNewTournament, updateTournamentDict, props.endSession, props.triggerConfirm, removeID, select]);\n\n\tconst handleNavData = useCallback((keys: string[], side: 'left' | 'right'): ReactElement[] => {\n\t\tlet data = keys.reduce((acc: NavData, curr: string) => {\n\t\t\tif (!(curr in navData)) return acc;\n\t\t\tacc[curr] = navData[curr];\n\t\t\treturn acc;\n\t\t}, {});\n\t\treturn Object.entries(data).reduce((acc, [id, meta], i) => {\n\t\t\tlet arr = [\n                <div\n                    className={[styles.dotDescription, selected === id ? styles.descriptionSelected : ''].join(' ')}\n                    key={['navData', side, 'description', i].join('.')}\n                >\n\t\t\t\t\t{meta.description}\n\t\t\t\t</div>,\n\t\t\t\t<Circle\n\t\t\t\t\tkey={['navData', side, 'dot', i].join('.')}\n\t\t\t\t\tradius='50px'\n\t\t\t\t\tclassName={[styles.dot, !linesAdjusted ? styles.dotUnloaded : ''].join(' ')}\n\t\t\t\t\tid={id}\n\t\t\t\t\tcontent={meta.content}\n\t\t\t\t\tonClick={async (e) => {\t\n\t\t\t\t\t\tif (selected === id) select('');\n\t\t\t\t\t\telse {\t\t\t\t\n\t\t\t\t\t\t\tawait meta.onClick(e);\n\t\t\t\t\t\t\tif (!meta.noSet) select(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={meta.style}\n\t\t\t\t/>\n\t\t\t];\n\t\t\tif (side === 'right') arr = arr.reverse();\n            acc.push(<div\n                className={[styles.dotContainer, linesAdjusted ? styles.dotContainerLoaded : ''].join(' ')}\n                key={['NavData', side, 'div', i].join('i')}\n            >\n\t\t\t\t{arr}\n\t\t\t</div>);\n\t\t\treturn acc;\n\t\t}, [] as ReactElement[]);\n    }, [navData, linesAdjusted, selected, select]);\n\n    const loadTournamentDict = useCallback(async () => {\n        let tournamentID = await cookies.get('tournamentID');\n\t\tif (tournamentID) setTournamentID(tournamentID);\n    }, [setTournamentID])\n\n    useEffect(() => {\n        loadTournamentDict();\n    }, [loadTournamentDict]);\n    useEffect(() => {\n        window.addEventListener('resize', drawLines);\n        let x = setTimeout(() => setLoading(false), 3000);\n        return () => {\n            window.removeEventListener('resize', drawLines);\n            clearTimeout(x);\n        };\n    }, [drawLines, setLoading]);\n\n    const foundNavData = useMemo((): ReactElement[] => {\n        switch (selected) {\n            case 'load':\n                return handleNavData(['refresh', 'close', 'load'], 'left');\n            case 'settings':\n                return handleNavData(['create', 'settings', 'load'], 'left');\n            default:\n                return handleNavData(['create', 'settings', 'load'], 'left');\n        }\n    }, [selected, handleNavData]);\n\n    const foundProfile = useMemo(() => {\n        switch (selected) {\n            case 'load':\n                return <Listing\n                    setTournamentID={setTournamentID}\n                    createNewTournament={createNewTournament}\n                    removeID={removeID}\n                    updateTournamentSettings={updateTournamentDict}\n                    tournamentDict={tournamentDict}\n                    closeListing={() => select('')}\n                    triggerConfirm={props.triggerConfirm}\n                />;\n            case 'settings':\n                return <UserSettings\n                    updateTournamentSettings={() => Promise.resolve()}\n                    updateSetting={() => Promise.resolve()}\n                    closeListing={() => select('')}\n                />;\n            default:\n                return handleNavData(['back'], 'right');\n            }\n    }, [select, selected, setTournamentID, createNewTournament, removeID, updateTournamentDict, tournamentDict, props.triggerConfirm, handleNavData]);\n\n    return (\n        <div className={appStyles.canvas}>\n            {lines}\n            <div className={[appStyles.column, styles.leftColumn].join(' ')}>\n                {foundNavData}\n            </div>\n            <div ref={logoRef} className={[appStyles.column, styles.column].join(' ')}>\n                <Crown setLoading={(l: boolean) => overrideLoading(l)} loading={loading || loadingOverride} classNames={{\n                    logo: styles.logo\n                }}/>\n            </div>\n            <div className={[appStyles.column, styles.rightColumn].join(' ')}>\n                {foundProfile}\n            </div>\n        </div>\n    );\n\n}\n\ninterface ListingProps {\n\tsetTournamentID: (id: string) => void\n\tcreateNewTournament: () => Promise<void>\n\tremoveID: (id: string) => void\n\tcloseListing: () => void\n\tupdateTournamentSettings: () => void\n\ttournamentDict: StringDictionary\n\ttriggerConfirm: (message: string, resolve: () => void, reject: () => void) => void\n}\n\nexport function Listing(props: ListingProps) {\n\n    const [height, setHeight] = useState(0);\n\n\tconst generateListing = useCallback((tournamentDict: StringDictionary) => {\n\t\tlet titles = Object.keys(tournamentDict).reduce((acc: NumberDictionary, curr: string) => {\n\t\t\tlet title = props.tournamentDict[curr];\n\t\t\tif (!title) return acc;\n\t\t\tif (!acc[title]) acc[title] = 0;\n\t\t\tacc[title]++;\n\t\t\treturn acc;\n\t\t}, {});\n\t\tlet buttons = Object.entries(tournamentDict).map(([tournamentID, name], i: number) => {\n\t\t\tlet displayName = titles[name] === undefined ? tournamentID : titles[name] === 1 ? name : name + '\\n' + tournamentID;\n\t\t\treturn (\n\t\t\t\t<div className={[profileStyles.row, styles.row].join(' ')} key={['row', i].join('.')}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={[styles.clickButton, 'fieldBox'].join(' ')}\t\t\t\t\t\t\n\t\t\t\t\t\tonClick={() => props.setTournamentID(tournamentID)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{displayName}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={[styles.clickButton, styles.close, 'fieldBox'].join(' ')} onClick={() => {\n\t\t\t\t\t\tprops.triggerConfirm('Delete tournament \\'' + displayName + '\\'?\\nPlease note this action cannot be undone.', () => props.removeID(tournamentID), () => {});\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<IoIosCloseCircle />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}).filter(elem => elem);\n\t\treturn buttons;\n\t}, [props.tournamentDict, props.setTournamentID, props.triggerConfirm, props.removeID]);\n\n    const listing = React.useRef() as React.RefObject<HTMLDivElement>\n    \n    useEffect(() => {\n        let x = setTimeout(() => {\n            if (!listing.current) return;\n            setHeight(listing.current.getBoundingClientRect().height);\n        }, 250);\n        return () => clearTimeout(x);\n    }, [listing, props.tournamentDict, generateListing, setHeight]);\n\n    return (\n        <div className={styles.sidebar}>\n            <div className={[profileStyles.profile, styles.profile].join(' ')}>\t\t\t\t\n                <div className='topBanner'>\n                    Load Tournament\n                </div>\n                <div className={styles.listWrapper} style={{height}}>\n                    <div ref={listing} className={styles.listing}>\n                        {generateListing(props.tournamentDict)}\n                    </div>\n                </div>\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                <div onClick={props.createNewTournament} className='button'>\n                    <FaPlusCircle />\n                </div>\n                <div onClick={props.closeListing} className='button'>\n                    <IoMdArrowRoundBack />\n                </div>\n            </div>\n        </div>\n    );\n}\n\ninterface UserSettingProps {\n\tupdateTournamentSettings: () => Promise<void>\n\tupdateSetting: (k: string, v: any) => Promise<void>\n    closeListing: () => void\n}\n\nexport function UserSettings (props: UserSettingProps) {\n\n    const [height, setHeight] = useState(0);\n    const [user, setUser] = useStateWithLabel({} as User, 'user');\n\tconst updateTournamentSettings = useCallback((): Promise<void> => GET({ url: '/profile'})\n        .then(setUser), [setUser]);\n\n    useEffect(() => {\n        updateTournamentSettings();\n    }, [updateTournamentSettings]);\n\n\n    const listing = React.useRef() as React.RefObject<HTMLDivElement>\n    \n    useEffect(() => {\n        let x = setTimeout(() => {\n            if (!listing.current) return;\n            setHeight(listing.current.getBoundingClientRect().height);\n        }, 250);\n        return () => clearTimeout(x);\n    }, [listing, setHeight]);\n\n\tconst renderSettings = useMemo((): ReactElement[] => {\n\t\treturn Object.entries(defaultUserSettings).map(([k, def], i): ReactElement => {\n            let v = user[k] || def.defaultValue;\n            if (def.value) v = def.value(user);\n            if (def.type === 'number') v = Number(v);\n            if (def.validate) {\n                if (!def.validate(v)) return null;\n            }\n            let content = v;\n            if (def.convert) content = def.convert(v) as string;\n\t\t\tlet displayContent = typeof content !== 'undefined' ? content.toString() : '\\u200b';\n\t\t\treturn (\n\t\t\t\t<div className={profileStyles.row} key={['row', i].join('.')}>\n\t\t\t\t\t<div className={['fieldBox'].join(' ')}>{def.name + ':'}</div>\n                    <div\n                        style={{\n                            cursor: def.type === 'link' ? 'copy' : 'default'\n                        }}\n                        className={['fieldBox', k === 'licensed' ? styles['license' + v.toString()] : ''].join(' ')}\n                        onClick={def.type !== 'link' ? null : () => navigator.clipboard.writeText(displayContent)}\n                    >\n                        {displayContent}\n                    </div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}, [user]);\n\n    return (\n        <div className={styles.sidebar}>\n            <div className={[profileStyles.profile, styles.profile].join(' ')}>\t\n                <div className='topBanner'>\n                    Settings\n                </div>\n                <div className={styles.listWrapper} style={{height}}>\n                    <div ref={listing} className={styles.listing}>\n                        {renderSettings}\n                    </div>\n                </div>\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                <div onClick={props.closeListing} className='button'>\n                    <IoMdArrowRoundBack />\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useRef, useEffect } from 'react';\nimport styles from '../css/alert.module.css';\nimport { IoMdClose, IoMdCheckbox } from 'react-icons/io';\n\nexport interface AlertProps {\n\tmessage: string\n\ttitle?: string\n\tconfirm?: boolean\n\tresolve?: () => void\n\treject?: () => void\n\tclose: () => void\n}\n\nexport default function Alert (props: AlertProps) {\n\t\n    const message = typeof props.message === 'string' ? props.message : JSON.stringify(props.message, null, 4);\n\n    const alertBox = useRef(null as HTMLButtonElement);\n    useEffect(() => {\n        alertBox.current.focus();\n    }, [alertBox]);\n\n    return (\n        <div className={styles.alertBox}>\n            {props.title ? <div>{props.title}</div> : null}\n            <div className={[styles.textBox].join(' ')}>\n                {message}\n            </div>\n            <div className={styles.response}>\n                {\n                    !props.confirm ?\n                        <button className={[styles.NO, 'button'].join(' ')} onClick={props.close} ref={alertBox}>\n                            OK\n                        </button> :\n                        <>\n                            <button className={[styles.NO, 'button'].join(' ')} ref={alertBox} onClick={() => {\n                                props.reject();\n                                props.close();\n                            }}>\n                                <IoMdClose />\n                            </button>\n                            <button className={[styles.YES, 'button'].join(' ')} onClick={() => {\n                                props.resolve();\n                                props.close();\n                            }}>\n                                <IoMdCheckbox />\n                            </button>\n                        </>\n                }\n            </div>\n        </div>\n    );\n\n}","import React, { ReactElement, useState, useReducer, useCallback, useEffect, useMemo } from 'react';\nimport './App.css';\nimport Login from './tournament/Login';\nimport StatusBar from './StatusBar';\nimport Tournament from './Tournament';\nimport { POST, cookies, setErrorCallback } from './utils/requests';\n//import { isElectron, isDev, isProd } from './utils/electron';\n\nimport Menu from './tournament/Menu';\nimport Alert from './tournament/Alert';\nimport { useStateWithLabel } from './utils/prototype';\n\ninterface AlertAction {\n\tmessage: string\n\ttitle?: string\n\terror?: boolean\n\tconfirm?: boolean\n\tresolve?: () => void\n\treject?: () => void\n\tclose?: () => void\n}\n\nexport default function App(): ReactElement {\n\n\tconst [sessionID, setSession] = useState('');\n\tconst [tournamentID, setTournament] = useState('');\n\tconst [mode, setMode] = useStateWithLabel('login' as 'login' | 'menu' | 'tournament' | 'grid', 'mode');\n\tconst [alertBox, setAlertBox] = useReducer((state: AlertAction, action: AlertAction) => {\n\t\treturn Object.assign({}, state, action);\n\t}, { message: '', title: '', error: true, confirm: false });\n\n\tconst closeAlertBox = useCallback((): void => setAlertBox({ message: '' }), [setAlertBox]);\n\tconst triggerConfirm = useCallback((message: string, resolve: () => void, reject: () => void) => setAlertBox({\n\t\tmessage,\n\t\ttitle: 'CONFIRM ACTION',\n\t\tconfirm: true,\n\t\tresolve,\n\t\treject\n\t}), [setAlertBox]);\n\tconst triggerError = useCallback((message: string) => setAlertBox({message, title: 'ERROR', confirm: false }), [setAlertBox]);\n\n\tconst setTournamentID = useCallback((tournamentID: string): void => {\n\t\tsetTournament(tournamentID);\n\t\tsetMode(tournamentID ? 'tournament' : 'menu');\n\t}, [setTournament, setMode]);\n\n\tconst hasLoggedIn = useCallback(async (sessionID: string): Promise<void> => {\n\t\tawait cookies.set('sessionID', sessionID, { path: '/' });\n\t\tsetSession(sessionID);\n\t\tsetMode('menu');\n\t}, [setSession, setMode]);\n\n\tconst closeTournament = useCallback(async (): Promise<void> => {\n\t\tawait cookies.set('tournamentID', '', { path: '/' });\n\t\tsetMode('menu');\n\t\tsetTournament('');\n\t}, [setTournament, setMode]);\n\n\tconst endSession = useCallback(async (): Promise<void> => {\n\t\ttry {\n\t\t\tawait cookies.set('sessionID', '', { path: '/' });\n\t\t\tawait POST({ url: '/endSession' });\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t} finally {\n\t\t\tsetSession('');\n\t\t\tsetMode('login');\n\t\t}\n\t}, [setSession, setMode]);\n\t\n\tuseEffect(() => {\n\t\tsetErrorCallback((errorMessage: string) => triggerError(errorMessage));\n\t\treturn () => setErrorCallback(() => {});\n\t}, [triggerError]);\n\n\tconst pageLoad = useCallback(async () => {\n\t\tlet sessionID = await cookies.get('sessionID');\n\t\tif (!sessionID) return;\n\t\tsetSession(sessionID);\n\t\tsetMode('menu');\n\t}, [setSession, setMode])\n\n\tuseEffect(() => {\n\t\tpageLoad();\n\t}, [pageLoad]);\n\n\tconst Mode: ReactElement = useMemo(() => {\n\t\tswitch (mode) {\n\t\t\tcase 'login': {\n\t\t\t\treturn <Login login={hasLoggedIn}/>;\n\t\t\t}\n\t\t\tcase 'menu': {\n\t\t\t\treturn <Menu\n\t\t\t\t\tsessionID={sessionID}\n\t\t\t\t\tendSession={endSession}\n\t\t\t\t\tsetTournamentID={setTournamentID}\n\t\t\t\t\ttriggerConfirm={triggerConfirm}\n\t\t\t\t/>;\n\t\t\t}\n\t\t\tcase 'tournament': {\n\t\t\t\treturn <Tournament\n\t\t\t\t\tid={tournamentID}\n\t\t\t\t\tcloseTournament={closeTournament}\n\t\t\t\t\ttriggerError={triggerError}\n\t\t\t\t/>;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tconsole.error('invalid mode');\n\t\t\t\tsetMode('login');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t}\n\t}, [mode, hasLoggedIn, sessionID, endSession, setTournamentID, triggerConfirm, tournamentID, closeTournament, triggerError, setMode])\n\n\treturn (\n\t\t<>\n\t\t\t<StatusBar/>\n\t\t\t<div className='stage' style={{\n\t\t\t\tbackgroundImage: `url(${process.env.PUBLIC_URL}/images/leaves-texture.png)`\n\t\t\t}}>\n\t\t\t\t{Mode}\n\t\t\t\t{alertBox.message && alertBox.message.length > 10 ? <Alert\n\t\t\t\t\t{...alertBox}\n\t\t\t\t\tclose={closeAlertBox}\n\t\t\t\t/> : null}\n\t\t\t</div>\n\t\t</>\n\t);\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}