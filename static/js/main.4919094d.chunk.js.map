{"version":3,"sources":["css/sidebar.module.css","css/login.module.css","css/crosstable.module.css","css/tournament.module.css","css/app.module.css","css/statusbar.module.css","css/alert.module.css","css/components.module.css","assets/icons/chessCom.svg","assets/icons/lichess.svg","css/profile.module.css","css/pairings.module.css","css/menu.module.css","utils/electron.ts","utils/cookies.ts","utils/requests.ts","utils/regexes.ts","tournament/Login.tsx","StatusBar.tsx","components/EditableField.tsx","components/SinglePairing.tsx","components/index.ts","tournament/InfoBar.tsx","tournament/Pairings.tsx","tournament/PairingsSwitch.tsx","components/Buttons.tsx","components/CollapsableSection.tsx","tournament/Sidebar.tsx","tournament/Profile.tsx","utils/prototype.ts","utils/settings.ts","tournament/Settings.tsx","tournament/CrossTable.tsx","tournament/PasteInput.tsx","Tournament.tsx","components/Vectors.tsx","utils/userSettings.ts","tournament/Menu.tsx","tournament/Alert.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","isElectron","window","require","isProd","remote","win","session","getCurrentWindow","minimize","maximize","restore","close","isMaximized","electronCookies","webContents","cookies","console","log","process","windowCookies","universalCookies","errorCallback","get","then","arr","reduce","acc","curr","name","value","catch","e","Promise","resolve","getAll","map","cookie","options","details","Object","assign","date","Date","now","url","expirationDate","setFullYear","getFullYear","set","error","remove","reject","server","config","prodServer","resultsServer","prodResultsServer","GET","method","axios","res","data","response","status","statusText","split","pop","join","POST","headers","FORM","preventDefault","persist","form","target","constructor","parentElement","Error","Array","from","type","Number","action","setErrorCallback","c","defaults","baseURL","interceptors","request","use","a","JSON","stringify","Authorization","email","chessComTeam","Crown","props","className","appStyles","logo","classNames","style","visibility","loading","staticLogo","src","alt","crownOutline","loadingGif","Login","useState","setLoading","register","setRegister","errorMessage","triggerError","handleSubmit","useCallback","sessionID","login","finally","loginForm","useMemo","styles","onSubmit","required","placeholder","input","forgottenContainer","forgotten","submit","registerForm","minLength","pattern","regexes","source","loginSection","initialiseButton","loginBackground","flip","onClick","setTimeout","foreground","registerForeground","loginForeground","crownBuild","l","canvas","column","messageBar","toggleMaximisation","StatusBar","statusBar","title","menu","favicon","draggable","exec","EditableField","content","setContent","alwaysEnabled","editContent","setEditContent","mustFocus","focus","inputField","useRef","divArea","decrement","button","parentNode","stepDown","increment","stepUp","handleClear","handleAny","handleInfinity","useHandleSubmit","onSubmitSuccess","firstChild","handleKeyDown","keyCode","useEffect","current","select","useMouseDown","contains","myID","Math","random","toString","slice","displayContent","inputType","isNaN","valueOf","toLocaleString","show","any","ref","container","additionalStyles","id","defaultValue","defaultEditContent","tzoffset","getTimezoneOffset","toISOString","toDatetimeLocal","interDate","setUTCHours","getUTCHours","getUTCMinutes","setUTCMinutes","roundUpDate","formRef","onKeyDown","additionalInputProps","infinity","clear","submitHidden","cancel","children","generateForm","editableField","defaultContent","SinglePairing","undefined","valid","setValid","hover","setHover","handleChange","validate","result","resultsBridge","setResult","neutral","expand","expanded","transform","tournamentID","min","step","inputClassName","onChange","centre","tooltip","tabIndex","reset","entries","hidden","i","key","PairingDetails","height","setHeight","getBoundingClientRect","lichess","individual","gameLinks","lichessLink","lichessTeamLink","chessCom","chessComLink","chessComTeamLink","v","matches","match","round","site","undoPairing","updatePlayerDict","detailsContent","row","display","gridAutoColumns","justifyContent","alignItems","board","triggerConfirm","update","k","inputURL","linkSubmit","dispatchEvent","Event","icons","callback","addEventListener","removeEventListener","InfoProps","lastRound","lastRoundOverride","settings","totalRounds","uri","titleBar","gridColumn","header","updateTournamentStatus","closeTournament","setLastRound","toggleCrossTable","switchPairings","Pairings","useReducer","resultsState","updateResults","reduceResults","state","W","B","histories","displayPoints","pairingData","setPairings","Map","results","setResults","getPairings","playerDict","size","pairings","w","b","playerDictKey","getDisplayName","player","displayName","competitors","firstName","lastName","score","pending","values","filter","every","pairRemaining","triggerNextRound","updateRound","canPairMore","p","length","validateForm","resultWhite","resultBlack","validity","gamePointTotal","setExpanded","listing","dict","black","wDisplay","bDisplay","push","pairing","playerInfo","bye","setDisplayPlayer","inputResult","parent","nextSibling","getElementsByTagName","newForm","newInput","topBanner","pairingContainer","pairingWrapper","toggleSidebar","gridAutoFlow","width","nextButton","canTriggerNextRound","waitButton","finishButton","generateNextButton","toggleSettings","Switch","selected","setSelected","includes","splice","indexOf","deselect","triggerPairingSwap","swapX","swapY","backgroundColor","componentStyles","cursor","left","Bottom","buttons","item","func","icon","toLowerCase","SectionBreak","sectionContainer","sectionHeader","sectionHeaderText","CollapsableSection","internalExpanded","innerDiv","useInternalState","updateHeight","child","onload","grandChild","sectionToggle","sectionListWrapper","sectionList","ActivePlayer","requireLastName","playerLine","active","playerInactive","allowNewPlayers","rating","played","edit","editPlayer","clearPlayer","activate","activatePlayer","EditableForm","firstInput","createRef","scoreSection","onPaste","handlePaste","max","Sidebar","setRound","players","setPlayersRaw","linkedState","setLinkedState","updatePlayerState","setPlayers","refresh","sort","checkIfEnoughPlayers","updatePlayer","params","setPlayerDict","clearPlayerList","text","clipboardData","getData","trim","CSV","parse","delimitersToGuess","dynamicTyping","fastMode","TypeError","r","all","Forms","forms","Entry","entryProps","setEdit","setPlayer","newPlayer","List","list","section","sidebar","playersSection","bottomBanner","togglePasteInput","sidebarStyles","clearClash","SingleClash","handleInput","firstChoice","startsWith","autofill","setSelectionRange","onInput","autoComplete","Profile","playerID","setPlayerID","getNameFromPlayer","_player","refetch","updatePlayerFromProps","opp","renderEntry","clashes","setClashes","updateClashes","oppId","playerId","Name","profile","Status","Rating","performanceRating","Playing","isPlaying","history","total","totalGames","scores","Score","gamePoints","expectedScore","toFixed","expectedGameScore","profileContainer","allowClashes","find","oppName","minPlayer","colour","resultsRow","capitalise","str","toUpperCase","useStateWithLabel","initialValue","setValue","useDebugValue","defaultSettings","general","tournamentId","locked","primaryKey","enum","convert","pairingSystem","lockOnInit","Infinity","nb","allow","ratingSystem","public","vanityURL","s","profileURL","rulesURL","logoURL","streamURL","showRatings","roundTimes","permissions","allowSelfSubmissions","points","lossReward","drawReward","winReward","byeReward","performanceSystem","stats","nbPlayers","activePlayers","matchesPlayed","gamesPlayed","averageRating","sum","createdAt","updatedAt","watchProps","def","keys","Settings","sectionExpando","setSection","handleToggle","index","setIndex","updateSetting","message","clearRound","watchedSettings","document","querySelectorAll","h","firstElementChild","modifyHeightValues","renderRound","roundRow","rounds","updateRounds","semiPresent","endsWith","navigator","clipboard","writeText","updateTournamentSettings","editable","roundEntries","href","profilePicture","columns","pre","postConvert","entry","roundColumn","output","parseInt","aN","bN","post","parseFloat","winPercentage","ratingDifference","expectedDifference","CrossTable","roundHeaders","meta","setSortHeader","sortBy","renderRounds","renderRows","rowsData","pres","rowData","sortFunc","sortMeta","sortCol","tr","j","cell","gridPage","titles","closeButton","table","scope","th","headerCell","PasteInput","textArea","json","closePasteInput","subheader","textarea","defaultColumns","eventName","event","createEvent","initEvent","useCacheColumns","cachedColumns","setColumns","Tournament","resize","setResize","boundaries","displayPlayer","setDisplayPlayerRaw","crossTable","setCrossTable","pasteInput","setPasteInput","nextRound","toggleNextRound","switchMode","setSwitchMode","loadColumns","cols","reduceSidebar","_columns","reduceSettings","showSettings","setPlayerDictKey","setStatus","setSettings","setRounds","mouseClick","setMouseClick","handleMouseMove","percentX","x","innerWidth","prev","right","findIndex","abs","MouseEvents","setDictTimeout","awaitTimeout","lastUpdate","setLastUpdate","reducePlayerDict","delete","hash","force","clearTimeout","tournament","modifyPlayerDict","gridTemplateColumns","Circle","radius","lineHeight","borderRadius","onMouseEnter","defaultUserSettings","username","licensed","daysRemaining","user","floor","start","lastLicensed","getElementCentre","elem","rect","y","top","bottom","renderLineBetween","linesMounted","end","base","diff","sqrt","pow","sign","angle","atan","PI","line","position","opacity","transition","Menu","tournamentDict","setTournamentDict","loadingOverride","overrideLoading","mountLines","linesAdjusted","adjustLines","updateTournamentDict","endSession","validateTournament","setTournamentID","path","createNewTournament","removeID","lines","setLines","logoRef","drawLines","startCoords","_lines","getElementsByClassName","dot","navData","create","description","roundRobin","load","back","noSet","border","handleNavData","side","dotDescription","descriptionSelected","dotUnloaded","reverse","dotContainer","dotContainerLoaded","loadTournamentDict","foundNavData","foundProfile","closeListing","UserSettings","leftColumn","rightColumn","Listing","generateListing","profileStyles","clickButton","React","listWrapper","setUser","renderSettings","Alert","alertBox","textBox","confirm","NO","YES","App","setSession","setTournament","mode","setMode","setAlertBox","closeAlertBox","hasLoggedIn","pageLoad","Mode","backgroundImage","Boolean","location","hostname","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4919094d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__3Z89I\",\"slide-in-from-left\":\"sidebar_slide-in-from-left__3kaGk\",\"playersSection\":\"sidebar_playersSection__3_kKf\",\"scoreSection\":\"sidebar_scoreSection__2Qh1c\",\"addPlayerForm\":\"sidebar_addPlayerForm__1BL-S\",\"input\":\"sidebar_input__3Y8ld\",\"submit\":\"sidebar_submit__22Uk4\",\"edit\":\"sidebar_edit__zaTlg\",\"cancel\":\"sidebar_cancel__1DhJL\",\"activate\":\"sidebar_activate__2-tDL\",\"playerInfo\":\"sidebar_playerInfo__12dBq\",\"playerLine\":\"sidebar_playerLine__1cnKs\",\"scoreSeparator\":\"sidebar_scoreSeparator__1zbAQ\",\"sectionHeader\":\"sidebar_sectionHeader__2UjkE\",\"playerInactive\":\"sidebar_playerInactive__1Y9Kw\",\"topBanner\":\"sidebar_topBanner__3fw_E\",\"bottomBanner\":\"sidebar_bottomBanner__ZFfBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"login_column__14Kgt\",\"initialiseButton\":\"login_initialiseButton__3CXrs\",\"forgottenContainer\":\"login_forgottenContainer__2yR4y\",\"forgotten\":\"login_forgotten__3VFQz\",\"form\":\"login_form__1ieaR\",\"input\":\"login_input__3ze1R\",\"submit\":\"login_submit__2qxJT\",\"loginSection\":\"login_loginSection__1BBMn\",\"loginBackground\":\"login_loginBackground__y9UZ2\",\"foreground\":\"login_foreground__2Cqo8\",\"loginForeground\":\"login_loginForeground__lnGgY\",\"registerForeground\":\"login_registerForeground__3D6jX\",\"flip\":\"login_flip__2KG2q\",\"messageBar\":\"login_messageBar__6TM4O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridPage\":\"crosstable_gridPage__2Kpuz\",\"titles\":\"crosstable_titles__2lOQ_\",\"table\":\"crosstable_table__FafeF\",\"td\":\"crosstable_td__1hxGz\",\"th\":\"crosstable_th__Gp7TR\",\"cell\":\"crosstable_cell__1NDzK\",\"blank\":\"crosstable_blank__xJoJC\",\"player\":\"crosstable_player__TFp_x\",\"edit\":\"crosstable_edit__2V8kj\",\"headerCell\":\"crosstable_headerCell__2zS_u\",\"firstColumn\":\"crosstable_firstColumn__2m7R_\",\"closeButton\":\"crosstable_closeButton__2pu_0\",\"container\":\"crosstable_container__3ZuI8\",\"textarea\":\"crosstable_textarea__3lS39\",\"form\":\"crosstable_form__2y5OV\",\"submit\":\"crosstable_submit__3U_pw\",\"scrollbar\":\"crosstable_scrollbar__3sUIs\",\"track\":\"crosstable_track__35bvy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tournament\":\"tournament_tournament__1ikhA\",\"titleBar\":\"tournament_titleBar__1Kvez\",\"slide-in-from-top\":\"tournament_slide-in-from-top__22vmU\",\"row\":\"tournament_row__3K-Kn\",\"header\":\"tournament_header__hB1Cf\",\"container\":\"tournament_container__DVAFe\",\"form\":\"tournament_form__1Pn88\",\"input\":\"tournament_input__xb1Th\",\"editableField\":\"tournament_editableField__1rO3U\",\"button\":\"tournament_button__3FfYw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"app_canvas__1MLEL\",\"column\":\"app_column__2WVoo\",\"logo\":\"app_logo__b6W_t\",\"loadingLine\":\"app_loadingLine__1xeSs\",\"staticLogo\":\"app_staticLogo__1-Wsi\",\"loadingGif\":\"app_loadingGif__2PnUi\",\"crownOutline\":\"app_crownOutline__2IPSS\",\"fade-in\":\"app_fade-in__3kaKs\",\"grow-right\":\"app_grow-right__1NUcX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBar\":\"statusbar_statusBar__3f7HO\",\"favicon\":\"statusbar_favicon__1Unmh\",\"menu\":\"statusbar_menu__3nFvT\",\"title\":\"statusbar_title__3ClL5\",\"exec\":\"statusbar_exec__2fXB2\",\"close\":\"statusbar_close__3ssky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertBox\":\"alert_alertBox__-kpK4\",\"error\":\"alert_error__wKYnQ\",\"textBox\":\"alert_textBox__ATagI\",\"response\":\"alert_response__1RX0q\",\"NO\":\"alert_NO__2Bl9f\",\"YES\":\"alert_YES__pKi26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"components_container__1CCB7\",\"editableField\":\"components_editableField__2fs18\",\"form\":\"components_form__1RjIP\",\"input\":\"components_input__I_Vv7\",\"submitHidden\":\"components_submitHidden__PvrYt\",\"any\":\"components_any__3pCEP\",\"button\":\"components_button__1Gg6-\",\"submit\":\"components_submit__1SFYQ\",\"increment\":\"components_increment__19rbD\",\"cancel\":\"components_cancel__1_2ia\",\"infinity\":\"components_infinity__1rF3u\",\"resultsBridge\":\"components_resultsBridge__9qnay\",\"details\":\"components_details__1FuFV\",\"resolve\":\"components_resolve__1X_KN\",\"reject\":\"components_reject__3ymMO\",\"neutral\":\"components_neutral__392Xn\",\"flash-green\":\"components_flash-green__2Wczz\",\"setResult\":\"components_setResult__ToBDd\",\"inputURL\":\"components_inputURL__3WU4U\",\"centre\":\"components_centre__2BcEl\",\"tooltip\":\"components_tooltip__1IKxP\",\"detailsContent\":\"components_detailsContent__2yLbz\",\"row\":\"components_row__1jpeO\",\"linkSubmit\":\"components_linkSubmit__TNip6\",\"sectionContainer\":\"components_sectionContainer__1tg1I\",\"sectionHeader\":\"components_sectionHeader__-UWwY\",\"sectionHeaderText\":\"components_sectionHeaderText__1OTig\",\"sectionListWrapper\":\"components_sectionListWrapper__a03uW\",\"sectionList\":\"components_sectionList__117sb\",\"expanded\":\"components_expanded__3qOxR\",\"sectionToggle\":\"components_sectionToggle__2z6Il\"};","module.exports = __webpack_public_path__ + \"static/media/chessCom.228db28e.svg\";","module.exports = __webpack_public_path__ + \"static/media/lichess.9ff6e305.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__1V8qL\",\"slide-in-from-right\":\"profile_slide-in-from-right__2jdIT\",\"profileContainer\":\"profile_profileContainer__V5hnJ\",\"bottomBanner\":\"profile_bottomBanner__b2MfX\",\"roundRow\":\"profile_roundRow__3OA2r\",\"row\":\"profile_row__aUfgI\",\"resultsRow\":\"profile_resultsRow__4zleX\",\"editable\":\"profile_editable__24Eas\",\"editableField\":\"profile_editableField__2onPe\",\"input\":\"profile_input__2tu2X\",\"sectionContainer\":\"profile_sectionContainer__Tm0AF\",\"sectionHeader\":\"profile_sectionHeader__UZUfT\",\"sectionHeaderText\":\"profile_sectionHeaderText__XE7UN\",\"sectionListWrapper\":\"profile_sectionListWrapper__1K1-l\",\"sectionList\":\"profile_sectionList__3bJ8Z\",\"expanded\":\"profile_expanded__3QtaO\",\"sectionToggle\":\"profile_sectionToggle__2qBPk\",\"semiPresent\":\"profile_semiPresent__1APEU\",\"playerLine\":\"profile_playerLine__IVVus\",\"cancel\":\"profile_cancel__AKFEe\",\"profilePicture\":\"profile_profilePicture__d0y9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pairings\":\"pairings_pairings__2Z6gd\",\"pairingContainer\":\"pairings_pairingContainer__2snrJ\",\"pairing\":\"pairings_pairing__jh3eo\",\"fade-in\":\"pairings_fade-in__3Iydy\",\"topBanner\":\"pairings_topBanner__duKX4\",\"playerInfo\":\"pairings_playerInfo__2BGOf\",\"statusBar\":\"pairings_statusBar__Y2g9v\",\"slide-in-from-bottom\":\"pairings_slide-in-from-bottom__1tu-V\",\"waitButton\":\"pairings_waitButton__3CIsd\",\"finishButton\":\"pairings_finishButton__elOep\",\"nextButton\":\"pairings_nextButton__1fjha\",\"rotate\":\"pairings_rotate__rWtYA\",\"inputResult\":\"pairings_inputResult__8kpK5\",\"bye\":\"pairings_bye__2Q8Qe\",\"submit\":\"pairings_submit__258vX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftColumn\":\"menu_leftColumn__13Ey0\",\"rightColumn\":\"menu_rightColumn__2D55A\",\"line\":\"menu_line__2oByf\",\"row\":\"menu_row__q-PZk\",\"listWrapper\":\"menu_listWrapper__1_77c\",\"clickButton\":\"menu_clickButton__1F_HI\",\"dotContainer\":\"menu_dotContainer__ze3l6\",\"dotDescription\":\"menu_dotDescription__19QYi\",\"dot\":\"menu_dot__3Dq9b\",\"dotContainerLoaded\":\"menu_dotContainerLoaded__3YmWC\",\"descriptionSelected\":\"menu_descriptionSelected__2aKX-\",\"close\":\"menu_close__3eKoV\",\"sidebar\":\"menu_sidebar__l1_lg\",\"profile\":\"menu_profile__3-O4-\",\"bottomBanner\":\"menu_bottomBanner__3Od_g\",\"slide-in-from-right\":\"menu_slide-in-from-right__2syBl\",\"logo\":\"menu_logo__3MwZ9\",\"float-down\":\"menu_float-down__1GhiB\",\"dotUnloaded\":\"menu_dotUnloaded__2DT-h\",\"expand\":\"menu_expand__1E6M-\",\"license1\":\"menu_license1__1o4qd\",\"license2\":\"menu_license2__1N8w4\",\"license3\":\"menu_license3__2EL0m\",\"briefly-expand\":\"menu_briefly-expand__ex-pm\"};","export const isElectron = typeof window.require === 'function'; //detect !in-browser\nexport const isDev = process.env.NODE_ENV === 'development'; //detects a react dev build\nexport const isProd = typeof window.require === 'function' && !window.require('electron-is-dev'); //detect an electron prod build\n\n// export const renderedArguments = !window.process.argv.includes('--production');\n/**\n * \t\t\t\t|\t\tisDev\t\t\t\t\t\t|\t\t\t\t\t!isDev\t\n * _________________________________________________________________________________________________\n * !isElectron\t|\t\tyarn start (in-browser)\t\t|\t\tyarn deploy (gh-pages build)\n *  isElectron\t|\t\tyarn gui (linked electron)\t|\t\tyarn gui-prod (headless electron build)\n * \n * isProd: yarn exe (OS-specific executable)\n */\n\nexport const remote = isElectron ? window.require('electron').remote : null;\nexport const session = isElectron ? remote.session : null;\n\nexport const win = (isElectron ? remote.getCurrentWindow() : {\n\tminimize: () => {},\n\tmaximize: () => {},\n\trestore: () => {},\n\tclose: () => {},\n\tisMaximized: () => true\t\t\n}) as any;\n\nexport const electronCookies = isElectron ? win.webContents.session.cookies : null;\n\nconsole.log('isDev', isDev);\nconsole.log('isElectron', isElectron);\nconsole.log('isProd', isProd);","import universalCookies, { Cookie, CookieSetOptions } from 'universal-cookie';\nimport { isElectron, electronCookies, isProd } from './electron';\nimport { CookiesSetDetails } from 'electron';\nimport { server as url } from './requests';\nimport { StringDictionary } from '../interfaces';\n\nconst windowCookies = new universalCookies();\n\nexport default class Cookies {\n\n\tgetAll(): Promise<StringDictionary> {\n\t\tif (isElectron || isProd) {\n\t\t\treturn (electronCookies.get({}) as Promise<Electron.Cookie[]>)\n\t\t\t\t.then((arr: Cookie[]) => arr.reduce((acc: StringDictionary, curr: Cookie) => {\n\t\t\t\t\tacc[curr.name] = curr.value;\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {}))\n\t\t\t\t.catch((e: Error) => {\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t\treturn {};\n\t\t\t\t});\n\t\t} else return Promise.resolve(windowCookies.getAll() || {});\n\t}\n\n\tget(name: string): Promise<string> {\n\t\tif (isElectron || isProd) {\n\t\t\treturn (electronCookies.get({ name }) as Promise<Electron.Cookie[]>)\n\t\t\t\t.then((arr: Cookie[]) => arr.map(cookie => cookie.value))\n\t\t\t\t.then((arr: Cookie[]) => arr[0] || '')\n\t\t\t\t.catch((e: Error) => {\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t\treturn '';\n\t\t\t\t});\n\t\t} else return Promise.resolve(windowCookies.get(name) || '');\n\t}\n\n\tset(name: string, value: any, options: CookieSetOptions = {}): Promise<void> {\n\t\tlet details = Object.assign({}, options) as CookiesSetDetails;\n\t\tif (isElectron || isProd) {\n\t\t\tlet date = new Date(Date.now());\t\n\t\t\tdetails = Object.assign(details, {\n\t\t\t\tname,\n\t\t\t\tvalue,\n\t\t\t\turl,\n\t\t\t\texpirationDate: date.setFullYear(date.getFullYear() + 1)\n\t\t\t});\n\t\t\treturn electronCookies.set(details)\n\t\t\t\t.then(() => electronCookies.get({}))\n\t\t\t\t.then((arr: Cookie[]) => arr.map(cookie => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: cookie.name,\n\t\t\t\t\t\tvalue: cookie.value\n\t\t\t\t\t};\n\t\t\t\t}))\n\t\t\t\t.catch(console.error);\n\t\t} else {\n\t\t\treturn Promise.resolve(windowCookies.set(name, value, options));\n\t\t}\n\t}\n\n\tremove(name: string, options: CookieSetOptions = {}): Promise<void> {\n\t\tif (isElectron || isProd) {\n\t\t\treturn electronCookies.remove(url, name);\t\t\t\n\t\t} else {\n\t\t\tif (windowCookies.get(name)) {\n\t\t\t\treturn Promise.resolve(windowCookies.remove(name, options));\n\t\t\t} else {\n\t\t\t\treturn Promise.reject('Couldn\\'t remove cookie');\n\t\t\t}\n\t\t}\n\t}\n}","import axios, { AxiosRequestConfig, AxiosResponse, AxiosError } from 'axios';\nimport config from '../config.json';\nimport { isDev } from './electron';\nimport { AnyDictionary } from '../interfaces.js';\nimport Cookies from './cookies';\n\nlet errorCallback: (message: string) => void = () => {};\n\nexport let cookies = new Cookies();\n\nexport const server = !isDev || config.useProd ? config.prodServer : config.server;\nexport const resultsServer = !isDev || config.useProd ? config.prodResultsServer : config.resultsServer;\n\naxios.defaults.baseURL = server;\n\n// alter all requests to use cookies only from AsyncStorageCookieStore\naxios.interceptors.request.use(async config => {\n\t\n\t// the device will have it's own cookie store, and attempt to\n\t// send cookies itself.\n\t// this has been documented to be unreliable, so we wipe these cookies\n\t// and implement the cookie store ourselves.\n\n\t//await AsyncStorage.clear()\n\treturn {\n\t\t...config,\n\t\theaders: {\n\t\t\t...config.headers,\n\t\t\tAuthorization: JSON.stringify(await cookies.getAll())\n\t\t}\n\t};\n\n});\n\nexport function GET(options: AxiosRequestConfig): Promise<any> {\n\toptions = Object.assign(options, {\n\t\tmethod: 'GET'\n\t});\n\treturn axios(options)\n\t\t.then((res: AxiosResponse<any>) => res.data)\n\t\t.catch((e: AxiosError) => {\n\t\t\tconsole.error(e);\n\t\t\tif (e.response) errorCallback([e.response.status, e.response.statusText, ':', '/' + e.response.config.url.split('/').pop()].join(' '));\n\t\t\tthrow e;\n\t\t});\n}\n\nexport function POST(options: AxiosRequestConfig): Promise<any> {\n\toptions = Object.assign(options, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t}\n\t});\n\treturn axios(options)\n\t\t.then((res: AxiosResponse<any>) => res.data)\n\t\t.catch((e) => {\n\t\t\tif (e && e.response && e.response.data) errorCallback(e.response.data);\n\t\t\tthrow e;\n\t\t});\n}\n\nexport function FORM(e: React.FormEvent<HTMLFormElement>): Promise<any> {\n\te.preventDefault();\n\te.persist();\n    let form = e.target as HTMLFormElement;\n    while (form.constructor.name !== 'HTMLFormElement' && form.parentElement) {\n        form = form.parentElement as HTMLFormElement;\n    }\n    if (form.constructor.name !== 'HTMLFormElement') throw new Error('Couldn\\'t find valid form');\n    let inputs = Array.from(form) as HTMLInputElement[];\n\tlet data = inputs.reduce((acc, curr) => {\n\t\tif (!curr.name) return acc;\n\t\tif (curr.name === 'submit') return acc;\n\t\tif (curr.type === 'number') acc[curr.name] = Number(curr.value);\n\t\telse acc[curr.name] = curr.value;\n\t\treturn acc;\n\t}, {} as AnyDictionary);\n\tlet options = {\n\t\tdata,\n\t\turl: form.action\n\t} as AxiosRequestConfig;\n\treturn POST(options);\n}\n\nexport function setErrorCallback(c: (message: string) => void) {\n\terrorCallback = c;\n}\n\n/*\n\nclass Requests {\n\n\tGET(options: AxiosRequestConfig): Promise<any> {\n\t\toptions = Object.assign(options, {\n\t\t\tmethod: 'GET'\n\t\t});\n\t\treturn axios(options)\n\t\t\t.then((res: AxiosResponse<any>) => res.data);\n\t}\n\n\tPOST(options: AxiosRequestConfig): Promise<any> {\n\t\toptions = Object.assign(options, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t});\n\t\treturn axios(options)\n\t\t\t.then((res: AxiosResponse<any>) => res.data);\n\t}\n\n\tFORM(e: React.FormEvent<HTMLFormElement>): Promise<any> {\n\t\te.preventDefault();\n\t\tlet form = e.target as HTMLFormElement;\n\t\tlet inputs = Array.from(form) as HTMLInputElement[];\n\t\tlet data = inputs.reduce((acc, curr) => {\n\t\t\tif (!curr.name) return acc;\n\t\t\tif (curr.name === 'submit') return acc;\n\t\t\tacc[curr.name] = curr.value;\n\t\t\treturn acc;\n\t\t}, {} as AnyDictionary);\n\t\tlet options = {\n\t\t\tdata,\n\t\t\turl: form.action\n\t\t} as AxiosRequestConfig;\n\t\treturn this.POST(options);\n\t}\n\n}\n\nlet r = new Requests();\nexport const GET = r.GET;\nexport const POST = r.POST;\nexport const FORM = r.FORM;\n\n*/","export const space = /\\s+/g;\nexport const letters = /\\w+/g;\nexport const image = /<img\\s+.*?src=[\"'](.*).*?\">/;\nexport const date = /^[0-9]{4}-[0-9]{1,2}-[0-9]{1,2}_/;\nexport const href = /^(https?:)?\\/\\//;\n\t/* eslint-disable-next-line no-control-regex */\nexport const email = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n\nexport const chessComTeam = /chess\\.com\\/(?:live#tm=|club\\/matches\\/live\\/(?:[a-z-]+\\/)?)([0-9]+)/;\n\nexport const streamLink = /(?:https:\\/\\/)(?:www.)(?:(twitch).tv|(youtube).com)\\/(.*)/;","import React, { ReactElement, useState, useCallback, useMemo } from 'react';\nimport url from 'url';\nimport { server, FORM } from '../utils/requests';\nimport * as regexes from '../utils/regexes';\n\nimport appStyles from '../css/app.module.css';\nimport styles from '../css/login.module.css';\nimport { StringDictionary } from '../interfaces';\nimport { IoIosArrowForward, IoIosArrowBack } from 'react-icons/io';\n\n/*\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport iconFont from 'react-native-vector-icons/Fonts/FontAwesome.ttf';\nconst iconFontStyles = `@font-face {\n  src: url(${iconFont});\n  font-family: FontAwesome;\n}`;*/\n\nexport function Crown(props: {\n\tloading: boolean,\n\tsetLoading: (loading: boolean) => void\n\tclassNames?: StringDictionary\n}) {\n\n\treturn (\n\t\t<div\n\t\t\tclassName={[appStyles.logo, props.classNames?.logo].join(' ')}\n\t\t>\n\t\t\t<img style={{visibility: props.loading ? 'hidden' : 'visible'}} className={appStyles.staticLogo} src={process.env.PUBLIC_URL + '/images/favicon.png'} alt='swiss-logo.png'/>\n\n\t\t\t<img style={{visibility: props.loading ? 'visible' : 'hidden'}} className={appStyles.staticLogo} src={process.env.PUBLIC_URL + '/images/dubrovny.png'} alt='swiss-logo.png'/>\n\t\t\t<img style={{visibility: props.loading ? 'visible' : 'hidden'}} className={appStyles.crownOutline} src={process.env.PUBLIC_URL + '/images/crown-outline.png'} alt='outline-gif'/>\n\t\t\t<img style={{visibility: props.loading ? 'visible' : 'hidden'}} className={appStyles.loadingGif} src={process.env.PUBLIC_URL + '/images/loading-crown.gif'} alt='loading-gif'/>\n\t\t\t{/*\n\t\t\t<div>\n\t\t\t\t<hr className={appStyles.loadingLine}/>\n\t\t\t\t<hr className={appStyles.loadingLine}/>\n\t\t\t\t<hr className={appStyles.loadingLine}/>\n\t\t\t</div>*/}\n\t\t</div>\n\t);\n}\n\ninterface LoginProps {\n\tlogin: (sessionID: string) => void\n}\nexport default function Login(props: LoginProps) {\n\n\tconst [loading, setLoading] = useState(false);\n\tconst [register, setRegister] = useState(false);\n\tconst [errorMessage, triggerError] = useState('');\n\n\tconst handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>): void => {\n\t\tsetLoading(false);\n\t\tFORM(e)\n\t\t\t.then((sessionID: string) => props.login(sessionID))\n\t\t\t.catch((e) => {\n\t\t\t\tif (e && e.response && e.response.data) triggerError(e.response.data);\n\t\t\t\tconsole.error(e);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t}, [setLoading, triggerError, props.login]);\n\n\tconst loginForm = useMemo((): ReactElement => {\n\t\treturn (\n\t\t\t<form\n\t\t\t\tclassName={styles.form}\n\t\t\t\tmethod='POST'\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\taction={url.resolve(server, 'login')}\n\t\t\t>\n\t\t\t\t<input type='text' name='username' required placeholder='username' className={['input', styles.input].join(' ')}></input>\n\t\t\t\t<input type='password' name='password' required placeholder='password' className={['input', styles.input].join(' ')}></input>\n\t\t\t\t<div className={styles.forgottenContainer}>\n\t\t\t\t\t<div className={['input', styles.forgotten].join(' ')}>username reminder</div>\n\t\t\t\t\t<div className={['input', styles.forgotten].join(' ')}>password reset</div>\n\t\t\t\t</div>\n\t\t\t\t<input type='submit' value='LOGIN' className={['input', styles.submit].join(' ')}></input>\n\t\t\t</form>\n\t\t);\n\t}, [handleSubmit]);\n\n\tconst registerForm = useMemo((): ReactElement => {\n\t\treturn (\n\t\t\t<form\n\t\t\t\tclassName={styles.form}\n\t\t\t\tmethod='POST'\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\taction={url.resolve(server, 'register')}\n\t\t\t>\n\t\t\t\t<input type='text' name='username' required placeholder='username' className={['input', styles.input].join(' ')}></input>\n\t\t\t\t<input type='password' name='password' required placeholder='password' minLength={8} className={['input', styles.input].join(' ')}></input>\n\t\t\t\t<input type='email' name='email' required placeholder='email' className={['input', styles.input].join(' ')} pattern={regexes.email.source}></input>\n\t\t\t\t<input type='submit' value='REGISTER' className={['input', styles.submit].join(' ')}></input>\n\t\t\t</form>\n\t\t);\n\t}, [handleSubmit]);\n\n\tconst loginSection = useMemo((): ReactElement => {\n\t\treturn (\n\t\t\t<div className={[styles.loginSection, styles.initialiseButton].join(' ')}>\n\t\t\t\t<div className={styles.loginBackground}>\n\t\t\t\t\t<div className={[styles.flip, 'button'].join(' ')} onClick={() => {\n\t\t\t\t\t\tsetLoading(true);\n\t\t\t\t\t\tsetRegister(false);\n\t\t\t\t\t\ttriggerError('');\n\t\t\t\t\t\tsetTimeout(() => setLoading(false), 500);\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<div>LOGIN</div>\n\t\t\t\t\t\t<div>\n                            <IoIosArrowBack />\n                        </div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div></div>\n\t\t\t\t\t<div className={[styles.flip, 'button'].join(' ')} onClick={() => {\n\t\t\t\t\t\tsetLoading(true);\n\t\t\t\t\t\tsetRegister(true);\n\t\t\t\t\t\ttriggerError('');\n\t\t\t\t\t\tsetTimeout(() => setLoading(false), 500);\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<div>REGISTER</div>\n\t\t\t\t\t\t<div>\n                            <IoIosArrowForward />\n                        </div>\n\t\t\t\t\t</div>\n\t\t\t\t\tBackground\n\t\t\t\t</div>\n\t\t\t\t<div className={[styles.foreground, register ? styles.registerForeground : styles.loginForeground].join(' ')}>\n\t\t\t\t\t{\n\t\t\t\t\t\tregister ? registerForm : loginForm\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}, [setLoading, setRegister, triggerError, register]);\n\n\tconst crownBuild = useMemo(() => <Crown setLoading={(l: boolean) => setLoading(l)} loading={loading} />, [setLoading, loading]);\n\n\treturn (\n\t\t<div className={appStyles.canvas}>\n\t\t\t<div className={appStyles.column} />\n\t\t\t<div className={[appStyles.column, styles.column].join(' ')}>\n\t\t\t\t{crownBuild}\n\t\t\t\t{loginSection}\n\t\t\t\t<div className={styles.messageBar}>\n\t\t\t\t\t{errorMessage || '\\u200b'}\n\t\t\t\t</div>\n\t\t\t\t{/*<div className={['button', styles.initialiseButton].join(' ')}>\n\t\t\t\t\t{this.state.register ? <>\n\t\t\t\t\t\t<div className={styles.registerForm}>{this.registerForm}</div>\n\t\t\t\t\t\t<div className={styles.flip} onClick={() => this.setState({ register: false })}>{'LOGIN\\n🡄'}</div>\n\t\t\t\t\t</> : <>\n\t\t\t\t\t\t<div className={styles.flip} onClick={() => this.setState({ register: true })}>{'REGISTER\\n🡆'}</div>\n\t\t\t\t\t\t<div className={styles.loginForm}>{this.loginForm}</div>\n\t\t\t\t\t</>}\n\t\t\t\t</div>*/}\n\t\t\t</div>\n\t\t\t<div className={appStyles.column} />\n\t\t</div>\n\t);\n\n\n}","import React from 'react';\nimport { win } from './utils/electron';\nimport { FaWindowMaximize, FaWindowRestore, FaWindowMinimize, FaWindowClose } from 'react-icons/fa';\n\nimport styles from './css/statusbar.module.css';\n\nfunction toggleMaximisation () {\n\tif (win.isMaximized()) {\n\t\twin.restore();\n\t} else {\n\t\twin.maximize();\n\t}\n}\n\nexport default function StatusBar() {\n\n    const initialName = 'Tournament by Oxford Chess Development';\n\n    return (\n        <div className={styles.statusBar}>\n            <div className={styles.title}>\n                {initialName}\n            </div>\n            <div className={styles.menu}>\n                <div className={styles.favicon}>\n                    <img\n                        alt='favicon'\n                        draggable={false}\n                        src={process.env.PUBLIC_URL + '/logo192.png'}\n                    />\n                </div>\n            </div>\n            <div className={styles.exec}>\n                <div onClick={() => win.minimize()}>\n                    <FaWindowMinimize />\n                </div> \n                <div onClick={toggleMaximisation} >\n                    {win.isMaximized() ? \n                        <FaWindowRestore /> :\n                        <FaWindowMaximize />\n                    }\n                </div> \n                <div onClick={() => win.close()} className={styles.close}>\n                    <FaWindowClose />\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState, useRef, ReactElement, useCallback, ReactNode, ReactNodeArray, RefObject } from 'react';\nimport { useMouseDown } from '.';\nimport { FORM } from '../utils/requests';\nimport styles from '../css/components.module.css';\nimport { AiOutlineClose, AiOutlineDown, AiOutlineUp, AiOutlineCheck } from 'react-icons/ai';\n\ninterface EditableFieldProps {\n    content: string\n    defaultEditContent?: string\n    defaultContent?: string\n    inputType?: 'button' | 'checkbox' | 'color' | 'date' | 'datetime-local' | 'email' | 'file' | 'hidden' | 'image' | 'month' | 'number' | 'password' | 'radio' | 'range' | 'reset' | 'search' | 'submit' | 'tel' | 'text' | 'time' | 'url' | 'week',\n\n    url: string, //url.resolve(server, ['tournament', props.id, 'editTournamentName'].join('/'))\n    handleSubmit: (k: string, v: any) => Promise<void>\n    onSubmitSuccess: (e: React.FormEvent<HTMLFormElement>) => React.FormEvent<HTMLFormElement>\n    handleClear?: () => Promise<void>\n\tuseHandleSubmit?: boolean\n    additionalStyles: { [key: string]: string }\n    additionalInputProps: { [key: string]: any }\n    name?: string\n    alwaysEnabled?: boolean\n    show?: {\n        submit?: boolean\n        infinity?: boolean\n        increment?: boolean\n        any?: boolean\n        clear?: boolean\n    }\n    formRef?: RefObject<HTMLFormElement>\n    children?: ReactNode | ReactNodeArray\n}\n\nfunction roundUpDate(date: Date): Date {\n    let interDate = new Date(date.setUTCHours(date.getUTCHours() + 1));\n    let nextDate: Date;\n    if (interDate.getUTCMinutes() < 30) nextDate = new Date(interDate.setUTCMinutes(30));\n    else nextDate = new Date(new Date(interDate.setUTCMinutes(0)).setUTCHours(interDate.getUTCHours() + 1));\n    return nextDate;\n}\n\nfunction toTimeDate(date: Date): string {\n    if (isNaN(date.valueOf())) return '';\n    return date.toLocaleString('en-GB').slice(0, -3);\n    //return date.toTimeString().slice(0, 8) + ' ' + date.toDateString().slice(0, 10);\n}\n\nfunction toDatetimeLocal(date: Date) {\n    if (isNaN(date.valueOf())) return '';\n    let tzoffset = date.getTimezoneOffset() * 60000; //offset in milliseconds\n    let localDate = new Date(date.valueOf() - tzoffset);\n    return localDate.toISOString().slice(0, 16);\n}\n\nexport default function EditableField(props: EditableFieldProps): ReactElement {\n\n    const [content, setContent] = useState(props.content);\n    const [editContent, setEditContent] = useState(props.alwaysEnabled || false);\n    const [mustFocus, focus] = useState(false);\n    const inputField = useRef(null as HTMLInputElement);\n    const divArea = useRef(null as HTMLDivElement);\n\n    const decrement = useCallback((e: React.MouseEvent<HTMLButtonElement>): void => {\n        e.preventDefault();\n        let button = e.target as HTMLButtonElement;\n        if (button.constructor.name !== 'HTMLButtonElement') return;\n        let form = button.parentNode as HTMLFormElement;\n        let input = form[props.name || 'name'] as HTMLInputElement;\n        input.stepDown();\n    }, [props.name]);\n\n    const increment = useCallback((e: React.MouseEvent<HTMLButtonElement>): void => {\n        e.preventDefault();\n        let button = e.target as HTMLButtonElement;\n        if (button.constructor.name !== 'HTMLButtonElement') return;\n        let form = button.parentNode as HTMLFormElement;\n        let input = form[props.name || 'name'] as HTMLInputElement;\n        input.stepUp();\n    }, [props.name]);\n\n    const handleClear = useCallback((e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        e.preventDefault();\n        if (!props.handleClear) return;\n        return props.handleClear()\n            .then(() => {\n                setEditContent(props.alwaysEnabled || false);\n                setContent('');\n            });\n    }, [props.handleClear, setEditContent, setContent, props.alwaysEnabled]);\n\n    const handleAny = useCallback((e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        e.preventDefault();\n        return props.handleSubmit(props.name || 'name', 0)\n            .then(() => {\n                setEditContent(props.alwaysEnabled || false);\n                setContent('0');\n            });\n    }, [props.handleSubmit, setEditContent, setContent, props.name]);\n\n    const handleInfinity = useCallback((e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        e.preventDefault();\n        return props.handleSubmit(props.name || 'name', 'Infinity')\n            .then(() => {\n                setEditContent(props.alwaysEnabled || false);\n                setContent('∞');\n            });\n    }, [props.handleSubmit, setEditContent, setContent, props.alwaysEnabled, props.name]);\n\n    const handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n\t\te.preventDefault();\n        if (props.useHandleSubmit) {\n\t\t\tlet form = e.target as HTMLFormElement;\n\t\t\tlet input: HTMLInputElement;\n\t\t\tif (form.constructor.name === 'HTMLFormElement') {\n\t\t\t\tinput = form[props.name || 'name'] as HTMLInputElement;\n\t\t\t} else\n\t\t\tif (form.constructor.name === 'HTMLInputElement') {\n\t\t\t\tinput = form as any as  HTMLInputElement;\n\t\t\t} else return Promise.resolve(setEditContent(props.alwaysEnabled || false));\n            return props.handleSubmit(props.name || 'name', input.value)\n                .then(() => {\n                    setEditContent(props.alwaysEnabled || false);\n                    return e;\n                })\n                .then(props.onSubmitSuccess)\n                .then(() => setContent(input.value))\n        } else return FORM(e)\n            .then(() => {\n                setEditContent(props.alwaysEnabled || false);\n                return e;\n            })\n            .then(props.onSubmitSuccess)\n            .then((e) => {\n                let form = e.target as HTMLFormElement;\n                while (form.constructor.name !== 'HTMLFormElement' && form.parentElement) form = form.parentElement as HTMLFormElement;\n                if (form.constructor.name !== 'HTMLFormElement') throw new Error('Couldn\\'t find valid form');\n                let input = form.firstChild as HTMLInputElement;\n                let content = input.value;\n                setContent(content);\n            });\n    }, [props.useHandleSubmit, props.handleSubmit, props.name, setEditContent, props.onSubmitSuccess, props.alwaysEnabled, setEditContent, setContent]);\n\n    const handleKeyDown = useCallback((e: React.KeyboardEvent<HTMLFormElement>): React.KeyboardEvent<HTMLFormElement> => {\n\t\tswitch (e.keyCode) {\n            case 27: {\n                setEditContent(props.alwaysEnabled || false);\n                return e;\n            }\n            case 13: {\n                handleSubmit(e);\n                return e;\n            }\n            default: {\n                return e;\n            }\n        }\n    }, [setEditContent, handleSubmit, props.alwaysEnabled]);\n\n    const generateForm = (name: string): JSX.Element => {\n        let defaultValue = name || props.defaultEditContent;\n        if (props.inputType === 'datetime-local') defaultValue = toDatetimeLocal(roundUpDate(new Date(defaultValue)));\n        else if (props.show?.any && defaultValue === '0') defaultValue = '';\n        return (\n            <form\n                ref={props.formRef}\n                className={styles.form}\n                target='_self'\n                onKeyDown={handleKeyDown}\n                onSubmit={handleSubmit}\n                method='POST'\n                action={props.url}\n            >\n                <input\n                    type={props.inputType}\n                    className={[styles.input, props.additionalStyles.input].join(' ')}\n                    name={props.name || 'name'}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\tplaceholder=' '\n                    required\n                    ref={inputField}\n                    {...props.additionalInputProps}\n                />\n                <button\n                    className={[props.show?.submit && !props.show?.infinity && !props.show?.any && !props.show?.clear ? '' : styles.submitHidden, styles.cancel].join(' ')}\n                    onClick={() => setEditContent(props.alwaysEnabled || false)}\n                >\n                    <AiOutlineClose />\n                </button>\n                <button\n                    className={[!props.show?.clear ? styles.submitHidden : '', styles.cancel].join(' ')}\n                    onClick={handleClear}\n                >\n                    <AiOutlineClose />\n                </button>\n                <button\n                    className={[!props.show?.any ? styles.submitHidden : '', styles.any].join(' ')}\n                    onClick={handleAny}\n                >Any</button>\n                <button\n                    className={[!props.show?.infinity ? styles.submitHidden : '', styles.infinity].join(' ')}\n                    onClick={handleInfinity}\n                >∞</button>\n                <button\n                    type='button'\n                    value='▼'\n                    className={[!props.show?.increment ? styles.submitHidden : '', styles.increment].join(' ')}\n                    onClick={decrement}\n                >\n                    <AiOutlineDown />\n                </button>\n                <button\n                    className={[!props.show?.increment ? styles.submitHidden : '', styles.increment].join(' ')}\n                    onClick={increment}\n                >\n                    <AiOutlineUp />\n                </button>\n                <button\n                    type='submit'\n                    className={[!props.show?.submit ? styles.submitHidden : '', styles.submit].join(' ')}\n                >\n                    <AiOutlineCheck />\n                </button>\n                {props.children}\n            </form>\n        );\n    }\n\n    useEffect(() => {\n        setContent(props.content);\n    }, [props.content]);\n    useEffect(() => {\n        if (!mustFocus) return;\n        let form = inputField.current;\n        if (!form) return;\n        if (form.select) form.select();\n        else if (form.focus) form.focus();\n    }, [inputField, mustFocus]);\n    useMouseDown((e) => {\n        if (divArea.current && divArea.current.contains(e.target as Node)) return;\n        setEditContent(props.alwaysEnabled || false);\n    });\n\n    const myID = Math.random().toString(16).slice(2, 9);\n\n    let displayContent = content;\n    if (displayContent && props.inputType === 'datetime-local') displayContent = toTimeDate(new Date(content));\n    else if (props.show?.any && displayContent === '0') displayContent = 'Any';\n\n    return (\n        <div\n            ref={divArea}\n            className={[styles.container, props.additionalStyles.container].join(' ')}\n            id={myID}\n        >\n            {editContent ?\n                generateForm(content) : <>\n                    <div\n                        className={[styles.editableField, props.additionalStyles.editableField || ''].join(' ')}\n                        onClick={() => {\n                            setEditContent(true);\n                            focus(true);\n                        }}\n                    >\n                        {displayContent || props.defaultContent || '\\u200b'}\n                    </div>\n                    {props.children}\n                </>\n            }\n        </div>\n    );\n\n}","import React, { useState, ReactElement, useRef, RefObject, useEffect, useCallback } from 'react';\nimport url from 'url';\nimport { FORM, server, POST } from '../utils/requests';\nimport { AnyDictionary, GameLinks } from '../interfaces';\n\nimport styles from '../css/components.module.css';\nimport { AiOutlineCheck, AiOutlineClose, AiOutlineMinus } from 'react-icons/ai';\nimport * as icons from '../assets/icons';\nimport * as regexes from '../utils/regexes';\nimport EditableField from './EditableField';\nimport { FaUndo } from 'react-icons/fa';\n\ninterface SinglePairingProps {\n    result: [number | null, number | null]\n\ttournamentID: string\n\tinputClassName: any\n    hidden: AnyDictionary\n    expanded: boolean\n    expand: (set: boolean) => void\n\tvalidate: (form: HTMLFormElement) => boolean | string | void\n\thandleSubmit: (e: React.FormEvent<HTMLFormElement>) => Promise<React.FormEvent<HTMLFormElement>>\n}\n\nexport default function SinglePairing(props: SinglePairingProps): ReactElement {\n\n    const [valid, setValid] = useState(undefined as boolean | undefined);\n\tconst [hover, setHover] = useState('');\n\n    const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n\t\tlet input = e.target as HTMLInputElement;\n        let form = input.parentElement as HTMLFormElement;\n        let valid = props.validate(form);\n        if (typeof valid === 'string') setHover(valid);\n        else setHover('');\n        if (typeof valid === 'boolean') setValid(valid);\n        else if (typeof valid === 'string') setValid(false);\n\t\telse setValid(undefined);\n    }\n\n    const clear = (e: React.FormEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n\t\tlet input = e.target as HTMLButtonElement;\n        let div = input.parentElement as HTMLDivElement;\n        let form = div.parentElement as HTMLFormElement\n        form.reset();\n        setHover('');\n        setValid(undefined);\n    }\n\n    if (props.result[0] !== null || props.result[1] !== null) return (\n        <div className={styles.resultsBridge}>\n            <div className={styles.setResult}>{props.result[0] ?? '\\u200b'}</div>\n            <div className={styles.neutral} onClick={() => props.expand(!props.expanded)} style={{\n                transform: props.expanded ? 'rotate(450deg)' : 'rotate(0deg)'\n            }}>\n                <AiOutlineMinus />\n            </div>\n            <div className={styles.setResult}>{props.result[1] ?? '\\u200b'}</div>\n        </div>\n    );\n    \n    return <form\n        className={styles.resultsBridge}\n        target='_self'\n        onSubmit={(e) => {\n            e.persist();\n            if (!props.validate(e.target as HTMLFormElement)) return e.preventDefault();\n            FORM(e).then(() => props.handleSubmit(e));\n        }}\n        method='POST'\n        action={url.resolve(server, ['tournament', props.tournamentID, 'addResult'].join('/'))}\n    >\n        <input type='number' min={0} step={0.5} name='resultWhite' required className={props.inputClassName} onChange={handleChange}/>\n        <div className={styles.centre}>\n            {hover ? <span className={styles.tooltip}>{hover}</span> : null}\n            {valid ?\n                <button tabIndex={-1} className={styles.resolve}>\n                    <AiOutlineCheck />\n                </button> :\n                valid === false ?\n                    <button tabIndex={-1} className={styles.reject} onClick={clear}>\n                        <AiOutlineClose />\n                    </button> :\n                    <div className={styles.neutral} onClick={() => props.expand(!props.expanded)} style={{\n                        transform: props.expanded ? 'rotate(450deg)' : 'rotate(0deg)'\n                    }}>\n                        <AiOutlineMinus />\n                    </div>\n            }\n        </div>\n        <input type='number' min={0} step={0.5} name='resultBlack' required className={props.inputClassName} onChange={handleChange}/>\n        {Object.entries(props.hidden).map(([name, value], i) => {\n            return <input key={['hiddenInput', i].join('.')} type='hidden' name={name} value={value} required />;\n        })}\t\t\n    </form>;\n}\n\ninterface DetailsProps {\n    tournamentID: string\n    id: string\n    className: string\n    expanded: boolean\n    gameLinks: GameLinks\n\tindividual: boolean\n\tround: number\n    board: number\n    update: () => Promise<void>\n\ttriggerConfirm: (message: string, resolve: () => void, reject: () => void) => void\n\tupdatePlayerDict: () => void\n}\n\nexport function PairingDetails(props: DetailsProps): ReactElement {\n\n    const [height, setHeight] = useState('0px');\n\n    const details = useRef(null) as RefObject<HTMLDivElement>;\n    const form = useRef(null) as RefObject<HTMLFormElement>;\n\n    useEffect(() => {\n        if (!details.current) return;\n        if (!props.expanded) return;\n        setHeight(details.current.getBoundingClientRect().height + 'px');\n        return () => setHeight('0px');\n    }, [details, setHeight, props.expanded]);\n\n    const lichess = props.individual ? props.gameLinks.lichessLink : props.gameLinks.lichessTeamLink;\n    const chessCom = props.individual ? props.gameLinks.chessComLink : props.gameLinks.chessComTeamLink;\n\n    const handleSubmit = useCallback((key: 'lichess' | 'chessCom', value: string): Promise<void> => {\n        let v = value;\n        if (!props.individual) {\n\t\t\tlet matches = value.match(regexes.chessComTeam);\n            if (!matches) {\n                console.error('Invalid syntax on tournament: ' + value);\n                return Promise.resolve();\n            }\n            v = 'https://chess.com/club/matches/live/' + matches[1];\n        }\n        return POST({\n            url: url.resolve(server, ['tournament', props.tournamentID, 'updateResultLink'].join('/')),\n            data: {\n                id: props.id,\n                [key]: v,\n\t\t\t\ttype: props.individual ? 'individual' : 'team',\n\t\t\t\tround: props.round\n            }\n        });\n    }, [props.id, props.individual, props.tournamentID]);\n\n    const handleClear = useCallback((key: 'lichess' | 'chessCom'): Promise<void> => {\n        return POST({\n            url: url.resolve(server, ['tournament', props.tournamentID, 'clearResultLink'].join('/')),\n            data: {\n                id: props.id,\n                site: key,\n                type: props.individual ? 'individual' : 'team',\n\t\t\t\tround: props.round\n            }\n        });\n    }, [props.id, props.individual, props.tournamentID]);\n\n    const undoPairing = useCallback((): Promise<void> => {\n        return POST({\n            url: url.resolve(server, ['tournament', props.tournamentID, 'undoPairing'].join('/')),\n            data: {\n                id: props.id,\n\t\t\t\tround: props.round\n            }\n\t\t})\n\t\t\t.then(props.updatePlayerDict);\n    }, [props.id, props.individual, props.tournamentID]);\n\n    return (\n        <div className={[props.className, styles.details].join(' ')} style={{\n            height\n        }}>\n            <div ref={details} className={[styles.detailsContent].join(' ')}>\n                <div className={[styles.row, 'topBanner'].join(' ')}>\n                    <div style={{display: 'grid', gridAutoColumns: '1fr', justifyContent: 'center', alignItems: 'center'}}>\n\t\t\t\t\t\tBoard: {props.board}{'\\n'}\n\t\t\t\t\t\t<button className={[styles.button, styles.infinity].join(' ')} onClick={() => props.triggerConfirm('Really undo result? This action cannot be undone', undoPairing, () => {})}>\n\t\t\t\t\t\t\t<FaUndo />\n\t\t\t\t\t\t\tUndo Pairing\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n                    For online games, enter {props.individual ? '' : 'team match '}game links below:\n                </div>\n                <div className={styles.row}>\n                    <EditableField\n                        content={chessCom}\n                        url={url.resolve(server, ['tournament', props.tournamentID, 'updateResultLink'].join('/'))}\n                        onSubmitSuccess={(e) => {\n                            props.update();\n                            return e\n                        }}\n                        handleSubmit={(k: string, v: string) => handleSubmit('chessCom', v)}\n                        name={'link'}\n                        additionalInputProps={{}}\n                        additionalStyles={{\n                            input: styles.inputURL,\n                            editableField: styles.editableField\n                        }}\n                        formRef={form}\n                        useHandleSubmit\n                        handleClear={() => handleClear('chessCom')}\n                        show={{\n                            clear: true\n                        }}\n                    >\n                        <button className={[styles.submit, styles.linkSubmit].join(' ')} onClick={e => form.current ? form.current.dispatchEvent(new Event('submit')) : null}>\n                            <img src={icons.chessCom} alt='chess.com' />\n                        </button>\n                    </EditableField>\n                </div>\n                <div className={styles.row}>\n                    <EditableField\n                        content={lichess}\n                        url={url.resolve(server, ['tournament', props.tournamentID, 'updateResultLink'].join('/'))}\n                        onSubmitSuccess={(e) => {\n                            props.update();\n                            return e\n                        }}\n                        handleSubmit={(k: string, v: string) => handleSubmit('lichess', v)}\n                        name={'link'}\n                        additionalInputProps={{}}\n                        additionalStyles={{\n                            input: styles.inputURL,\n                            editableField: styles.editableField\n                        }}\n                        formRef={form}\n                        useHandleSubmit\n                        handleClear={() => handleClear('lichess')}\n                        show={{\n                            clear: true\n                        }}\n                    >\n                        <button className={[styles.increment, styles.linkSubmit].join(' ')} onClick={e => form.current ? form.current.dispatchEvent(new Event('submit')) : null}>\n                            <img src={icons.lichess} alt='lichess' />\n                        </button>\n                    </EditableField>\n                </div>\n            </div>\n        </div>\n    );\n}","import { useEffect } from 'react';\n\nimport EditableField from './EditableField';\nimport Grid from './Grid';\nimport SinglePairing from './SinglePairing';\n\nexport { EditableField, Grid, SinglePairing };\n\nexport const useMouseDown = (callback: (e: MouseEvent) => any) => {\n\tuseEffect(() => {\n\t    window.addEventListener('mousedown', callback);\n\t    return () => window.removeEventListener('mousedown', callback);\n\t}, [callback]);\n};","import React, { ReactElement } from 'react';\nimport { server, POST } from '../utils/requests';\nimport url from 'url';\nimport styles from '../css/tournament.module.css';\nimport { TournamentStatus, TournamentSettings } from '../interfaces';\nimport { EditableField } from '../components/';\nimport { MdExitToApp, MdStop, MdPause } from 'react-icons/md';\nimport { IoMdPlay, IoMdGrid } from 'react-icons/io';\nimport { TiFlowSwitch } from 'react-icons/ti';\n\ninterface InfoProps {\n\tstatus: TournamentStatus\n\tsettings: TournamentSettings\n\tupdateTournamentStatus: () => void\n\tround: number\n\ttotalRounds: number | 'Infinity'\n\tcloseTournament: () => void\n\ttoggleCrossTable: () => void\n\n\tlastRoundOverride: boolean\n\tsetLastRound: (override: boolean) => void\n\ttriggerError: (message: string) => void\n\tswitchPairings: () => void\n}\n\nexport default function InfoProps(props: InfoProps): ReactElement {\n\n    let lastRound = false;\n    if (typeof props.lastRoundOverride !== 'undefined') lastRound = props.lastRoundOverride;\n    else lastRound = props.settings.totalRounds === props.status.round;\n\n    let uri = url.resolve(server, ['tournament', props.status.id, 'setName'].join('/'));\n\n    return (\n        <div className={styles.titleBar} style={{\n            gridColumn: '2 /span 1'\n        }}>\n            <div className={styles.row}>\n                <div className={['topBanner', styles.header].join(' ')}>\n                    <EditableField\n                        content={props.status.name}\n                        url={uri}\n                        inputType='text'\n                        handleSubmit={(k: string, v: any) => POST({\n                            url: uri,\n                            data: {\n                                [k]: v\n                            }\n                        })}\n                        additionalStyles={styles}\n                        additionalInputProps={{}}\n                        onSubmitSuccess={(e) => {\n                            props.updateTournamentStatus();\n                            return e;\n                        }}\n                        defaultContent='Unnamed Swiss Tournament'\n                        show={{\n                            submit: true\n                        }}\n                    />\n                </div>\n            </div>\n            <div className={styles.row}>\n                <div className={'topBanner ' + styles.header}>\n                    ID: {props.status.id}\n                </div>\n                <div className={'topBanner ' + styles.header}>\n                    Round: {!props.status.round ? 'Not yet initialised' : props.status.round + ' / ' + (props.totalRounds === 'Infinity' ? '∞' : props.totalRounds)}\n                </div>\n            </div>\n            <div className={styles.row}>\n                <div className={['button', styles.button].join(' ')} onClick={props.closeTournament}>\n\t\t\t\t\t<MdExitToApp /> Exit to menu\n                </div>\n                <div className={['button', styles.button].join(' ')} onClick={() => {\n                    if (props.status.round >= props.settings.totalRounds) props.triggerError('Increase the number of rounds in Settings to continue!')\n                    props.setLastRound(!lastRound);\n                }}>\n\t\t\t\t\t{lastRound ? \n\t\t\t\t\t\t<><IoMdPlay />{' '}Resume tournament</> :\n\t\t\t\t\t\t<><MdPause />{' '}Pause tournament</>\n\t\t\t\t\t}\n                </div>\n\t\t\t</div>\n            <div className={styles.row}>\n                <div className={['button', styles.button].join(' ')} onClick={props.toggleCrossTable}>\n                \t<><IoMdGrid />{' '}Crosstable</>\n                </div>\n                <div className={['button', styles.button].join(' ')} onClick={props.switchPairings}>\n                \t<><TiFlowSwitch />{' '}Switch Pairings</>\n                </div>\n            </div>\n        </div>\n    );\n\n}","import React, { ReactElement, useState, useEffect, useCallback, useMemo, useReducer } from 'react';\nimport styles from '../css/pairings.module.css';\nimport { TournamentStatus, ID, Player, PairingObject } from '../interfaces';\nimport { SinglePairing } from '../components/';\nimport { GET, POST } from '../utils/requests';\nimport { AiOutlineLoading3Quarters } from 'react-icons/ai';\nimport { IoIosSettings } from 'react-icons/io';\nimport { TiThMenu } from 'react-icons/ti';\nimport { PairingDetails } from '../components/SinglePairing';\nimport { TournamentSettings } from '../utils/settings';\n\ninterface PairingsProps {\n\tstatus: TournamentStatus\n\tplayerDict: Map<ID, Player>\n\tupdatePlayerDict: () => void\n    playerDictKey: string\n\tsettings: TournamentSettings\n\n\tid: string\n\tcanTriggerNextRound: boolean\n\tsetDisplayPlayer: (id: string) => void\n\ttoggleSidebar: () => void\n\ttoggleSettings: () => void\n\n\tupdateRound: () => void\n\tsetLastRound: (override: boolean) => void\n\ttoggleCrossTable: () => void\n\tlastRoundOverride: boolean\n\ttriggerConfirm: (message: string, resolve: () => void, reject: () => void) => void\n}\n\nexport default function Pairings(props: PairingsProps): ReactElement {\n\n    const round = useMemo(() => props.status.round, [props.status.round]);\n    \n    const [resultsState, updateResults] = useReducer(() => Math.random().toString(16).slice(2, 9), '');\n\tconst reduceResults = useCallback((state: Map<string, [number | null, number | null]>, {id, W, B}: {\n\t\tid: string\n\t\tW: Player,\n\t\tB: Player\n\t}): Map<string, [number | null, number | null]> => {\n\t\tif (W && B) if (!W.histories[round] || !B.histories[round]) console.log(round, W.histories);\n\t\tstate.set(id, [\n\t\t\tW ? W.histories ? W.histories[round][props.settings.displayPoints] : null : 0,\n\t\t\tB ? B.histories ? B.histories[round][props.settings.displayPoints] : null : 0\n        ]);\n        updateResults({});\n\t\treturn state;\n\t}, [round, props.settings.displayPoints])\n\n\tconst [pairingData, setPairings] = useState([] as PairingObject[]);\n\tconst [results, setResults] = useReducer(reduceResults, new Map() as Map<string, [number | null, number | null]>);\n\tconst [loading, setLoading] = useState(false);\n\n\n\tconst getPairings = useCallback((): Promise<void> => {\n        if (!round) return;\n        if (!props.playerDict.size) return;\n\t\treturn GET({ url: '/tournament/' + props.id + '/getPairings'})\n\t\t\t.then((pairings: PairingObject[]) => {\n\t\t\t\tfor (let [w, b] of pairings) {\n                    setResults({\n                        id: w + '.' + b, \n                        W: props.playerDict.get(w),\n                        B: props.playerDict.get(b)\n                    });\n                }\n\t\t\t\tsetPairings(pairings);\n\t\t\t})\n\t\t\t.catch(console.error);\n\t}, [props.id, setPairings, setResults, round, props.playerDict, props.playerDictKey]);\n\n\tfunction getDisplayName(id: ID, player: Player): string {\n\t\tif (id === 'bye') return 'BYE';\n\t\tif (!player) return id;\n\t\tlet displayName: string;\n\t\tif (props.settings.competitors === 'individual') displayName = [player.firstName, player.lastName].join(' ');\n\t\telse displayName = player.firstName;\n\t\treturn `${displayName} [${player.score}]`;\n\t}\n\t\n\tlet pending = Array.from(results.values())\n\t\t\t.filter(arr => arr.every(v => v === null));\n\t\t\t\n\tconst pairRemaining = useCallback((): Promise<void> => {\n\t\treturn POST({\n\t\t\turl: '/tournament/' + props.id + '/getRestPairings'\n\t\t})\n\t\t\t.then(props.updatePlayerDict)\n\t\t\t.catch(console.error);\n\t}, [getPairings, props.id]);\n\t\t\t\n\tconst triggerNextRound = useCallback((): Promise<void> => {\n\t\tsetLoading(true);\n\t\treturn POST({\n\t\t\turl: '/tournament/' + props.id + '/getNextPairings'\n\t\t})\n\t\t\t.then((pairings: PairingObject[]) => setPairings(pairings))\n\t\t\t.then(() => {\n\t\t\t\tgetPairings();\n\t\t\t\tprops.updatePlayerDict();\n\t\t\t})\n\t\t\t.then(props.updateRound)\n\t\t\t.catch(console.error)\n\t\t\t.finally(() => setLoading(false));\n\t}, [setLoading, setPairings, props.id, getPairings, props.updateRound, setLoading]);\n\n\tconst canPairMore = useMemo((): boolean => {\n\t\tconsole.log(Array.from(props.playerDict.values()).filter(p => p.histories && !p.histories[props.status.round]));\n\t\treturn Array.from(props.playerDict.values()).filter(p => p.histories && !p.histories[props.status.round]).length >= 2;\n\t}, [props.playerDict, props.playerDictKey]);\n\n\tfunction generatePairButton(): ReactElement {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={[styles.nextButton, 'button'].join(' ')}\n\t\t\t\tonClick={pairRemaining}\n\t\t\t>\n\t\t\t\tPair Remaining\n\t\t\t</div>\n\t\t);\n\t}\n\n\tfunction generateNextButton(): ReactElement {\n\t\tlet lastRound: boolean;\n\t\tif (props.status.round >= props.settings.totalRounds) lastRound = true;\n\t\telse if (typeof props.lastRoundOverride !== 'undefined') lastRound = props.lastRoundOverride;\n\t\telse lastRound = false;\n\n\t\treturn loading ? (\n\t\t\t<div\n\t\t\t\tclassName={[styles.nextButton, 'button'].join(' ')}\n\t\t\t>\n\t\t\t\t<AiOutlineLoading3Quarters />\n\t\t\t</div>\n\t\t) : !props.canTriggerNextRound ? (\n\t\t\t<div className={[styles.waitButton].join(' ')}>\n\t\t\t\tMust have at least 2 active players\n\t\t\t</div>\n\t\t) : pending.length > 0 ? (\n\t\t\t<div className={[styles.waitButton].join(' ')} >\n\t\t\t\t{`Awaiting ${pending.length} result${pending.length > 1 ? 's' : ''}`}\n\t\t\t</div>\n\t\t) : lastRound ? (\n\t\t\t<div\n\t\t\t\tclassName={[styles.finishButton, 'button'].join(' ')}\n\t\t\t\tonClick={props.toggleCrossTable}\n\t\t\t>\n\t\t\t\tFinal Standings\n\t\t\t</div>\n\t\t) : (\n\t\t\t<div\n\t\t\t\tclassName={[styles.nextButton, 'button'].join(' ')}\n\t\t\t\tonClick={triggerNextRound}\n\t\t\t>\n\t\t\t\tNext Round\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\tfunction validateForm(form: HTMLFormElement): boolean | string | void {\n\t\tif (form.resultWhite.value === '' && form.resultBlack.value === '') return undefined;\n\t\tif (!Array.from(form).every((input) => (input as HTMLInputElement).validity.valid)) return false;\n\t\tif (!props.settings.gamePointTotal) return true;\n\t\tlet nW = Number(form.resultWhite.value);\n\t\tlet nB = Number(form.resultBlack.value);\n\t\tlet total = props.settings.displayPoints === 'game' ? props.settings.gamePointTotal : 1;\n\t\tif (nW + nB === total) return true;\n\t\treturn 'Setting: sum results to ' + props.settings.gamePointTotal;\n    }\n    \n    const [expanded, setExpanded] = useState('');\n\n\tfunction Listing(): ReactElement[] {\n\t\tlet pairings = [] as ReactElement[];\n        let dict = props.playerDict;\n        let i = 1;\n\t\tfor (let [w, b, gameLinks] of pairingData) {\n\t\n\t\t\tlet [white, black] = [dict.get(w), dict.get(b)];\n\t\t\tlet [wDisplay, bDisplay] = [getDisplayName(w, white), getDisplayName(b, black)];\t\t\t\n\t\t\tlet id = w + '.' + b;\n\t\t\tlet result = results.get(id);\n            if (!result) continue;\n\t\t\tpairings.push(\n\t\t\t\t<div id={id} className={styles.pairing} key={['pairings', w, b].join('.')} >\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={['playerInfo', styles.playerInfo, w === 'bye' ? styles.bye : ''].join(' ')}\n\t\t\t\t\t\tid={w}\n\t\t\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => w === 'bye' ? null : props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n\t\t\t\t\t>{wDisplay}</div>\n                        <SinglePairing\n                            expand={(set: boolean) => setExpanded(set ? id : '')}\n                            expanded={expanded === id}\n                            result={result}\n\t\t\t\t\t\t\ttournamentID={props.id}\n\t\t\t\t\t\t\tinputClassName={styles.inputResult}\n\t\t\t\t\t\t\thidden={{\n\t\t\t\t\t\t\t\tW: w,\n\t\t\t\t\t\t\t\tB: b\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvalidate={validateForm}\n\t\t\t\t\t\t\thandleSubmit={async (e) => {\n                                let form = e.target as HTMLFormElement & {resultWhite: HTMLInputElement, resultBlack: HTMLInputElement};\n\t\t\t\t\t\t\t\tresults.set(id, [Number(form.resultWhite.value), Number(form.resultBlack.value)]);\n\t\t\t\t\t\t\t\tif (form) {\n\t\t\t\t\t\t\t\t\tlet parent = form.parentElement as HTMLDivElement;\n\t\t\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\t\t\tlet nextSibling: HTMLDivElement = parent;\n\t\t\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\t\t\tnextSibling = nextSibling.nextSibling as HTMLDivElement;\n\t\t\t\t\t\t\t\t\t\t} while (nextSibling && !nextSibling.getElementsByTagName('form')[0])\n\t\t\t\t\t\t\t\t\t\tif (nextSibling) {\n\t\t\t\t\t\t\t\t\t\t\tlet newForm = nextSibling.getElementsByTagName('form')[0] as HTMLFormElement;\n\t\t\t\t\t\t\t\t\t\t\tlet newInput = newForm.getElementsByTagName('input')[0] as HTMLInputElement;\n\t\t\t\t\t\t\t\t\t\t\tif (newInput) newInput.focus();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n                                updateResults({});\n\t\t\t\t\t\t\t\tprops.updatePlayerDict();\n\t\t\t\t\t\t\t\treturn e;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={['playerInfo', styles.playerInfo, styles.playerInfo, b === 'bye' ? styles.bye : ''].join(' ')}\n\t\t\t\t\t\tid={b}\n\t\t\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => b === 'bye' ? null : props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n\t\t\t\t\t>{bDisplay}</div>\n                </div>,\n                <PairingDetails\n\t\t\t\t\tkey={['pairingDetails', w, b].join('.')}\n                    tournamentID={props.status.id}\n                    id={id}\n\t\t\t\t\tboard={i}\n\t\t\t\t\tround={props.status.round}\n                    className={['dropdown', styles.pairing].join(' ')}\n                    expanded={expanded === id}\n                    gameLinks={gameLinks}\n                    individual={props.settings.competitors === 'individual'}\n\t\t\t\t\tupdate={getPairings}\n\t\t\t\t\tupdatePlayerDict={props.updatePlayerDict}\n\t\t\t\t\ttriggerConfirm={props.triggerConfirm}\n                />\n            );\n            i++;\n\t\t}\n\t\treturn pairings;\n\t}\n\n\tuseEffect(() => {\n\t\tgetPairings();\n    }, [getPairings]);\n    \n    const listing = useMemo(Listing, [props.playerDict, pairingData, getDisplayName, results, resultsState, props.updatePlayerDict, getPairings, props.setDisplayPlayer, setResults, props.playerDictKey]);\n\n\treturn (\n        <>\n            <div className={styles.pairings}>\n                <div className={['topBanner', styles.topBanner].join(' ')}>\n                    Pairings\n                </div>\n\t\t\t\t<div className={[styles.pairingContainer, 'scrollable'].join(' ')}>\n\t\t\t\t\t<div className={[styles.pairingWrapper].join(' ')}>\n\t\t\t\t\t\t{listing}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </div>\n            <div className={['bottomBanner', styles.statusBar].join(' ')}>\n                <div className={['button'].join(' ')} onClick={props.toggleSidebar}>\n                    <TiThMenu />\n                </div>\n\t\t\t\t<div style={{display: 'grid', gridAutoFlow: 'column', gridAutoColumns: '1fr', width: '100%'}}>\n\t\t\t\t\t{canPairMore ? generatePairButton() : null}\n\t\t\t\t\t{generateNextButton()}\n\t\t\t\t</div>\n                <div className={['button'].join(' ')} onClick={props.toggleSettings}>\n                    <IoIosSettings />\n                </div>\n            </div>\n        </>\n\t);\n\n}","import React, { ReactElement, useState, useEffect, useCallback, useMemo, useReducer } from 'react';\nimport url from 'url';\nimport styles from '../css/pairings.module.css';\nimport componentStyles from '../css/components.module.css';\nimport { TournamentStatus, ID, Player, PairingObject } from '../interfaces';\nimport { GET, POST, server } from '../utils/requests';\nimport { AiOutlineMinus } from 'react-icons/ai';\nimport { TournamentSettings } from '../utils/settings';\n\ninterface PairingsProps {\n\tstatus: TournamentStatus\n\tplayerDict: Map<ID, Player>\n\tupdatePlayerDict: () => {}\n\tplayerDictKey: string\n\tsettings: TournamentSettings\n\ttriggerConfirm: (message: string, resolve: () => void, reject: () => void) => void\n\tid: string\n\tswitchPairings: () => void\n}\n\nexport default function Switch(props: PairingsProps): ReactElement {\n\n\tconst round = useMemo(() => props.status.round, [props.status.round]);\n\n\tconst [pairingData, setPairings] = useState([] as PairingObject[]);\n\tconst [selected, setSelected] = useState([]);\n\tconst [select, deselect] = [\n\t\tuseCallback((id: string) => selected.length < 2 && !selected.includes(id) ? setSelected([...selected, id]) : null, [selected, setSelected]),\n\t\tuseCallback((id: string) => {\n\t\t\tif (!selected.includes(id)) return;\n\t\t\tlet action = selected.slice(0);\n\t\t\taction.splice(selected.indexOf(id), 1);\n\t\t\treturn setSelected(action);\n\t\t}, [selected, setSelected])\n\t];\n\n\tconst getPairings = useCallback((): Promise<void> => {\n\t\tif (!round) return;\n\t\tif (!props.playerDict.size) return;\n\t\treturn GET({ url: '/tournament/' + props.id + '/getPairings' })\n\t\t\t.then((pairings: PairingObject[]) => {\n\t\t\t\tsetPairings(pairings);\n\t\t\t})\n\t\t\t.catch(console.error);\n\t}, [props.id, setPairings, round, props.playerDict, props.playerDictKey]);\n\n\tconst getDisplayName = useCallback((id: ID): string => {\n\t\tif (id === 'bye') return 'BYE';\n\t\tlet player = props.playerDict.get(id);\n\t\tif (!player) return id;\n\t\tlet displayName: string;\n\t\tif (props.settings.competitors === 'individual') displayName = [player.firstName, player.lastName].join(' ');\n\t\telse displayName = player.firstName;\n\t\treturn `${displayName} [${player.score}]`;\n\t}, [props.playerDict]);\n\n\tconst triggerPairingSwap = useCallback(() => {\n\t\tprops.triggerConfirm(\n\t\t\t`Really swap pairings ${getDisplayName(selected[0])} and ${getDisplayName(selected[1])}?`,\n\t\t\t() => POST({\n\t\t\t\turl: url.resolve(server, ['tournament', props.status.id, 'switchPairings'].join('/')),\n\t\t\t\tdata: {\n\t\t\t\t\tswapX: selected[0],\n\t\t\t\t\tswapY: selected[1],\n\t\t\t\t\tround: props.status.round\n\t\t\t\t}\n\t\t\t}).then(() => {\n\t\t\t\tsetSelected([]);\n\t\t\t\tprops.updatePlayerDict();\n\t\t\t}),\n\t\t\t() => setSelected([])\n\t\t)\n\t}, [selected, props.status.id, props.status.round])\n\n\tfunction generateNextButton(): ReactElement {\n\t\tlet left = 2 - selected.length;\n\t\treturn left ? (\n\t\t\t<div className={[styles.waitButton].join(' ')} >\n\t\t\t\t{`Select ${left} more pairing${left > 1 ? 's' : ''}`}\n\t\t\t</div>\n\t\t) : (\n\t\t\t<div\n\t\t\t\tclassName={[styles.nextButton].join(' ')}\n\t\t\t\tonClick={triggerPairingSwap}\n\t\t\t>\n\t\t\t\tSwap pairings\n\t\t\t</div>\n\t\t);\n\t}\n\n\tfunction Listing(): ReactElement[] {\n\t\tlet pairings = [] as ReactElement[];\n\t\tlet dict = props.playerDict;\n\t\tfor (let [w, b] of pairingData) {\n\t\t\tlet [wDisplay, bDisplay] = [getDisplayName(w), getDisplayName(b)];\n\t\t\tlet id = w + '.' + b;\n\t\t\tpairings.push(\n\t\t\t\t<div id={id} className={styles.pairing} key={['pairings', w, b].join('.')} >\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={['playerInfo', styles.playerInfo, w === 'bye' ? styles.bye : ''].join(' ')}\n\t\t\t\t\t\tid={w}\n\t\t\t\t\t\tonClick={() => !selected.includes(w) ? select(w) : deselect(w)}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: selected.includes(w) ? 'darkblue' : ''\n\t\t\t\t\t\t}}\n\t\t\t\t\t>{wDisplay}</div>\n\t\t\t\t\t<div className={componentStyles.resultsBridge}>\n\t\t\t\t\t\t<div className={componentStyles.setResult}>{'\\u200b'}</div>\n\t\t\t\t\t\t<div className={componentStyles.neutral} style={{ cursor: 'default' }}>\n\t\t\t\t\t\t\t<AiOutlineMinus />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={componentStyles.setResult}>{'\\u200b'}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={['playerInfo', styles.playerInfo, styles.playerInfo, b === 'bye' ? styles.bye : ''].join(' ')}\n\t\t\t\t\t\tid={b}\n\t\t\t\t\t\tonClick={() => !selected.includes(b) ? select(b) : deselect(b)}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: selected.includes(b) ? 'darkblue' : ''\n\t\t\t\t\t\t}}\n\t\t\t\t\t>{bDisplay}</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn pairings;\n\t}\n\n\tuseEffect(() => {\n\t\tgetPairings();\n\t}, [getPairings]);\n\n\tconst listing = useMemo(Listing, [selected, pairingData, getDisplayName, props.updatePlayerDict, getPairings, props.playerDictKey]);\n\n\treturn (\n\t\t<>\n\t\t\t<div className={styles.pairings}>\n\t\t\t\t<div className={['topBanner', styles.topBanner].join(' ')}>\n\t\t\t\t\tSwitch Pairing Mode\n                </div>\n\t\t\t\t<div className={[styles.pairingContainer, 'scrollable'].join(' ')}>\n\t\t\t\t\t<div className={[styles.pairingWrapper].join(' ')}>\n\t\t\t\t\t\t{listing}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={['bottomBanner', styles.statusBar].join(' ')}>\n\t\t\t\t<div className={['button'].join(' ')} style={{ backgroundColor: '#373737', cursor: 'default' }}>\n\t\t\t\t\t{'\\u200b'}\n\t\t\t\t</div>\n\t\t\t\t{generateNextButton()}\n\t\t\t\t<div className={['button'].join(' ')} style={{ backgroundColor: '#373737', cursor: 'default' }}>\n\t\t\t\t\t{'\\u200b'}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n\n}","import React, { ReactElement } from 'react';\n\nexport function Bottom(...arr: [\n    (() => Promise<void> | void),\n    ReactElement | string,\n    string\n][]): ReactElement[] {\n    let buttons = [] as ReactElement[];\n    for (let item of arr) {\n        if (!item) continue;\n        let [func, icon, name] = item;\n        buttons.push(<div key={['button', name.toLowerCase()].join('.')} onClick={func} className='button'>\n            {icon}{' '}{name}\n        </div>);\n    }\n    return buttons;\n}","import React, { ReactElement, useEffect, CSSProperties, useState, ReactNode, useRef, useCallback } from 'react';\nimport { AiOutlineLeft } from 'react-icons/ai';\nimport styles from '../css/components.module.css';\n\ninterface SectionProps {\n    children?: ReactNode\n    header: string | ReactElement\n    useInternalState?: boolean\n    value?: string\n    expanded?: boolean\n    setExpanded?: (state: boolean, action: string) => void\n    style?: CSSProperties\n    id?: string\n}\n\nexport function SectionBreak() {\n\n    return (\n        <div className={styles.sectionContainer}>\n            <div className={[styles.sectionHeader, 'topBanner'].join(' ')}>\n                <div className={styles.sectionHeaderText} />\n            </div>\n        </div>\n    );\n}\n\nexport default function CollapsableSection(props: SectionProps) {\n\n    const [internalExpanded, setExpanded] = useState(props.expanded !== undefined ? props.expanded : true);\n    const [height, setHeight] = useState(0);\n\n    const innerDiv = useRef() as React.RefObject<HTMLDivElement>;\n\n\tlet expanded = props.useInternalState ? internalExpanded : props.expanded;\n\t\n\tconst updateHeight = useCallback(() => {\n\t\tif (!innerDiv.current) return;\n\t\tsetHeight(expanded ? innerDiv.current.getBoundingClientRect().height : 0);\n\t}, [setHeight, expanded, innerDiv.current])\n\tuseEffect((): void => {\n\t\tupdateHeight();\n\t}, [updateHeight, props.children]);\n\tuseEffect(() => {\n\t\tlet x;\n\t\tfor (let child of Array.from(innerDiv.current.children)) {\n\t\t\tif ('onload' in child) x = (child as HTMLImageElement).onload = updateHeight;\n\t\t\tfor (let grandChild of Array.from(child.children)) {\n\t\t\t\tif ('onload' in grandChild) x = (grandChild as HTMLImageElement).onload = updateHeight;\n\t\t\t}\n\t\t}\n\t}, [innerDiv.current, updateHeight])\n\n    return (\n        <div className={styles.sectionContainer} style={props.style}>\n            <div className={[styles.sectionHeader, 'topBanner'].join(' ')}>\n                <div className={styles.sectionHeaderText} onClick={() => props.useInternalState ? setExpanded(!expanded) : props.setExpanded(!expanded, props.value)}>\n                    {props.header}\n                </div>\n                {!props.children ?\n                    null : \n                    <div className={styles.sectionToggle} onClick={() => props.useInternalState ? setExpanded(!expanded) : props.setExpanded(!expanded, props.value)}>\n                        <AiOutlineLeft style={{\n                            transform: expanded ? 'rotate(-90deg)' : 'rotate(0deg)'\n                        }}/>\n                    </div>\n                }\n            </div>\n            <div className={[styles.sectionListWrapper, expanded ? styles.expanded : ''].join(' ')} style={{\n                height\n            }}>\n                <div ref={innerDiv} className={[styles.sectionList].join(' ')} id={props.id}>\n                    {props.children}\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { ReactElement, FormEvent, useState, useCallback, useMemo, useEffect, createRef } from 'react';\nimport CSV from 'papaparse';\nimport url from 'url';\nimport { Player, TournamentPlayers, ID, TournamentStandings, TournamentSettings } from '../interfaces';\nimport { GET, POST, server, FORM} from '../utils/requests';\n\nimport styles from '../css/sidebar.module.css';\nimport { AiFillEdit, AiOutlineClose, AiOutlineCheck } from 'react-icons/ai';\nimport { MdRefresh, MdMenu } from 'react-icons/md';\nimport { IoMdClose } from 'react-icons/io';\nimport { Bottom } from '../components/Buttons';\nimport CollapsableSection, { SectionBreak } from '../components/CollapsableSection';\n\ninterface SidebarProps {\n\tplayerDict: Map<ID, Player>\n\tplayerDictKey: string //required to force a reload\n\tupdatePlayerDict: (force?: boolean) => void\n    setPlayerDict: (value: {\n        id?: string;\n        player?: Player;\n        players?: Player[];\n        hash?: string;\n    }) => void\n\tid: string\n\tsettings: TournamentSettings\n\tsetDisplayPlayer: (id: string) => void\n    checkIfEnoughPlayers: (reload?: boolean) => void\n    togglePasteInput: () => void\n}\n\ninterface ActiveProps {\n\tplayer: Player\n\n\teditPlayer: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n\tactivatePlayer: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n    clearPlayer: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n    allowNewPlayers: boolean\n    setDisplayPlayer: (id: string) => void\n\n\tround: number\n\trequireLastName: boolean\n}\n\nexport function ActivePlayer(props: ActiveProps): ReactElement {\n\n\tconst displayName = props.requireLastName ?\n\t\t[props.player.firstName, props.player.lastName].join(' ') :\n\t\tprops.player.firstName;\n\t\n\treturn (\n\t\t<div id={props.player.id} className={styles.playerLine}>\n\t\t\t<div\n\t\t\t\tclassName={['playerInfo', styles.playerInfo, !props.player.active ? styles.playerInactive : ''].join(' ')}\n\t\t\t\tstyle={{\n\t\t\t\t\tgridColumn: props.round && !props.allowNewPlayers ? '1 / span 3' : undefined\n\t\t\t\t}}\n\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => props.setDisplayPlayer((e.target as HTMLDivElement).parentElement.id)}\n\t\t\t>\n\t\t\t\t{displayName} ({props.player.rating.toString()}) {props.round && (props.player.played < props.round) ? '*' : ''}\n\t\t\t</div>\n\t\t\t{props.round && !props.allowNewPlayers ? null : <>\n\t\t\t\t<button name='edit' className={styles.edit} onClick={(props.editPlayer)} >\n\t\t\t\t\t<AiFillEdit />\n\t\t\t\t</button>\n\t\t\t\t{props.player.active ?\n\t\t\t\t\t<button name='cancel' className={styles.cancel} onClick={(props.clearPlayer)}>\n\t\t\t\t\t\t<AiOutlineClose />\n\t\t\t\t\t</button> :\n\t\t\t\t\t<button name='active' className={styles.activate} onClick={(props.activatePlayer)}>\n\t\t\t\t\t\t<AiOutlineCheck />\n\t\t\t\t\t</button>\n\t\t\t\t}\n\t\t\t</>}\n\t\t</div>\n\t);\n\n}\n\ninterface FormProps {\n\tid: string\n\tplayer?: Player,\n\trequireLastName: boolean\n\tonSubmit: (e: React.FormEvent<HTMLFormElement>) => Promise<void>\n\tonKeyDown?: (e: React.KeyboardEvent<HTMLFormElement>) => void\n    handlePaste?: (e: React.ClipboardEvent<HTMLInputElement>) => void\n    action: string\n}\n\nexport function EditableForm(props: FormProps) {\n\n    const firstInput = createRef() as React.RefObject<HTMLInputElement>;\n    const [focus, mustFocus] = useState(false);\n\n    useEffect(() => {\n        if (!focus && !props.player) return;\n        if (!firstInput.current) return;\n        firstInput.current.focus();\n    }, [firstInput, props.player])\n\t\n\treturn (\n\t\t<div className={styles.scoreSection}>\n\t\t\t<form\n\t\t\t\ttarget='_self'\n\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\tonSubmit={(e) => props.onSubmit(e).then(() => mustFocus(true))}\n\t\t\t\tmethod='POST'\n\t\t\t\taction={props.action}\n\t\t\t>\n                <input type='text' className={styles.input} name='firstName' required style={{width: props.requireLastName ? '25%' : '65%'}}\n                    ref={firstInput}\n\t\t\t\t\tplaceholder={props.player ? undefined : props.requireLastName ? 'First name' : 'Team name'}\n\t\t\t\t\tdefaultValue={props.player?.firstName}\n\t\t\t\t\tonPaste={props.handlePaste}\n\t\t\t\t/>\n\t\t\t\t<input type='text' className={styles.input} name='lastName' required={props.requireLastName} style={{width: '40%', display: props.requireLastName ? 'block' : 'none'}}\n\t\t\t\t\tplaceholder={props.player ? undefined : 'Last name'}\n\t\t\t\t\tdefaultValue={props.player?.lastName} \n\t\t\t\t/>\n\t\t\t\t<input type='number' className={styles.input} min={0} max={3200} name='rating' required style={{width: '20%'}}\n\t\t\t\t\tplaceholder={props.player ? undefined : props.requireLastName ? 'Rating' : 'Av. Rating'}\n\t\t\t\t\tdefaultValue={props.player?.rating}\n\t\t\t\t/>\n\t\t\t\t<input type='hidden' name='id' value={props.player?.id} required/>\n\t\t\t\t<button tabIndex={-1} className={styles.submit}>\n\t\t\t\t\t<AiOutlineCheck />\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default function Sidebar(props: SidebarProps): ReactElement {\n\n\tconst [round, setRound] = useState(0);\n\tconst [players, setPlayersRaw] = useState({} as TournamentPlayers);\n\tconst [linkedState, setLinkedState] = useState({} as TournamentStandings);\n\n\t/** UPDATES SECTION */\n\n\tconst updatePlayerState = useCallback((): Promise<TournamentStandings> => {\n\t\tif (!props.id) return Promise.resolve({} as TournamentStandings);\n\t\treturn GET({ url: '/tournament/' + props.id + '/getState' })\n\t\t\t.then(({round, players}: {round: number, players: TournamentStandings}) => {\n\t\t\t\tsetLinkedState(players);\n\t\t\t\tsetRound(round);\n\t\t\t\treturn players;\n\t\t\t});\n\t}, [props.id]);\n\n\t/**\n\t * The fundamental method. Called everytime there's a change to the player list. The backbone of this element.\n\t */\n\tconst setPlayers = useCallback(async (refresh?: boolean | void): Promise<void> => {\n\t\tlet state = refresh !== false ? await updatePlayerState() : linkedState;\n\t\tif (!state) return Promise.resolve();\n\t\tlet players = {} as TournamentPlayers;\n\t\tfor (let [k, v] of Object.entries(state)) {\n\t\t\tplayers[k] = v.map((id: string) => {\n\t\t\t\tlet player = props.playerDict.get(id);\n\t\t\t\t//if (!player) console.error('Unmatched ID: ' + id);\n\t\t\t\treturn player;\n\t\t\t}).sort((a: Player, b: Player) => b.rating - a.rating).filter((v) => v);\n\t\t}\n\t\tsetPlayersRaw(players);\n\t\tprops.checkIfEnoughPlayers(false);\n\t}, [updatePlayerState, props.playerDict, props.checkIfEnoughPlayers, linkedState]);\n\n\t/** CALLBACK SECTION */\n\t\n\tconst updatePlayer = useCallback((id: ID): Promise<Player> => {\n\t\treturn GET({\n\t\t\turl: '/tournament/' + props.id + '/fetchPlayer',\n\t\t\tparams: { id }\n\t\t})\n\t\t\t.then((player: Player) => {\n\t\t\t\tprops.setPlayerDict({player});\n\t\t\t\treturn player;\n\t\t\t});\n\t}, [props.id, props.setPlayerDict]);\n\n\tconst activatePlayer = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n\t\tlet button = e.target as HTMLButtonElement;\n\t\tif (button.constructor.name !== 'HTMLButtonElement') return;\n        let id = (button.parentNode as HTMLDivElement).id;\n\t\tPOST({\n\t\t\turl: '/tournament/' + props.id + '/activatePlayer',\n\t\t\tdata: { id }\n\t\t})\n\t\t\t.then(() => updatePlayer(id))\n\t\t\t.catch(console.error);\n\t}, [props.id, updatePlayer]);\n\n\t/**\n\t * Clears a single page. Called when the 'X' button is hit next to a player\n\t */\n\tconst clearPlayer = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n\t\tlet button = e.target as HTMLButtonElement;\n\t\tif (button.constructor.name !== 'HTMLButtonElement') return;\n\t\tlet id = (button.parentNode as HTMLDivElement).id;\n\t\tPOST({\n\t\t\turl: '/tournament/' + props.id + '/clearPlayer',\n\t\t\tdata: { id }\n\t\t})\n\t\t\t.then((data: string) => {\n                if (data === 'inactive') updatePlayer(id);\n                else props.setPlayerDict({id});\n            })\n\t\t\t.catch(console.error);\n\t}, [updatePlayer, props.id]);\n\n\t/**\n\t * Clears all players. Called when the 'X' button is pressed at the bottom of the sidebar\n\t */\n\tconst clearPlayerList = useCallback(async (): Promise<void> => {\n\t\tawait POST({ url: '/tournament/' + props.id + '/clearPlayers' }).catch(console.error);\n\t\tprops.checkIfEnoughPlayers();\n\t}, [props.id, props.checkIfEnoughPlayers]);\n\t\n\tconst requireLastName = useMemo(() => props.settings.competitors === 'individual', [props.settings.competitors]);\n\n\t/* RENDERING SECTION */\n\n\tconst handlePaste = useCallback((e: React.ClipboardEvent<HTMLInputElement>) => {\n\t\tlet text = e.clipboardData.getData('text').toString();\n\t\tif (!text.trim()) return;\n\t\tif (!text.split('\\n').length && text.split(',').length && text.split('\\t').length) return;\n\t\te.preventDefault();\n\t\tlet json = CSV.parse(text, {\n\t\t\tdelimitersToGuess: [',', '\\t'],\n\t\t\tdynamicTyping: true,\n\t\t\tfastMode: true\n\t\t} as CSV.ParseConfig) as CSV.ParseResult;\n\t\t//if (json.data.length > 100) return console.error('Can\\'t paste more than 100 players at once!');\n\t\tlet data = json.data.map((row) => {\n\t\t\tlet [firstName, lastName, rating]: [string, string, number] = row;\n\t\t\tif (!requireLastName) [firstName, rating, lastName] = [...row, ''];\n\t\t\tif (!firstName || (!lastName && requireLastName) || rating === null || rating === undefined) return null;\n\t\t\ttry {\n\t\t\t\tif (typeof firstName !== 'string') throw [firstName, 'string'].join(',');\n\t\t\t\tif (typeof lastName !== 'string' && requireLastName) throw [lastName, 'string'].join(',');\n\t\t\t\tif (typeof rating !== 'number') throw [rating, 'number'].join(',');\n\t\t\t\treturn {firstName, lastName, rating};\n\t\t\t} catch (error) {\n\t\t\t\tif (!text.split('\\n').length) return null;\n\t\t\t\tlet e = error.split(',');\n\t\t\t\tconsole.error(new TypeError('Bad input on row ' + row.join(',') + '\\n' + e[0] + ' is not type ' + e[1]));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t})\n\t\t\t.filter(r => r);\n\t\tPOST({\n\t\t\turl: 'tournament/' + props.id + '/appendPlayers',\n\t\t\tdata\n\t\t})\n\t\t\t.then(() => Promise.all([props.updatePlayerDict(), setPlayers()]));\n\t}, [props.id, requireLastName, props.updatePlayerDict, setPlayers]);\n\n\tconst Forms = useMemo((): JSX.Element[] => {\n\n\t\tlet forms = [] as JSX.Element[];\n\t\t\n\t\tfor (let i = 0; i < Math.max(1, 10 - Object.values(players).reduce((acc: number, curr: Player[]) => acc += curr.length, 0)); i++) {\n\t\t\tforms.push(\n\t\t\t\t<EditableForm\n\t\t\t\t\tkey={['newPlayerForm', i].join('.')}\n\t\t\t\t\tid={props.id}\n\t\t\t\t\tplayer={null}\n\t\t\t\t\trequireLastName={requireLastName}\n\t\t\t\t\tonSubmit={(e: FormEvent<HTMLFormElement>): Promise<void> => FORM(e)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tlet form = e.target as HTMLFormElement;\n\t\t\t\t\t\t\tform.reset();\n\t\t\t\t\t\t})\n                        .then(() => props.updatePlayerDict())\n                    }\n                    handlePaste={i ? undefined : handlePaste}\n                    action={url.resolve(server, ['tournament', props.id, 'appendPlayer'].join('/'))}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn forms;\n    }, [props.updatePlayerDict, props.id, requireLastName, players, handlePaste]);\n    \n    function Entry(entryProps: { player: Player }): ReactElement {\n\n        const [edit, setEdit] = useState(false);\n        const [player, setPlayer] = useState(entryProps.player);\n\n        if (edit) return <EditableForm\n            id={props.id}\n            requireLastName={requireLastName}\n            player={player}\n            onKeyDown={(e: React.KeyboardEvent<HTMLFormElement>) => {\n                const ESCAPE_KEY = 27;\n                if (e.keyCode !== ESCAPE_KEY) return;\n                setEdit(false);\n            }}\n            onSubmit={async (e: FormEvent<HTMLFormElement>): Promise<void> => FORM(e)\n                .then(async () => {\n                    let newPlayer = await updatePlayer(player.id);\n                    setPlayer(newPlayer);\n                    setEdit(false);\n                })\n            }\n            action={url.resolve(server, ['tournament', props.id, 'editPlayer'].join('/'))}\n        />\n\n        return <ActivePlayer\n            player={player}\n            round={round}\n            requireLastName={requireLastName}\n            editPlayer={() => setEdit(true)}\n            activatePlayer={activatePlayer}\n            clearPlayer={clearPlayer}\n            allowNewPlayers={props.settings.allowNewPlayers}\n            setDisplayPlayer={props.setDisplayPlayer}\n        />\n    }\n\n\tconst List = useMemo((): ReactElement[] => {\n\t\tlet list = [] as ReactElement[];\n\t\tfor (let i = round; i >= 0; i-= 0.5) {\n\t\t\tlet score = i.toString();\n            if (!players[score] || !players[score].length) continue;\n            let section = <CollapsableSection\n                key={['sidebar', 'round', score].join('.')}\n                header={score + ' points'}\n                useInternalState={true}\n                id={['container', score].join('.')}\n            >\n                {players[score].map((p) => <Entry key={p.id} player={p} />)}\t\n            </CollapsableSection>\n            list.push(section);\n\t\t}\n\t\treturn list;\n    }, [round, players]);\n\n    useEffect(() => {\n        if (!props.playerDict.size) return;\n        setPlayers();\n        props.checkIfEnoughPlayers(false);\n    }, [props.playerDictKey, props.checkIfEnoughPlayers]);\n\n\treturn (\t\t\n        <>\t\n            <div className={styles.sidebar}>\n                <div className={styles.topBanner}>\n                    Tournament Players\n                </div>\t\n                <div className={['scrollable', styles.playersSection].join(' ')}>\n                    {!List.length ? <div className={styles.scoreSection}>\n                        <div className={styles.playerLine}>\n                            <div className={styles.sectionHeader}>\n                                {List.length ? 'Player List' :'No players added yet'}\n                            </div>\n                        </div>\n                    </div> : null}\n                    {List}\n                    {round && !props.settings.allowNewPlayers ? null :\n                        <div className={styles.scoreSection}>\n                            {Forms}\n                        </div>\n                    }\n                    <SectionBreak />\n                </div>\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                {Bottom(\n                    [async () => {\n                        props.togglePasteInput();\n                    }, <MdMenu />, 'Paste'],\n                    [async () => {\n                        props.updatePlayerDict(true);\n                    }, <MdRefresh />, 'Refresh'],\n                    round === 0 ? [async () => { /*\n                        for (let form of Object.values(this.refs)) {\n                            if (form.constructor.name !== 'HTMLFormElement') continue;\n                            (form as HTMLFormElement).reset();\n                        }*/\n                        if (round !== 0) return;\n                        await clearPlayerList();\n                        props.updatePlayerDict();\n                        setPlayers();\n                    }, <IoMdClose />, 'Close'] : null\n                )}\n            </div>\n        </>\n\t);\n};","import React, { ReactElement, useCallback, useState, useEffect, useMemo, createRef, FormEvent } from 'react';\nimport { GET, server, POST } from '../utils/requests';\nimport { Player, TournamentSettings, ID, History, PairingObject } from '../interfaces';\nimport url from 'url';\n\nimport styles from '../css/profile.module.css';\nimport sidebarStyles from '../css/sidebar.module.css';\nimport { IoMdClose } from 'react-icons/io';\nimport { Bottom } from '../components/Buttons';\nimport CollapsableSection, { SectionBreak } from '../components/CollapsableSection';\nimport { AiOutlineCheck, AiOutlineClose } from 'react-icons/ai';\nimport { AxiosRequestConfig } from 'axios';\n\ninterface ActiveProps {\n\tplayer: Player\n    clearClash: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n    setDisplayPlayer: (id: string) => void\n\trequireLastName: boolean\n}\n\nexport function ActivePlayer(props: ActiveProps): ReactElement {\n\n\tconst displayName = props.requireLastName ?\n\t\t[props.player.firstName, props.player.lastName].join(' ') :\n\t\tprops.player.firstName;\n\t\n\treturn (\n\t\t<div id={props.player.id} className={[sidebarStyles.playerLine, styles.playerLine].join(' ')}>\n\t\t\t<div\n\t\t\t\tclassName={['playerInfo', sidebarStyles.playerInfo].join(' ')}\n\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => props.setDisplayPlayer((e.target as HTMLDivElement).parentElement.id)}\n\t\t\t>\n\t\t\t\t{displayName}\n\t\t\t</div>\n\t\t\t{\n                <button name='cancel' className={[sidebarStyles.cancel, styles.cancel].join(' ')} onClick={(props.clearClash)}>\n                    <AiOutlineClose />\n                </button>\n            }\n\t\t</div>\n\t);\n\n}\n\ninterface FormProps {\n\tid: string\n\tonSubmit: (e: React.FormEvent<HTMLFormElement>) => Promise<void>\n    action: string\n    player: Player\n    players: Player[]\n    getDisplayName: (player: string) => string\n}\n\nexport function SingleClash(props: FormProps) {\n\n    const firstInput = createRef() as React.RefObject<HTMLInputElement>;\n    const [focus, mustFocus] = useState(false);\n\n    useEffect(() => {\n        if (!focus) return;\n        if (!firstInput.current) return;\n        firstInput.current.focus();\n    }, [firstInput, focus]);\n\n    const handleInput = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n        let input = e.target as HTMLInputElement;\n        let text = input.value;\n        if (!text.trim()) return;\n        let length = text.length;\n        let choices = props.players.filter(p => p.id !== props.player.id && props.getDisplayName(p.id).toLowerCase().startsWith(text.toLowerCase()));\n        let firstChoice = choices[0];\n        if (!firstChoice) return;\n        let autofill = props.getDisplayName(firstChoice.id);\n        input.value = autofill;\n        input.select();\n        input.setSelectionRange(length, autofill.length, 'forward');\n    }, [props.players])\n\t\n\treturn (\n\t\t<div className={styles.scoreSection}>\n\t\t\t<form\n\t\t\t\ttarget='_self'\n\t\t\t\tonSubmit={(e) => props.onSubmit(e).then(() => mustFocus(true))}\n\t\t\t\tmethod='POST'\n\t\t\t\taction={props.action}\n\t\t\t>\n                <input type='text' className={[sidebarStyles.input, styles.input].join(' ')} name='oppName' required\n                    placeholder='Opponent name'\n                    onInput={handleInput}\n                    autoComplete={'off'}\n\t\t\t\t/>\n\t\t\t\t<button tabIndex={-1} className={sidebarStyles.submit}>\n\t\t\t\t\t<AiOutlineCheck />\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\ninterface ProfileProps {\n\tid: string\n\tplayerID: string\n\tsetDisplayPlayer: (id: string) => void\n\tplayerDict: Map<ID, Player>\n\tmodifyPlayerDict: (p: Player, hash: string) => void\n\tsettings: TournamentSettings\n\tplayerDictKey?: string\n}\n\nexport default function Profile(props: ProfileProps): ReactElement {\n    \n    const [playerID, setPlayerID] = useState('');\n    const [player, setPlayer] = useState(null as Player);\n\n    const requireLastName = useMemo(() => props.settings.competitors === 'individual', [props.settings.competitors]);\n\n\tconst updatePlayerFromProps = (refetch?: boolean) => {\n\t\tsetPlayerID(playerID);\t\t\n\t\tif (!props.playerID) {\n\t\t\tsetPlayer(null as Player);\n\t\t\treturn;\n\t\t}\n\t\tif (refetch === false) {\n\t\t\tsetPlayer(props.playerDict.get(props.playerID));\n\t\t} else {\n\t\t\treturn GET({\n\t\t\t\turl: '/tournament/' + props.id + '/fetchPlayer',\n\t\t\t\tparams: {\n\t\t\t\t\tid: props.playerID\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then((_player: Player) => {\n\t\t\t\t\tif (!_player.histories[0]) _player.histories[0] = null;\n\t\t\t\t\tsetPlayer(_player);\n\t\t\t\t});\n\t\t}\n\t}\n\n\tconst getNameFromPlayer = useCallback((_player: Player): string  =>{\n\t\tif (!_player) return '\\u200b';\n\t\tif (requireLastName) return [_player.firstName, _player.lastName].join(' ');\n\t\telse return _player.firstName;\n\t}, [requireLastName]);\n    \n    useEffect(() => {\n        updatePlayerFromProps();\n    }, [props.playerID, props.playerDictKey])\n\n\tconst getDisplayName = useCallback((id: ID): string => {\n        if (!id) return '\\u200b';\n\t\tif (id === 'bye') return 'BYE';\n\t\tlet opp = props.playerDict.get(id);\n\t\tif (!opp) return id;\n\t\tlet displayName: string;\n\t\tif (requireLastName) displayName = [opp.firstName, opp.lastName].join(' ');\n\t\telse displayName = opp.firstName;\n\t\treturn displayName;\n    }, [props.playerDict, requireLastName]);\n    \n    const renderEntry = useCallback(([k, v]: [string, any], i: number): ReactElement => {\n        if (k === 'Playing' && v) {\n            return (\n                <div className={styles.row} key={['row', i].join('.')}>\n                    <div className='fieldBox'>{k + ':'}</div>\n                    <div\n                        className='playerInfo'\n                        id={v as string}\n                        onClick={(e: React.MouseEvent<HTMLDivElement>) => props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n                    >{getDisplayName(v)}</div>\n                </div>\n            );\n        } else {\n            return (\n                <div className={styles.row} key={['row', i].join('.')}>\n                    <div className='fieldBox'>{k + ':'}</div>\n                    <div className='fieldBox'>{v !== null && v!== '' ? v : '\\u200b'}</div>\n                </div>\n            );\n        }\n    }, [props.setDisplayPlayer, getDisplayName]);    \n\n    const [clashes, setClashes] = useState([] as PairingObject[]);\n\n    const updateClashes = useCallback(async () => {\n        if (!player || !player.id) return;\n        GET({\n            url: '/tournament/' + props.id + '/fetchClashes',\n            params: { id: player.id }\n        })\n            .then(setClashes)\n    }, [props.id, setClashes, player]);\n    const clearClash = useCallback(async (oppId) => POST({\n        url: '/tournament/' + props.id + '/clearClash',\n        data: {\n            playerId: player.id,\n            oppId\n        }\n    })\n        .then(updateClashes), [props.id, player, updateClashes]);\n\n    const List = useMemo((): ReactElement[] => {\n        if (!props.playerDict.size) return null;\n        let list = [] as ReactElement[];\n        for (let i = 0; i < clashes.length; i++) {\n            let opp = props.playerDict.get(clashes[i][1]);\n            if (!opp) continue;\n            list.push(<ActivePlayer\n                key={['clash', i].join('.')}\n                player={opp}\n                requireLastName={requireLastName}\n                clearClash={() => clearClash(opp.id)}\n                setDisplayPlayer={props.setDisplayPlayer}\n            />);\n        }\n        return list;\n    }, [props.playerDict, props.playerDictKey, clashes, clearClash, props.setDisplayPlayer, requireLastName]);\n\n    useEffect(() => {\n        updateClashes();\n    }, [updateClashes]);\n\n    const players = useMemo(() => Array.from(props.playerDict.values()), [props.playerDict, props.playerDictKey]);\n\n    if (!player) return null;\n    let Name = getNameFromPlayer(player);\n    const profile = !player ? {} : {\n        'Unique ID': player.id,\n        Status: player.active !== false ? 'Active' : 'Inactive',\n        Rating: player.rating,\n        'Performance rating': player.performanceRating,\n        Playing: player.isPlaying\n    };\n    let history = player.histories;\n\n    const total = (Math.max(player.histories.length, 1) - 1 - (player.isPlaying ? 1 : 0)).toString();\n    const totalGames = player.histories.reduce((acc, curr) => {\n        if (!curr) return acc;\n        acc += curr.played\n        return acc;\n    }, 0);\n    const scores = !player ? {} : {\n        Score: player.score.toString() + ' / ' + total,\n        'Game score': player.gamePoints.toString() + ' / ' + totalGames.toString(),\n        'Expected score': player.expectedScore.toFixed(2),\n        'Expected game score': player.expectedGameScore.toFixed(2) + ' / ' + totalGames,\n    };\n    if (!props.settings.displayPoints) {\n        delete scores['Game score'];\n        delete scores['Expected game score'];\n    }\n\n    return (\n        <>\n            <div className={styles.profile}>\t\t\n                <div className='topBanner'>\n                    {Name}\n                </div>\n\t\t\t\t<div className={[styles.profileContainer, 'scrollable'].join(' ')}>\n\t\t\t\t\t{Object.entries(profile).map(renderEntry)}\n\t\t\t\t\t<CollapsableSection\n\t\t\t\t\t\theader='Score'\n\t\t\t\t\t\tuseInternalState={true}\n\t\t\t\t\t\tstyle={{ gridColumn: '1 / span 2' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{Object.entries(scores).map(renderEntry)}\n\t\t\t\t\t</CollapsableSection>\n\t\t\t\t\t{props.settings.allowClashes ? <CollapsableSection\n\t\t\t\t\t\theader='Forbidden Pairings'\n\t\t\t\t\t\tuseInternalState={true}\n\t\t\t\t\t\tstyle={{ gridColumn: '1 / span 2' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{List}\n\t\t\t\t\t\t<SingleClash\n\t\t\t\t\t\t\tid={props.id}\n\t\t\t\t\t\t\tgetDisplayName={getDisplayName}\n\t\t\t\t\t\t\tonSubmit={(e: FormEvent<HTMLFormElement>): Promise<void> => {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\te.persist();\n\t\t\t\t\t\t\t\tlet form = e.target as HTMLFormElement & { oppName: HTMLInputElement };\n\t\t\t\t\t\t\t\tlet opp = players.find(p => getDisplayName(p.id) === form.oppName.value);\n\t\t\t\t\t\t\t\tlet options = {\n\t\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\t\tplayerId: player.id,\n\t\t\t\t\t\t\t\t\t\toppId: opp.id\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\turl: form.action\n\t\t\t\t\t\t\t\t} as AxiosRequestConfig;\n\t\t\t\t\t\t\t\treturn POST(options)\n\t\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\t\tlet form = e.target as HTMLFormElement;\n\t\t\t\t\t\t\t\t\t\tform.reset();\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.then(updateClashes)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tplayer={player}\n\t\t\t\t\t\t\tplayers={players}\n\t\t\t\t\t\t\taction={url.resolve(server, ['tournament', props.id, 'createClash'].join('/'))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</CollapsableSection> : null}\n\t\t\t\t\t<CollapsableSection\n\t\t\t\t\t\theader='Results'\n\t\t\t\t\t\tuseInternalState={true}\n\t\t\t\t\t\tstyle={{ gridColumn: '1 / span 2' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{history.map((minPlayer: History, i: number): ReactElement => {\n\t\t\t\t\t\t\tif (i === 0 || !minPlayer) return null;\n\t\t\t\t\t\t\tlet { id, colour } = minPlayer;\n\t\t\t\t\t\t\tlet result = minPlayer[props.settings.displayPoints];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className={styles.resultsRow} key={['row', 'history', i].join('.')}>\n\t\t\t\t\t\t\t\t\t<div className='fieldBox'>{i}</div>\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName='playerInfo'\n\t\t\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n\t\t\t\t\t\t\t\t\t>{getDisplayName(id)}</div>\n\t\t\t\t\t\t\t\t\t<div className='fieldBox'>{colour || '\\u200b'}</div>\n\t\t\t\t\t\t\t\t\t<div className='fieldBox'>{typeof result !== 'undefined' && result !== null ? result : '\\u200b'}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</CollapsableSection>\n\t\t\t\t\t<SectionBreak />\n\t\t\t\t</div>\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                {Bottom([() => props.setDisplayPlayer(''), <IoMdClose />, 'Close'])}\n            </div>\t\n        </>\n    );\n}","import { useDebugValue, useState } from 'react';\n\nexport function capitalise(str: string): string {\n\tif (!str) return str;\n\treturn str.slice(0, 1).toUpperCase() + str.slice(1).toLowerCase();\n}\n\nexport function delay(ms: number): Promise<void> {\n\treturn new Promise((res) => {\n\t\tsetTimeout(res, ms);\n\t});\n}\n\nexport function calculateHypotenuse(base: number, height: number): number {\n\treturn Math.sqrt(Math.pow(base, 2) + Math.pow(height, 2));\n}\n\nexport function useStateWithLabel(initialValue: any, name: string) {\n    const [value, setValue] = useState(initialValue);\n    useDebugValue(`${name}: ${value}`);\n    return [value, setValue];\n}\n\nexport function daysBetween(start: Date, end: Date): number {\n\n    const oneDay = 1000 * 60 * 60 * 24; // The number of milliseconds in all UTC days (no DST)\n  \n    // so it's safe to divide by 24 hours\n    return (end.valueOf() - start.valueOf()) / oneDay;\n  }","import { capitalise } from './prototype';\nimport { TournamentStatus, Player } from '../interfaces';\nimport { resultsServer } from './requests';\n\nexport interface TournamentSettings {\n\n\ttournamentId: string; // Note that the `null assertion` `!` is required in strict mode.\n\tpairingSystem: string;\n\tcompetitors: string\n\ttotalRounds: number | 'Infinity';\n\tperformanceSystem: 'ELO' | 'FIDE';\n\tratingSystem: 'ECF' | 'FIDE' | 'USCF';\n\n\tdisplayPoints: 'match' | 'game';\n\tgamePointTotal: number;\n\tlossReward: number;\n\tdrawReward: number;\n\twinReward: number;\n\tbyeReward: 'win' | 'draw' | 'loss';\n\n\tpublic: boolean\n\tvanityURL: string\n\tlogoURL: string\n\tprofileURL: string\n\trulesURL: string\n\tstreamURL: string\n\tshowRatings: boolean\n\tallowNewPlayers: boolean;\n    allowSelfSubmissions: boolean;\n    allowClashes: boolean;\n\troundTimes: boolean;\n\n\tcreatedAt: string\n\tupdatedAt: string\n\n}\n\nexport interface TournamentSetting {\n\tname?: string\n\tenum?: string[]\n\tconvert?: (v: any) => string\n\tvalue?: (status: any, players: Player[], setting: TournamentSettings) => any\n\ttype?: string\n\tlocked?: boolean,\n\tlockOnInit?: boolean\n\tshow?: {\n        [key in keyof TournamentSettings]?: any\n    }\n\tallow?: {\n\t\tinfinity?: boolean\n\t\tany?: boolean\n\t\tsubmit?: boolean\n        increment?: boolean\n        clear?: boolean\n\t}\n\tnb?: {\n\t\tmin?: number\n\t\tmax?: number\n\t\tstep?: number\n\t}\n\taction?: string\n\tprimaryKey?: boolean\n\tdefaultValue?: any\n}\n\nexport const defaultSettings = {\n\tgeneral: {\n\t\ttournamentId: {\n\t\t\tname: 'Unique ID',\n\t\t\ttype: 'string',\n\t\t\tlocked: true,\n\t\t\tprimaryKey: true\n\t\t},\n\t\tstatus: {\n\t\t\tname: 'Status',\n\t\t\tenum: ['uninitialised', 'active', 'finished'],\n\t\t\tconvert: capitalise,\n\t\t\tdefaultValue: 'uninitialised',\n\t\t\tvalue: (status: TournamentStatus): string => {\n\t\t\t\tif (!status.round) return 'uninitialised';\n\t\t\t\tif (status.active === false) return 'finished';\n\t\t\t\telse return 'active';\n\t\t\t}\n\t\t},\n\t\tpairingSystem: {\n\t\t\tname: 'Pairing system',\n\t\t\tenum: ['swiss'],\n\t\t\tconvert: capitalise,\n\t\t\tlockOnInit: true,\n\t\t\tdefaultValue: 'swiss'\n\t\t},\n\t\tcompetitors: {\n\t\t\tname: 'Tournament type',\n\t\t\tenum: ['individual', 'team'],\n\t\t\tconvert: capitalise,\n\t\t\tlockOnInit: true,\n\t\t\tdefaultValue: 'individual'\n\t\t},\n\t\ttotalRounds: {\n\t\t\tname: 'Total rounds',\n\t\t\tconvert: (v: number | 'Infinity') => v === 'Infinity' ? '∞' : v.toString(),\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: Infinity,\n\t\t\tnb: {\n\t\t\t\tmin: 1,\n\t\t\t\tmax: 100\n\t\t\t},\n\t\t\tallow: {\n\t\t\t\tinfinity: true\n\t\t\t}\n\t\t},\n\t\tratingSystem: {\n\t\t\tname: 'Rating system',\n\t\t\tenum: ['ECF', 'FIDE', 'USCF'],\n\t\t\tlockOnInit: true,\n\t\t\tdefaultValue: 'FIDE'\n\t\t},\n\t\tdisplayPoints: {\n\t\t\tname: 'Show',\n\t\t\tconvert: (v: 'match' | 'game') => capitalise(v) + ' Points',\n\t\t\tenum: ['match', 'game'],\n\t\t\tdefaultValue: 'match'\n\t\t},\n\t\tgamePointTotal: {\n\t\t\tname: 'Sum results to',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 1,\n\t\t\tshow: {\n                displayPoints: 'game'\n            },\n\t\t\tlockOnInit: true,\n\t\t\tnb: {\n\t\t\t\tstep: 1,\n\t\t\t\tmin: 1\n\t\t\t},\n\t\t\tallow: {\n\t\t\t\tany: true\n\t\t\t}\n\t\t}\n\t},\n\tpublic: {\n\t\tpublic: {\n            name: 'Public',\n            convert: (v: boolean) => capitalise(v.toString()),\n            lockOnInit: false,\n            type: 'boolean',\n            defaultValue: false\n        },\n\t\tvanityURL: {\n\t\t\tname: 'Custom ID',\n\t\t\ttype: 'string',\n            defaultValue: '',\n\t\t\tshow: {\n                public: true\n\t\t\t},\n\t\t\taction: 'updateVanityURL'\n\t\t},\n\t\turl: {\n\t\t\tname: 'URL',\n\t\t\ttype: 'link',\n            defaultValue: '',\n\t\t\tshow: {\n                public: true\n            },\n\t\t\tvalue: (status: TournamentStatus, p: Player[], s: TournamentSettings): string => `${resultsServer}tournament/${s.vanityURL || status.id}`.trim()\n\t\t},\n\t\tprofileURL: {\n\t\t\tname: 'Link to website',\n\t\t\ttype: 'string',\n\t\t\tshow: {\n                public: true\n\t\t\t}\n\t\t},\n\t\trulesURL: {\n\t\t\tname: 'Link to rules',\n\t\t\ttype: 'string',\n\t\t\tshow: {\n                public: true\n\t\t\t}\n\t\t},\n\t\tlogoURL: {\n\t\t\tname: 'Link to profile picture',\n\t\t\ttype: 'string',\n\t\t\tshow: {\n                public: true\n\t\t\t}\n\t\t},\n\t\tstreamURL: {\n\t\t\tname: 'Stream link',\n\t\t\ttype: 'string',\n\t\t\tshow: {\n                public: true\n\t\t\t}\n\t\t},\n\t\tshowRatings: {\n\t\t\tname: 'Show ratings',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: true,\n\t\t\tshow: {\n\t\t\t\tpublic: true\n\t\t\t}\n\t\t},\n\t\troundTimes: {\n\t\t\tname: 'Round times?',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: false,\n\t\t\tlocked: false,\n\t\t\tshow: {\n\t\t\t\tpublic: true\n\t\t\t}\n\t\t}\n\t},\n\tpermissions: {        \n\t\tallowNewPlayers: {\n\t\t\tname: 'Mid-way joining?',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\tlockOnInit: false,\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: true\n\t\t},\n\t\tallowSelfSubmissions: {\n\t\t\tname: 'User submissions?',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\tlockOnInit: false,\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: true\n\t\t},\n\t\tallowClashes: {\n\t\t\tname: 'Forbid certain pairings?',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\tlockOnInit: false,\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: true\n        }\n\t},\n\tpoints: {\n\t\tlossReward: {\n\t\t\tname: 'Points on loss',\n\t\t\tlockOnInit: true,\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tnb: {\n\t\t\t\tstep: 0.1\n\t\t\t}\n\t\t},\n\t\tdrawReward: {\n\t\t\tname: 'Points on draw',\n\t\t\tlockOnInit: true,\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0.5,\n\t\t\tnb: {\n\t\t\t\tstep: 0.1\n\t\t\t}\n\t\t},\n\t\twinReward: {\n\t\t\tname: 'Points on win',\n\t\t\tlockOnInit: true,\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 1,\n\t\t\tnb: {\n\t\t\t\tstep: 0.1\n\t\t\t}\n\t\t},\n\t\tbyeReward: {\n\t\t\tname: 'Bye reward',\n\t\t\tenum: ['win', 'draw', 'loss'],\n\t\t\tlockOnInit: true,\n\t\t\tdefaultValue: 'win'\n\t\t},\n\t\tperformanceSystem: {\n\t\t\tname: 'Performance rating',\n\t\t\tenum: ['ELO', 'FIDE'],\n\t\t\tlockOnInit: false,\n\t\t\tdefaultValue: 'ELO'\n\t\t}\n\t},\n\tstats: {\n\t\tnbPlayers: {\n\t\t\tname: 'Number of players',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => players.length,\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\tactivePlayers: {\n\t\t\tname: 'Active players',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => players.filter(p => p.active).length,\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\tmatchesPlayed: {\n\t\t\tname: 'Matches played',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => players.reduce((acc, curr) => acc += curr.played, 0) / 2,\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\tgamesPlayed: {\n\t\t\tname: 'Games played',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => players.reduce((acc, curr) => acc += curr.histories.reduce((acc, curr) => curr ? acc += curr.played : acc, 0), 0) / 2,\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\taverageRating: {\n\t\t\tname: 'Average rating',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 1200,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => {\n\t\t\t\tlet sum = players.reduce((acc, curr) => acc += curr.rating, 0);\n\t\t\t\treturn Math.round(sum / players.length);\n\t\t\t},\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\tcreatedAt: {\n\t\t\tname: 'Created at',\n\t\t\tconvert: (v: string) => new Date(v).toString().slice(0, 24),\n\t\t\tlocked: true\n\t\t},\n\t\tupdatedAt: {\n\t\t\tname: 'Last updated',\n\t\t\tconvert: (v: string) => new Date(v).toString().slice(0, 24),\n\t\t\tlocked: true\n\t\t}\n\t}\n} as {\n\t[key: string]: {\n\t\t[key: string]: TournamentSetting\n\t}\n};","import React, { ReactElement, useEffect, useState, useMemo, useCallback } from 'react';\nimport { EditableField } from '../components/';\nimport { TournamentSettings, TournamentStatus, Player } from '../interfaces';\nimport url from 'url';\n\nimport styles from '../css/profile.module.css';\nimport { server, POST } from '../utils/requests';\nimport { defaultSettings, TournamentSetting } from '../utils/settings';\nimport { capitalise } from '../utils/prototype';\nimport { Bottom } from '../components/Buttons';\nimport { IoMdClose } from 'react-icons/io';\nimport CollapsableSection, { SectionBreak } from '../components/CollapsableSection';\n\ninterface SettingsProps {\n\tupdateTournamentSettings: () => Promise<void>\n\tupdateSetting: (k: string, v: any) => Promise<void>\n\tupdateRounds: () => Promise<void>\n\tstatus: TournamentStatus\n\tsettings: TournamentSettings\n\ttoggleSettings: () => void\n\tsetLastRound: (override: boolean) => void // need to include a method to cancel a last round token when the total rounds is incremented\n\ttriggerError: (message: string) => void\n\tplayers: Player[]\n\trounds: Date[]\n}\n\nconst watchProps = Object.values(defaultSettings).reduce((acc, curr) => {\n    for (let def of Object.values(curr)) {\n        if (def.show) acc.push(...Object.keys(def.show));\n    }\n    return acc;\n}, []) as (keyof TournamentSettings)[];\n\nfunction modifyHeightValues (): void {\n    let headers = Array.from(document.querySelectorAll('.' + [styles.sectionListWrapper].join('.'))) as HTMLDivElement[];\n    for (let h of headers) {\n        let list = h.firstElementChild as HTMLDivElement;\n        h.style.height = h.className.includes(styles.expanded) ? list.getBoundingClientRect().height + 'px' : '0px';\n    }\n};\n\nexport default function Settings(props: SettingsProps): ReactElement {\n\n    const [sectionExpando, setSection] = useState('general');\n\n\tconst handleToggle = useCallback((k: string, v: any, def: {\n\t\tname?: string,\n\t\tenum?: string[],\n\t\tconvert?: (v: any) => string,\n\t\ttype?: string,\n\t\tlocked?: boolean,\n\t\tlockOnInit?: boolean\n\t}) => {\n\t\ttry {\n\t\t\tlet value: any;\n\t\t\tif (def.enum) {\n\t\t\t\tlet index = def.enum.indexOf(v);\n\t\t\t\tif (index === -1) console.error('Invalid setting value ' + k + ': ' + v);\n\t\t\t\tlet setIndex = (index + 1) % def.enum.length;\n\t\t\t\tvalue = def.enum[setIndex];\n\t\t\t} else\n\t\t\tif (def.type === 'boolean') {\n\t\t\t\tvalue = !v;\n\t\t\t} else\n\t\t\tif (def.type === 'number') {\n\n\t\t\t\tif (v === 'Infinity') value = Infinity as number;\n\t\t\t\telse if (v === '∞') value = Infinity as number;\n\t\t\t\telse v = Number(v) as number;\n\n\t\t\t\tif (k === 'totalRounds') {\n\t\t\t\t\tif (v <= props.status.round) throw new Error('Can\\'t make total number of rounds less than current round number');\n\t\t\t\t\tif (v !== Infinity && v >= 100) throw new Error('Can\\'t make total number of rounds more than 100');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tprops.updateSetting(k, value);\n\t\t} catch (e) {\n\t\t\tif (e && e.message) props.triggerError(e.message);\n\t\t}\n    }, [props.status.round, props.updateSetting, props.triggerError]);\n    \n    const clearRound = useCallback((round: number): Promise<void> => {\n        return POST({\n            url: '/tournament/' + props.status.id + '/clearRound',\n            data: { round }\n\t\t});\n    }, [props.status.id]);\n\n    const watchedSettings = useMemo(() => Object.entries(props.settings).filter(([k]) => watchProps.includes(k as keyof TournamentSettings)), [props.settings])\n    \n    useEffect(() => {\n        modifyHeightValues();\n    }, [JSON.stringify(watchedSettings)]);\n\n    \n    const renderRound = useCallback((i: number) => {\n        return (\n            <div className={[styles.row, styles.roundRow].join(' ')} key={['row', i].join('.')}>\n                <div className='fieldBox'>\n                    {`Round ${i}:`}\n                </div>\n                <EditableField\n                    handleSubmit={props.updateSetting}\n                    handleClear={() => clearRound(i)}\n                    content={props.rounds[i] ? props.rounds[i].toString() : ''}\n                    defaultEditContent={new Date(Date.now()).toISOString()}\n                    url={url.resolve(server, ['tournament', props.status.id, 'updateRound'].join('/'))}\n                    inputType='datetime-local'\n                    onSubmitSuccess={(e) => {\n                        props.updateRounds();\n                        return e;\n                    }}\n                    additionalStyles={{\n                        editableField: styles.editableField,\n                        input: styles.input,\n                    }}\n                    additionalInputProps={{}}\n                    name={i.toString()}\n                    show={{\n                        submit: true,\n                        increment: false,\n                        clear: true\n                    }}\n                />\n            </div>\n        );\n    }, [props.updateSetting, props.rounds, props.status.id, props.updateRounds]);\n\n\tconst renderEntry = useCallback((([k, def]: [keyof TournamentSettings, TournamentSetting], i: number): ReactElement => {\n        let hidden = false;\n        if (def.show) {\n            for (let [k, v] of Object.entries(def.show)) {\n                let value = props.settings[k as keyof TournamentSettings];\n                if (value !== v) hidden = true;\n            }\n        }\n        if (hidden) return null;\n        \n\t\tlet locked = false;\n\t\tif (def.locked) locked = true;\n        else if (def.lockOnInit && props.status.round) locked = true;\n        \n        let v = props.settings[k as keyof TournamentSettings] ?? def.defaultValue;\n\t\tlet content = def.convert && !def.value ? def.convert(v) : v as string;\n\t\treturn (\n\t\t\t<div className={styles.row} key={['row', i].join('.')}>\n\t\t\t\t<div className={['fieldBox', def.show ? styles.semiPresent : ''].join(' ')}>\n\t\t\t\t\t{def.name}\n\t\t\t\t\t{def.name.endsWith('?') ? '' : ':'}\n\t\t\t\t</div>\n\t\t\t\t{(() => {\n\t\t\t\t\tif (locked || def.value) {\n                        if (def.value) content = def.value(props.status, props.players, props.settings);\n                        if (def.convert) content = def.convert(content);\n                        return <div\n                            style={{\n                                cursor: def.type === 'link' ? 'copy' : 'default'\n                            }}\n                            className={['fieldBox', styles.locked].join(' ')}\n                            onClick={def.type !== 'link' ? null : () => navigator.clipboard.writeText(content)}\n                        >\n\t\t\t\t\t\t\t{typeof content !== 'undefined' ? content.toString() : '\\u200b'}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t} else\n\t\t\t\t\tif (def.type === 'string') {\n\t\t\t\t\t\treturn <EditableField\n\t\t\t\t\t\t\thandleSubmit={props.updateSetting}\n\t\t\t\t\t\t\tcontent={content}\n\t\t\t\t\t\t\turl={url.resolve(server, ['tournament', props.status.id, def.action || 'updateSetting'].join('/'))}\n\t\t\t\t\t\t\tinputType='text'\n\t\t\t\t\t\t\tonSubmitSuccess={(e) => {\n\t\t\t\t\t\t\t\tprops.updateTournamentSettings();\n\t\t\t\t\t\t\t\treturn e;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tadditionalStyles={{\n\t\t\t\t\t\t\t\teditableField: styles.editableField,\n\t\t\t\t\t\t\t\tinput: styles.input\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tname={k}\n\t\t\t\t\t\t\tadditionalInputProps={{}}\n\t\t\t\t\t\t\tshow={{\n\t\t\t\t\t\t\t\tsubmit: true,\n\t\t\t\t\t\t\t\t...def.allow\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t} else\n\t\t\t\t\tif (def.type === 'number') {\n\t\t\t\t\t\treturn <EditableField\n\t\t\t\t\t\t\thandleSubmit={props.updateSetting}\n\t\t\t\t\t\t\tcontent={content}\n\t\t\t\t\t\t\turl={url.resolve(server, ['tournament', props.status.id, 'updateSetting'].join('/'))}\n\t\t\t\t\t\t\tinputType='number'\n\t\t\t\t\t\t\tonSubmitSuccess={(e) => {\n\t\t\t\t\t\t\t\tprops.updateTournamentSettings();\n\t\t\t\t\t\t\t\treturn e;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tadditionalStyles={{\n\t\t\t\t\t\t\t\teditableField: styles.editableField,\n\t\t\t\t\t\t\t\tinput: styles.input\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tname={k}\n\t\t\t\t\t\t\tadditionalInputProps={def.nb}\n\t\t\t\t\t\t\tshow={{\n\t\t\t\t\t\t\t\tsubmit: true,\n\t\t\t\t\t\t\t\tincrement: true,\n\t\t\t\t\t\t\t\t...def.allow\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn <div\n\t\t\t\t\t\t\tclassName={['fieldBox', styles.editable].join(' ')}\n\t\t\t\t\t\t\tonClick={() => handleToggle(k, v, def)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{typeof content !== 'undefined' ? content.toString() : '\\u200b'}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t})()}\n\t\t\t</div>\n\t\t);\n\t}), [props.settings, props.status, props.players, props.updateSetting, props.status.id, props.updateTournamentSettings]);\n\n\n    let roundEntries = [];\n    let length = props.settings.totalRounds === Infinity || props.settings.totalRounds === 'Infinity' ? Math.max(props.rounds.length, 1) : props.settings.totalRounds;\n    for (let i = 1; i <= length; i++) roundEntries.push(i);\n\n    return (\n        <>\n            <div className={styles.profile} >\t\t\t\t\n                <div className='topBanner'>\n                    Settings\n                </div>\n\t\t\t\t<div className={[styles.profileContainer, 'scrollable'].join(' ')}>\n\t\t\t\t\t{Object.entries(defaultSettings).map(([section, data]): ReactElement => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<CollapsableSection\n\t\t\t\t\t\t\t\tkey={section}\n\t\t\t\t\t\t\t\tvalue={section}\n\t\t\t\t\t\t\t\theader={capitalise(section)}\n\t\t\t\t\t\t\t\texpanded={sectionExpando === section}\n\t\t\t\t\t\t\t\tsetExpanded={(state: boolean, action: string) => setSection(state ? action : '')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{(Object.entries(data) as [keyof TournamentSettings, TournamentSetting][])\n\t\t\t\t\t\t\t\t\t.map(renderEntry)}\n\t\t\t\t\t\t\t</CollapsableSection>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t\t{props.settings.roundTimes ? <CollapsableSection\n\t\t\t\t\t\tkey={'rounds'}\n\t\t\t\t\t\tvalue={'rounds'}\n\t\t\t\t\t\theader={'Rounds'}\n\t\t\t\t\t\texpanded={sectionExpando === 'rounds'}\n\t\t\t\t\t\tsetExpanded={(state: boolean, action: string) => setSection(state ? action : '')}\n\t\t\t\t\t>\n\t\t\t\t\t\t{roundEntries.map(renderRound)}\n\t\t\t\t\t</CollapsableSection> : null}\n\t\t\t\t\t{props.settings.public && props.settings.logoURL ? <CollapsableSection\n\t\t\t\t\t\tkey={'profile'}\n\t\t\t\t\t\tvalue={'profile'}\n\t\t\t\t\t\theader={'Profile'}\n\t\t\t\t\t\tuseInternalState\n\t\t\t\t\t\texpanded={sectionExpando === 'public'}\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.settings.profileURL ? <a href={props.settings.profileURL.trim()}>\n\t\t\t\t\t\t\t<img className={styles.profilePicture} src={props.settings.logoURL.trim()} alt='Invalid image URL' />\n\t\t\t\t\t\t</a> : <div>\n\t\t\t\t\t\t\t<img className={styles.profilePicture} src={props.settings.logoURL.trim()} alt='Invalid image URL' />\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t</CollapsableSection> : null}\n\t\t\t\t\t<SectionBreak />\n\t\t\t\t</div>\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                {Bottom([\n                    props.toggleSettings,\n                    <IoMdClose />,\n                    'Close'\n                ])}\n            </div>\n        </>\n    );\n}","import React, { ReactElement, useMemo, useCallback, useReducer } from 'react';\nimport { TournamentStatus, Player, TournamentSettings } from '../interfaces';\n\nimport styles from '../css/crosstable.module.css';\nimport { MdExitToApp } from 'react-icons/md';\n\ninterface TableProps {\n\tsetDisplayPlayer: (id: string) => void\n\tshow: () => void\n\tstatus: TournamentStatus\n\tplayers: Player[]\n\tsettings: TournamentSettings\n}\n\ninterface ColumnData {\n\tid?: (entry: Player, i: number) => string\n\tname: string | ((key: string, i: number) => string)\n\tclassName: 'blank' | 'player' | 'locked' | 'rating' | 'unset' | 'edit' | ((v: string, i: number, settings: TournamentSettings) => string),\n\tsort?: false | ((a: any, b: any) => number),\n\tshow?: (entry: Player, i: number, settings: TournamentSettings) => boolean\n\tvalue: (entry: Player, i: number, settings: TournamentSettings) => any\n\tconvert?: (v: any, p: Player, s: TournamentSettings) => string\n\tpostConvert?: (v: string, i: number) => string\n}\n\nconst columns = {\n\tpre: {\n\t\tid: {\n\t\t\tname: '',\n\t\t\tclassName: 'blank',\n\t\t\tsort: false,\n\t\t\tvalue: (): number => 0,\n\t\t\tpostConvert: (v: string, i: number): string => (1 + i).toString()\n\t\t},\n\t\tname: {\n\t\t\tname: 'Name',\n\t\t\tclassName: 'player',\n\t\t\tid: (p: Player): string => p.id,\n\t\t\tsort: (a: string, b: string) => {\n\t\t\t\tif (a > b) return 1;\n\t\t\t\tif (a < b) return -1;\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\tvalue: (p: Player, i: number, s: TournamentSettings): string => s.competitors === 'individual' ? [p.firstName, p.lastName].join(' ') : p.firstName\n\t\t},\n\t\trating: {\n\t\t\tname: 'Rating',\n\t\t\tclassName: 'locked',\n\t\t\tvalue: (p: Player): number => p.rating,\n\t\t\tshow: (entry: Player, i: number, s: TournamentSettings) => s.showRatings\n\t\t}\n\t},\n\troundColumn: {\n\t\tname: (key: string, i: number): string => key.slice(-1),\n\t\tclassName: (v: string, i: number, s: TournamentSettings) => {\n\t\t\tif (v === '*') return 'edit';\n\t\t\tif (v === '') return 'unset';\n\t\t\telse return 'locked';\n\t\t},\n\t\tvalue: () => {},\n\t\tconvert: (v: string, p: Player, s: TournamentSettings) => {\n\t\t\tif (v === '') return '';\n\t\t\telse if (v === '*') return '*';\n\t\t\tlet nb = parseInt(v);\n\t\t\tlet output: string;\n\t\t\tif (nb === 0.5) output = '½';\n\t\t\telse output = nb.toString();\n\t\t\tif (v.endsWith('b')) output += 'b';\n\t\t\treturn output;\n\t\t},\n\t\tsort: (a: string, b: string): number => {\n\t\t\tif (a === b) return 0;\n\t\t\tif (a === '') return -1;\n\t\t\telse if (b === '') return -1;\n\t\t\tif (a === '*') return 1;\n\t\t\telse if (b === '*') return -1;\n\t\t\tlet [aN, bN] = [parseInt(a), parseInt(b)];\n\t\t\tif (a.endsWith('b')) aN -= 0.001;\n\t\t\tif (b.endsWith('b')) bN -= 0.001;\n\t\t\treturn bN - aN;\n\t\t}\n\t},\n\tpost: {\n\t\tscore: {\n\t\t\tname: 'MP',\n\t\t\tclassName: 'locked',\n\t\t\tvalue: (p: Player) => parseFloat(p.score.toString()),\n\t\t\tconvert: (v: number, p: Player): string => v.toFixed(1) + ' / ' + p.played\n\t\t},\n\t\tgamePoints: {\n\t\t\tname: 'GP',\n\t\t\tclassName: 'locked',\n\t\t\tvalue: (p: Player) => p.gamePoints,\n\t\t\tconvert: (v: number): string => v.toFixed(1)\n\t\t},\n\t\twinPercentage: {\n\t\t\tname: 'Win %',\n\t\t\tclassName: 'rating',\n\t\t\tvalue: (p: Player): number => p.played === 0 ? -1 : p.score * 100 / p.played,\n\t\t\tconvert: (v: number): string => {\n\t\t\t\tif (v < 0) return '-';\n\t\t\t\treturn v.toFixed()\n\t\t\t}\n\t\t},\n\t\tperformanceRating: {\n\t\t\tname: 'Perf',\n\t\t\tclassName: 'rating',\n\t\t\tvalue: (p: Player) => p.performanceRating,\n\t\t\tconvert: (v: number): string => v.toFixed(),\n\t\t\tshow: (entry: Player, i: number, s: TournamentSettings) => s.showRatings\n\t\t},\n\t\tratingDifference: {\n\t\t\tname: 'P. +/-',\n\t\t\tclassName: 'rating',\n\t\t\tvalue: (p: Player): number => {\n\t\t\t\tif (!p.performanceRating) return 0;\n\t\t\t\treturn p.performanceRating - p.rating;\n\t\t\t},\n\t\t\tconvert: (v: number): string => {\n\t\t\t\tif (!v) return '';\n\t\t\t\tif (v > 0) return '+' + v.toString();\n\t\t\t\telse return v.toString()\n\t\t\t},\n\t\t\tshow: (entry: Player, i: number, s: TournamentSettings) => s.showRatings\n\t\t},\n\t\texpectedScore: {\n\t\t\tname: 'Expected',\n\t\t\tclassName: 'rating',\n\t\t\tvalue: (p: Player): number => p.expectedScore,\n\t\t\tconvert: (v: number, p: Player): string => v.toFixed(1) + ' / ' + p.played,\n\t\t\tshow: (entry: Player, i: number, s: TournamentSettings) => s.showRatings\n\t\t},\n\t\texpectedDifference: {\n\t\t\tname: 'E. +/-',\n\t\t\tclassName: 'rating',\n\t\t\tvalue: (p: Player): number => p.score - p.expectedScore,\n\t\t\tconvert: (v: number): string => {\n\t\t\t\tif (typeof v === 'undefined') return '';\n\t\t\t\tif (v > 0) return '+' + v.toFixed(2);\n\t\t\t\telse return v.toFixed(2)\n\t\t\t},\n\t\t\tshow: (entry: Player, i: number, s: TournamentSettings) => s.showRatings\n\t\t},\n\t}\n} as {\n\tpre: {\n\t\t[key: string]: ColumnData\n\t},\n\troundColumn: ColumnData\n\tpost: {\n\t\t[key: string]: ColumnData\n\t}\n\n}\n\nexport default function CrossTable(props: TableProps): ReactElement {\n\n\tconst totalRounds = useMemo((): number => {\n\t\tlet totalRounds: number;\n\t\tif (props.status.round > props.settings.totalRounds) totalRounds = props.status.round;\n\t\telse if (props.settings.totalRounds === 'Infinity') totalRounds = props.status.round;\n\t\telse totalRounds = props.settings.totalRounds;\n\t\treturn totalRounds;\n\t}, [props.status.round, props.settings.totalRounds]);\n\n\tconst roundHeaders = useMemo(() => {\n\t\tlet h = [] as string[];\n\t\tfor (let i = 1; i <= totalRounds; i++) {\n\t\t\th.push('round.' + i.toString());\n\t\t}\n\t\treturn h;\n\t}, [totalRounds]);\n\n\tconst headers: string[] = useMemo(() => [...Object.keys(columns.pre), ...roundHeaders, ...Object.keys(columns.post)], [roundHeaders])\n\t\t.filter((key, i) => {\n\t\t\tlet meta = columns.pre[key] || columns.post[key];\n\t\t\tif (!meta) return true;\n\t\t\tif (meta.show && !meta.show(null as Player, i, props.settings)) return false;\n\t\t\treturn true;\n\t\t});\n\n\tconst setSortHeader = useCallback((state: [string, number], action: string): [string, number] => {\n\t\tif (!headers.includes(action)) return ['', 0];\n\t\tif (state[0] !== action) return [action, 0];\n\t\telse return [action, state[1] + 1];\n\t}, [headers]);\n\tconst [sort, sortBy] = useReducer(setSortHeader, ['score', 0])\n\n\tconst renderRounds = useCallback((p: Player) => {\n\t\tlet scores = [''] as string[];\n\t\tfor (let i = 1; i <= totalRounds; i++) {\n\t\t\tif (!p.histories[i]) {\n\t\t\t\tif (i === props.status.round) scores[i] = '*'\n\t\t\t\telse scores[i] = '';\n\t\t\t\tcontinue;\n\t\t\t};\n\t\t\tif (p.histories[i].match === null) scores[i] = '*';\n\t\t\telse scores[i] = p.histories[i].match.toString();\n\t\t\tif (p.histories[i].id === 'bye') scores[i] += 'b';\n\t\t}\n\t\treturn scores.slice(1);\n\t}, [totalRounds, props.status.round]);\t\n\n\tconst renderRows: JSX.Element[] = useMemo(() => {\n\t\tlet rowsData = [] as [number, ColumnData, Player][][];\n\t\tfor (let i = 0; i < props.players.length; i++) {\n\t\t\tlet p = props.players[i];\n\t\t\tlet pres = [] as [number, ColumnData, Player][];\n\t\t\tfor (let [k, meta] of Object.entries(columns.pre)) {\n\t\t\t\tif (meta.show && !meta.show(p, i, props.settings)) continue;\n\t\t\t\tpres.push([meta.value(p, i, props.settings), meta, p]);\n\t\t\t}\n\t\t\tlet rounds = renderRounds(p).map(entry => [entry as any as number, columns.roundColumn, p]) as [number, ColumnData, Player][];\n\t\t\tlet post = [] as [number, ColumnData, Player][];\n\t\t\tfor (let [k, meta] of Object.entries(columns.post)) {\n\t\t\t\tif (meta.show && !meta.show(p, i, props.settings)) continue;\n\t\t\t\tpost.push([meta.value(p, i, props.settings), meta, p]);\n\t\t\t}\n\t\t\tlet rowData = [...pres, ...rounds, ...post];\n\t\t\trowsData.push(rowData);\n\t\t}\n\n\t\tlet sortFunc = (a: number, b: number): number => b - a;\n\t\tlet sortMeta = sort[0].startsWith('round') ? columns.roundColumn : (columns.pre[sort[0]] || columns.post[sort[0]]);\n\t\tif (sortMeta && sortMeta.sort !== false) {\n\t\t\tif (sortMeta.sort) sortFunc = sortMeta.sort;\n\t\t\tlet sortCol = headers.indexOf(sort[0]);\n\t\t\trowsData = rowsData.sort((a, b) => sort[1] % 2 ? sortFunc(b[sortCol][0], a[sortCol][0]) : sortFunc(a[sortCol][0], b[sortCol][0]));\n\t\t}\n\n\t\tlet rows = rowsData.map((rowData, i) => {\n\t\t\treturn (\n\t\t\t\t<tr key={'row.' + i} className={styles.tr}>\n\t\t\t\t\t{rowData.map(([value, meta, p]: [number, ColumnData, Player], j: number) => {\n\t\t\t\t\t\tlet display = value ? value.toString() : '';\n\t\t\t\t\t\tif (meta.convert) display = meta.convert(value, p, props.settings);\n\t\t\t\t\t\telse if (meta.postConvert) display = meta.postConvert(display, i);\n\t\t\t\t\t\tif (typeof display === 'undefined' || display === '') display = '\\u200b';\n\t\t\t\t\t\tlet className = typeof meta.className === 'function' ? meta.className(display, j, props.settings) : meta.className\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tid={meta.id ? meta.id(p, j) : undefined}\n\t\t\t\t\t\t\t\t\tkey={[value, j].join('.')}\n\t\t\t\t\t\t\t\t\tclassName={[styles.cell, styles[className]].join(' ')}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{display}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</tr>\n\t\t\t);\n\t\t})\n\t\treturn rows;\n\t}, [props.players, props.settings, renderRounds, sort]);\n\t\t\n\tconst title = `Tournament '${props.status.name || props.status.id}' results after ${props.status.round} rounds`;\n\treturn (\n\t\t<div className={[styles.gridPage, 'scrollable'].join(' ')}>\t\t\t\t\n\t\t\t<div className={styles.titles}>\n\t\t\t\t<div>{title}</div>\n\t\t\t\t<div className={['button', styles.closeButton].join(' ')} onClick={props.show}>\n\t\t\t\t\t<MdExitToApp />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<table className={styles.table}>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t{headers.map((key, i) => {\n\t\t\t\t\t\t\tlet meta = key.startsWith('round') ? columns.roundColumn : (columns.pre[key] || columns.post[key]);\n\t\t\t\t\t\t\treturn <th\n\t\t\t\t\t\t\t\tscope='column'\n\t\t\t\t\t\t\t\tkey={['column', i].join('.')}\n\t\t\t\t\t\t\t\tclassName={styles.th}\n\t\t\t\t\t\t\t\tid={key}\n\t\t\t\t\t\t\t\tonClick={() => sortBy(key)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className={[styles.cell, styles.headerCell].join(' ')}>\n\t\t\t\t\t\t\t\t\t{typeof meta.name === 'function' ? meta.name(key, i) : meta.name}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</th>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\t\t\t\t\t\t\n\t\t\t\t\t{renderRows}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n}","import React, { ReactElement, useCallback } from 'react';\nimport { TournamentSettings, TournamentStatus } from '../interfaces';\nimport CSV from 'papaparse';\n\nimport styles from '../css/crosstable.module.css';\nimport { MdExitToApp } from 'react-icons/md';\nimport { POST } from '../utils/requests';\n\ninterface PasteInputProps {\n    closePasteInput: () => void\n    status: TournamentStatus\n    settings: TournamentSettings\n    id: string\n    updatePlayerDict: () => void\n}\n\nexport default function PasteInput(props: PasteInputProps): ReactElement {\n\n    const requireLastName = false;\n\n\tconst handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        let form = e.target as HTMLFormElement;\n        let textArea = form.textArea as HTMLTextAreaElement;\n        let text = textArea.value;\n\t\tif (!text.trim()) return;\n\t\tif (!text.split('\\n').length && text.split(',').length && text.split('\\t').length) return;\n\t\tlet json = CSV.parse(text, {\n\t\t\tdelimitersToGuess: [',', '\\t'],\n\t\t\tdynamicTyping: true,\n\t\t\tfastMode: true\n\t\t} as CSV.ParseConfig) as CSV.ParseResult;\n\t\tif (json.data.length > 150) return console.error('Can\\'t paste more than 150 players at once!');\n\t\tlet data = json.data.map((row) => {\n\t\t\tlet [firstName, rating]: [string, number] = row;\n\t\t\ttry {\n\t\t\t\tif (typeof firstName !== 'string') throw [firstName, 'string'].join(',');\n\t\t\t\tif (typeof rating !== 'number') throw [rating, 'number'].join(',');\n\t\t\t\treturn {firstName, rating};\n\t\t\t} catch (error) {\n\t\t\t\tif (!text.split('\\n').length) return null;\n\t\t\t\tlet e = error.split(',');\n\t\t\t\tconsole.error(new TypeError('Bad input on row ' + row.join(',') + '\\n' + e[0] + ' is not type ' + e[1]));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t})\n            .filter(r => r);\n\t\tPOST({\n\t\t\turl: 'tournament/' + props.id + '/appendPlayers',\n\t\t\tdata\n\t\t}); /*\n\t\tPOST({\n\t\t\turl: 'tournament/' + props.id + '/appendPlayersHack',\n\t\t\tdata: json.data\n\t\t})\n\t\t\t.then(() => Promise.all([props.updatePlayerDict()]));*/\n\t}, [props.id, requireLastName, props.updatePlayerDict]);\n\t\t\n    let title = `CSV player data entry for tournament '${props.status.name || props.status.id}'`;\n    return (\n        <>\t\t\t\t\n            <div className={styles.titles}>\n                <div>{title}</div>\n                <div className={['button', styles.closeButton].join(' ')} onClick={props.closePasteInput}>\n                    <MdExitToApp />\n                </div>\n            </div>\n            <div className={styles.subheader}>\n                Please paste your input in csv (comma-separated values) format\n            </div>\n            <div className={styles.container}>\n                <form\n                    className={styles.form}\n                    target='_self'\n                    onSubmit={handleSubmit}\n                    method='POST'\n                >\n                    <textarea className={styles.textarea} name='textArea'/>                \n                    <button\n                        type='submit'\n                        className={styles.submit}\n                    >\n                        SUBMIT\n                    </button>\n                </form>\n            </div>\n        </>\n    );\n}","import React, { ReactElement, useState, useEffect, Dispatch, SetStateAction, CSSProperties, useCallback, useReducer, useMemo } from 'react';\nimport { InfoBar, Pairings, Sidebar, Profile, Settings, CrossTable, PasteInput, Switch } from './tournament';\nimport { Player, ID, TournamentStatus, TournamentSettings } from './interfaces';\nimport { GET, POST, cookies } from './utils/requests';\n\nimport styles from './css/tournament.module.css';\n\nconst defaultColumns = [30.8, 38.4, 30.8];\n\ninterface TournamentProps {\n\tid: string\n\tcloseTournament: () => void\n\ttriggerError: (message: string) => void\n\ttriggerConfirm: (message: string, resolve: () => void, reject: () => void) => void\n}\n\nfunction dispatchEvent(eventName: string): void {\n\tlet event = document.createEvent('HTMLEvents') as Event & { eventName: string };\n\tevent.initEvent(eventName, true, true);\n\tevent.eventName = eventName;\n\tdocument.dispatchEvent(event);\n}\n\nfunction useCacheColumns(columns: number[]) {\n\n\tconst [cachedColumns, setColumns] = useState(columns);\n\n\tuseEffect(() => {\n\t\tif (JSON.stringify(columns) === JSON.stringify(cachedColumns)) return;\n\t\tcookies.set('columns', columns.map(nb => nb.toString()).join(','));\n\t\tsetColumns(columns);\n\t}, [columns]);\n\n}\n\nfunction MouseEvents({ columns, boundaries, resize, setColumns, setResize, toggleSidebar, toggleSettings, setDisplayPlayerRaw }: {\n\tcolumns: number[],\n\tboundaries: number[],\n\tresize: number,\n\tsetColumns: (columns: number[]) => void\n\tsetResize: Dispatch<SetStateAction<number>>,\n\ttoggleSidebar: ({set}: { set?: boolean }) => void\n\ttoggleSettings: ({set}: { set?: boolean }) => void\n\tsetDisplayPlayerRaw: Dispatch<SetStateAction<string>>\n}): void {\n\n\tconst [mouseClick, setMouseClick] = useState(0);\n\n\tconst handleMouseMove = useCallback((e: MouseEvent) => {\n\t\tlet percentX = e.x / window.innerWidth * 100;\n\t\tif (mouseClick) {\n\t\t\tlet prev = (columns.slice(0, mouseClick - 1).reduce((acc, curr) => acc += curr, 0));\n\t\t\tlet sum = prev + columns[mouseClick - 1] + columns[mouseClick];\n\t\t\tlet left = percentX - prev;\n\t\t\tlet right = sum - percentX;\n\t\t\tlet threshold = 2;\n\t\t\tif (left < threshold) {\n\t\t\t\tright += left;\n\t\t\t\tleft = 0;\n\t\t\t\tif (mouseClick === 1) toggleSidebar({set: false});\n\t\t\t\tdispatchEvent('mouseup');\n\t\t\t} else\n\t\t\tif (right < threshold) {\n\t\t\t\tleft += right;\n\t\t\t\tright = 0;\n\t\t\t\tif (mouseClick === columns.length - 1) {\n\t\t\t\t\tsetDisplayPlayerRaw('');\n\t\t\t\t\ttoggleSettings({set: false});\n\t\t\t\t\tdispatchEvent('mouseup');\n\t\t\t\t}\n\t\t\t}\n\t\t\tcolumns[mouseClick - 1] = left\n\t\t\tcolumns[mouseClick] = right;\n\t\t\tsetColumns(columns.slice(0));\n\t\t} else {\n\t\t\tlet threshold = 0.2;\n\t\t\tlet index = boundaries.findIndex(b => Math.abs(b - percentX) < threshold);\n\t\t\tif (index === 0 && boundaries[0] === 0) index = -1;\n\t\t\telse if (index === boundaries.length - 1 && boundaries[boundaries.length - 1] === 100) index = -1;\n\t\t\tsetResize(index + 1);\n\t\t}\n\t}, [mouseClick, columns, setDisplayPlayerRaw, toggleSettings, setResize, setColumns, boundaries, toggleSidebar]);\n\n\tuseCacheColumns(columns);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('mousemove', handleMouseMove);\n\t\treturn () => document.removeEventListener('mousemove', handleMouseMove);\n\t}, [mouseClick, handleMouseMove]);\n\tuseEffect(() => {\n\t\tif (!resize) return;\n\t\tlet callback = () => setMouseClick(resize);\n\t\tdocument.addEventListener('mousedown', callback);\n\t\treturn () => document.removeEventListener('mousedown', callback);\n\t}, [resize, setMouseClick]);\n\tuseEffect(() => {\n\t\tlet callback = () => setMouseClick(0);\n\t\tdocument.addEventListener('mouseup', callback);\n\t\treturn () => document.removeEventListener('mouseup', callback);\n\t}, [resize, setMouseClick]);\n}\n\nexport default function Tournament(props: TournamentProps): ReactElement {\n\n\tconst [columns, setColumns] = useReducer((state: number[], action: number[]) => {\n\t\treturn action;\n\t}, defaultColumns);\n\tconst [resize, setResize] = useState(0);\n\tconst boundaries = useMemo(() => \tcolumns.reduce((acc, curr) => {\n\t\tacc.push((acc[acc.length - 1] ?? 0) + curr);\n\t\treturn acc;\n\t}, [] as number[]).slice(0, -1), [columns]);\n\n\tuseCacheColumns(columns);\n\n\tconst [displayPlayer, setDisplayPlayerRaw] = useState('');\n    const [crossTable, setCrossTable] = useState(false);\n    const [pasteInput, setPasteInput] = useState(false);\n\tconst [lastRoundOverride, setLastRound] = useState(undefined) as [boolean | undefined, Dispatch<SetStateAction<boolean | undefined>>];\n\tconst [nextRound, toggleNextRound] = useState(false);\n\tconst [switchMode, setSwitchMode] = useState(false);\n\tconst toggleCrossTable = () => setCrossTable(!crossTable);\n\n\tconst switchPairings = useCallback(() => setSwitchMode(!switchMode), [switchMode]);\n\tconst loadColumns = useCallback(async () => {\n        let cols: string = await cookies.get('columns');\n\t\tif (cols) setColumns(cols.split(',').map(nb => Number(nb)));\n    }, [setColumns]);\n\n    useEffect(() => {\n        loadColumns();\n    }, [loadColumns]);\n\n\n\tconst reduceSidebar = useCallback((state: boolean, { set }: { set?: boolean }): boolean => {\n\t\tif (columns[0] === 0) {\n\t\t\tlet _columns = columns.slice(0);\n\t\t\t_columns[0] = defaultColumns[0];\n\t\t\tif (_columns[1] < defaultColumns[0]) _columns = defaultColumns as [number, number, number];\n\t\t\telse _columns[1] = _columns[1] - defaultColumns[0];\n\t\t\tsetColumns(_columns);\n\t\t\treturn true;\n\t\t} else return typeof set === 'boolean' ? set : !state;\n\t}, [columns, setColumns]);\n\n\tconst reduceSettings = useCallback((state: boolean, { set }: { set?: boolean }): boolean => {\n\t\tif (set !== false && boundaries[boundaries.length - 1] === 100) {\n\t\t\tlet _columns = columns.slice(0);\n\t\t\t_columns[_columns.length - 1] = defaultColumns[_columns.length - 1];\n\t\t\tif (_columns[_columns.length - 2] < defaultColumns[_columns.length - 2]) _columns = defaultColumns as [number, number, number];\n\t\t\telse _columns[_columns.length - 2] = _columns[_columns.length - 2] - defaultColumns[_columns.length - 1];\n\t\t\tsetColumns(_columns);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif (!state) setDisplayPlayerRaw('');\n\t\t\treturn typeof set === 'boolean' ? set : !state;\n\t\t};\n\t}, [columns, setDisplayPlayerRaw, boundaries]);\n\t\n\tconst [sidebar, toggleSidebar] = useReducer(reduceSidebar, true);\n\tconst [showSettings, toggleSettings] = useReducer(reduceSettings, true);\n\n\tconst setDisplayPlayer = useCallback((id: string) => {\n\t\tif (columns[0] === 0) {\n\t\t\tlet _columns = columns.slice(0);\n\t\t\t_columns[0] = defaultColumns[0];\n\t\t\tif (_columns[1] < defaultColumns[0]) _columns = defaultColumns as [number, number, number];\n\t\t\telse _columns[1] = _columns[1] - defaultColumns[0];\n\t\t\tsetColumns(_columns);\n\t\t} else if (id && showSettings) toggleSettings({ set: false });\n\t\tsetDisplayPlayerRaw(id);\n\t}, [setColumns, setDisplayPlayerRaw, toggleSettings, columns, showSettings]);\n\n\tconst [playerDictKey, setPlayerDictKey] = useState(Math.random().toString(16).slice(2, 9));\n\n\tconst [status, setStatus] = useState({} as TournamentStatus);\n\tconst [settings, setSettings] = useState({} as TournamentSettings);\n\tconst [rounds, setRounds] = useState([] as Date[]);\n\tconst [players, setPlayers] = useState([] as Player[]);\n\n\tMouseEvents({ columns, boundaries, resize, setColumns, setResize, toggleSidebar, toggleSettings, setDisplayPlayerRaw });\n\n\t/* Fetch Data */\n    \n    const [setDictTimeout, awaitTimeout] = useState(false);\n    const [lastUpdate, setLastUpdate] = useState(Date.now());\n\n\tconst reducePlayerDict = useCallback((state: Map<ID, Player>, action: {\n\t\tid?: ID,\n\t\tplayer?: Player,\n\t\tplayers?: Player[],\n\t\thash?: string\n\t}) => {\n\t\tif (action.id) {\n\t\t\tstate.delete(action.id);\n\t\t\tif (action.id === displayPlayer) setDisplayPlayer('');\n\t\t\treturn state;\n\t\t}\n\t\tlet players: Player[];\n\t\tif (action.players) players = action.players;\n\t\telse players = [action.player];\n        for (let p of players) state.set(p.id, p);\n\t\tsetPlayerDictKey(action.hash || Math.random().toString(16).slice(2, 9));\n\t\treturn state;\n\t}, [setDisplayPlayer, setPlayerDictKey, displayPlayer, lastUpdate])\n\n\tconst [playerDict, setPlayerDict] = useReducer(reducePlayerDict, new Map() as Map<ID, Player>);\n\n\tconst updatePlayerDict = useCallback((force?: boolean): Promise<void> => {\n        if (!force && (Date.now() - lastUpdate < 3000)) {\n            setLastUpdate(Date.now());\n            awaitTimeout(true);\n            return Promise.resolve();\n        }\n        return GET({ url: '/tournament/' + props.id + '/fetchPlayers'})\n            .then((players: Player[]) => {\n                setLastUpdate(Date.now());\n                awaitTimeout(false);\n                setPlayers(players);\n                setPlayerDict({ players });\n            })\n    }, [props.id, setPlayers, setPlayerDictKey, setPlayerDict, lastUpdate]);\n    \n    useEffect(() => {\n        if (!setDictTimeout) return;\n        let x = setTimeout(updatePlayerDict, 5000);\n        return () => clearTimeout(x);\n    }, [setDictTimeout, updatePlayerDict]);\n\n\tconst updateTournamentStatus = useCallback((): Promise<void> => GET({ url: '/tournament/' + props.id + '/getStatus'})\n\t\t.then(setStatus), [props.id, setStatus]);\n\n\tconst updateTournamentSettings = useCallback((): Promise<void> => GET({ url: '/tournament/' + props.id + '/getSettings'})\n\t\t.then(setSettings), [props.id, setSettings]);\n\n\tconst updateSetting = useCallback((k: string, v: any): Promise<void> => POST({\n\t\turl: 'tournament/' + props.id + '/updateSetting',\n\t\tdata: {\n\t\t\t[k]: v\n\t\t}\n\t}).then(updateTournamentSettings), [props.id, updateTournamentSettings]);\n\n\tconst updateRounds = useCallback((): Promise<void> => GET({ url: '/tournament/' + props.id + '/fetchRounds'})\n        .then(setRounds), [props.id, setRounds]);\n        \n\tconst checkIfEnoughPlayers = useCallback(async (): Promise<void> => {\n        toggleNextRound(players.filter(p => p.active !== false).length >= 2);\n    }, [players, toggleNextRound, updatePlayerDict]);\n\t\n\tuseEffect(() => {\n\t\tif (!props.id) return null;\n\t\tupdateRounds();\n\t\tupdateTournamentStatus();\n\t\tupdateTournamentSettings();\n\t\tupdatePlayerDict(true);\n\t}, [props.id, updateRounds, updateTournamentStatus, updateTournamentSettings]);//, updateRounds, updateTournamentStatus, updateTournamentSettings, updatePlayerDict]);\n\n\tif (!props.id) return null;\n\n\tif (crossTable) return (\n\t\t<div className={styles.tournament}>\n\t\t\t<CrossTable\n\t\t\t\tshow={toggleCrossTable}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n\t\t\t\tstatus={status}\n\t\t\t\tplayers={players}\n\t\t\t\tsettings={settings}\n\t\t\t/>\n\t\t\t<Profile\n\t\t\t\tid={props.id}\n\t\t\t\tplayerID={displayPlayer}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tmodifyPlayerDict={(player: Player, hash: string) => setPlayerDict({ player, hash })}\n\t\t\t\tsettings={settings}\n\t\t\t/>\n\t\t</div>\t\t\n\t);\n\n\tif (pasteInput) return (\n\t\t<div className={styles.tournament}>\n\t\t\t<PasteInput\n                closePasteInput={() => setPasteInput(false)}\n                status={status}\n                settings={settings}\n                id={props.id}\n\t\t\t\tupdatePlayerDict={updatePlayerDict}\n\t\t\t/>\n\t\t</div>\t\t\n\t);\n\n\tlet style: CSSProperties = {};\n\tif (resize) style.cursor = 'ew-resize';\n\n\treturn (\n\t\t<div className={styles.tournament} style={{\n\t\t\tgridTemplateColumns: columns.join('% ') + '%',\n\t\t\t...style\n\t\t}}>\n\t\t\t{!sidebar ? null : <Sidebar\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tplayerDictKey={playerDictKey}\n\t\t\t\tupdatePlayerDict={updatePlayerDict}\n\t\t\t\tsetPlayerDict={setPlayerDict}\n\t\t\t\t\n\t\t\t\tsettings={settings}\n\t\t\t\tid={props.id}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n                checkIfEnoughPlayers={checkIfEnoughPlayers}\n                togglePasteInput={() => setPasteInput(true)}\n\t\t\t/>}\n\t\t\t<InfoBar\n\t\t\t\tstatus={status}\n\t\t\t\tsettings={settings}\n\t\t\t\tupdateTournamentStatus={updateTournamentStatus}\n\t\t\t\tround={status.round}\n\t\t\t\ttotalRounds={settings.totalRounds}\n\t\t\t\tcloseTournament={props.closeTournament}\n\t\t\t\ttoggleCrossTable={toggleCrossTable}\n\n\t\t\t\tsetLastRound={setLastRound}\n\t\t\t\tlastRoundOverride={lastRoundOverride}\n\t\t\t\ttriggerError={props.triggerError}\n\t\t\t\tswitchPairings={switchPairings}\n\t\t\t/>\n\t\t\t{switchMode ? <Switch\n\t\t\t\tstatus={status}\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tupdatePlayerDict={updatePlayerDict}\t\t\t\t\n\t\t\t\tsettings={settings}\n\t\t\t\tid={props.id}\n\t\t\t\tplayerDictKey={playerDictKey}\n\t\t\t\ttriggerConfirm={props.triggerConfirm}\n\t\t\t\tswitchPairings={switchPairings}\n\t\t\t/> : <Pairings\n\t\t\t\tstatus={status}\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tupdatePlayerDict={updatePlayerDict}\n\t\t\t\t\n\t\t\t\tsettings={settings}\n\n\t\t\t\tid={props.id}\n\t\t\t\tcanTriggerNextRound={nextRound}\n\t\t\t\ttoggleSidebar={() => toggleSidebar({})}\n\t\t\t\ttoggleSettings={() => toggleSettings({})}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n\t\t\t\tupdateRound={updateTournamentStatus}\n\t\t\t\tsetLastRound={setLastRound}\n\t\t\t\tlastRoundOverride={lastRoundOverride}\n\t\t\t\ttoggleCrossTable={toggleCrossTable}\n\t\t\t\tplayerDictKey={playerDictKey}\n\t\t\t\ttriggerConfirm={props.triggerConfirm}\n\t\t\t/>}\n\t\t\t<Profile\n\t\t\t\tid={props.id}\n\t\t\t\tplayerID={displayPlayer}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tmodifyPlayerDict={(player: Player, hash: string) => setPlayerDict({ player, hash })}\n\t\t\t\tsettings={settings}\n\t\t\t\tplayerDictKey={playerDictKey}\n\t\t\t/>\n\t\t\t{!showSettings ? null : <Settings\n\t\t\t\tupdateTournamentSettings={updateTournamentSettings}\n\t\t\t\tupdateSetting={updateSetting}\n\t\t\t\tstatus={status}\n\t\t\t\tsettings={settings}\n\t\t\t\ttoggleSettings={() => toggleSettings({})}\n\t\t\t\tsetLastRound={setLastRound}\n\t\t\t\ttriggerError={props.triggerError}\n\t\t\t\tplayers={players}\n\t\t\t\tupdateRounds={updateRounds}\n\t\t\t\trounds={rounds}\n\t\t\t/>}\n\t\t</div>\n\t);\n\n}","import React, { CSSProperties, ReactElement } from 'react';\n\nexport function Circle(props: {\n\tradius: string | number\n\tclassName?: string\n\tid?: string\n\tstyle?: CSSProperties\n\tcontent?: string | ReactElement\n\tonClick?: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n\tonMouseEnter?: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n\tonMouseLeave?: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n}) {\n\t\n\treturn <span\n\t\tid={props.id}\n\t\tclassName={props.className}\n\t\tstyle={{\n\t\t\theight: props.radius,\n\t\t\twidth: props.radius,\n\t\t\tlineHeight: props.radius,\n\t\t\tborderRadius: '50%',\n\t\t\tdisplay: 'inline-block',\n\t\t\tcursor: 'default',\n\t\t\t...props.style\n\t\t}}\n\t\tonClick={props.onClick}\n\t\tonMouseEnter={props.onMouseEnter}\n\t\t//onMouseLeave={props.onMouseLeave}\n\t>{props.content}</span>;\n\n}","import { User } from \"../interfaces\";\nimport { daysBetween } from \"./prototype\";\n\n\nexport const defaultUserSettings = {\n\tusername: {\n\t\tname: 'Username',\n\t\ttype: 'string',\n\t\tlocked: true,\n\t\tprimaryKey: true,\n\t},\n\temail: {\n\t\tname: 'Email',\n\t\ttype: 'string',\n\t\tlocked: true,\n\t\tdefaultValue: ''\n\t},\n    licensed: {\n        name: 'License',\n        type: 'number',\n        defaultValue: 0,\n        locked: true,\n        convert: (v: number) => {\n            if (v === 1) return 'Trial';\n            if (v === 2) return 'Licensed';\n            if (v === 3) return 'Admin';\n            return 'Free';\n        }\n    },\n    daysRemaining: {\n        name: 'Trial time',\n        type: 'number',\n        locked: true,\n        value: (user: User) => Math.floor(30 - daysBetween(new Date(user.lastLicensed), new Date(Date.now()))),\n        convert: (v: number) => v + ' days'\n    },\n    lastLicensed: {\n        name: 'Last licensed',\n        type: 'date',\n        defaultValue: null,\n        locked: true,\n        convert: (v: string) => new Date(v).toString().slice(0, 21),\n        validate: (v: string) => !!v\n    },\n\tcreatedAt: {\n\t\tname: 'Account created',\n\t\tconvert: (v: string) => new Date(v).toString().slice(0, 21),\n\t\tlocked: true,\n\t\tdefaultValue: Date.now()\n\t},\n\tupdatedAt: {\n\t\tname: 'Last seen',\n\t\tconvert: (v: string) => new Date(v).toString().slice(0, 21),\n\t\tlocked: true,\n\t\tdefaultValue: Date.now()\n\t}\n} as {\n\t[key: string]: {\n\t\tname?: string,\n\t\tenum?: string[],\n        convert?: (v: any) => string,\n        validate?: (v: any) => boolean\n        value?: (user: User) => any\n\t\ttype?: string\n\t\tlocked?: boolean\n\n\t\tprimaryKey?: boolean\n\t\tdefaultValue?: any\n\t}\n};","import React, { ReactElement, useEffect, useCallback, useState, useMemo, useRef } from 'react';\n\nimport appStyles from '../css/app.module.css';\nimport profileStyles from '../css/profile.module.css';\nimport styles from '../css/menu.module.css';\n\nimport { NumberDictionary, StringDictionary, NavData, User } from '../interfaces';\nimport { Crown } from './Login';\nimport { GET, POST, cookies } from '../utils/requests';\nimport { AxiosError } from 'axios';\nimport { Circle } from '../components/Vectors';\nimport { calculateHypotenuse, useStateWithLabel } from '../utils/prototype';\nimport { defaultUserSettings } from '../utils/userSettings';\n\nimport { IoMdArrowRoundBack, IoIosSettings, IoMdClose, IoIosCloseCircle } from 'react-icons/io';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport { TiThMenu } from 'react-icons/ti';\nimport { MdRefresh } from 'react-icons/md';\nimport { FaEarlybirds, FaPlusCircle } from 'react-icons/fa';\n\nfunction getElementCentre(elem: HTMLElement): {x: number, y: number} {\n    var rect = elem.getBoundingClientRect();\n    return {\n        x: (rect.left + rect.right) / 2,\n        y: (rect.top + rect.bottom) / 2 - 30 //on account of parent being 30px from top\n    };\n}\n\nfunction renderLineBetween(linesMounted: boolean, start: {x: number, y: number}, end: {x: number, y: number}, width: number): ReactElement {\n    let diff = {x: Math.abs(end.x - start.x), y: Math.abs(end.y - start.y)};\n    let length = calculateHypotenuse(end.x - start.x, end.y - start.y);\n\n    let sign = Math.sign((end.x - start.x) * (end.y - start.y));\n    let angle = Math.atan(diff.y / diff.x) * 180 / Math.PI;\n    return <div key={['line', end.x, end.y].join('.')} className={styles.line} style={{\n        width: length + 'px',\n        height: width + 'px',\n        backgroundColor: 'white',\n        position: 'absolute',\n        left: !linesMounted ? start.x - (diff.x / 2) : ((start.x + end.x) / 2) - (diff.x / 2),\n        top: !linesMounted ? start.y : ((start.y + end.y) / 2),\n        transform: `rotate(${angle * sign}deg) scaleX(${linesMounted ? 1 : 0}) scaleY(1)`,\n        opacity: !linesMounted ? 0 : 1,\n        transition: 'transform 3s, left 3s, top 3s, opacity 3s'\n    }}/>;\n}\n\ninterface MenuProps {\n\tsessionID: string\n\tendSession: () => void\n\tsetTournamentID: (id: string) => void\n\ttriggerConfirm: (message: string, resolve: () => void, reject: () => void) => void\n}\n\nexport default function Menu(props: MenuProps): ReactElement {\n\n    const [tournamentDict, setTournamentDict] = useStateWithLabel({} as StringDictionary, 'tournamentDict');\n    const [loading, setLoading] = useStateWithLabel(true, 'loading');\n    const [loadingOverride, overrideLoading] = useStateWithLabel(false, 'loadingOverride');\n    const [linesMounted, mountLines] = useStateWithLabel(false, 'linesMounted');\n    const [linesAdjusted, adjustLines] = useStateWithLabel(false, 'adjustedLines');\n    const [selected, select] = useStateWithLabel('', 'selected');\n\n\tconst updateTournamentDict = useCallback((): Promise<StringDictionary> => {\n\t\treturn GET({ url: '/tournaments' })\n\t\t\t.then((tournamentDict: StringDictionary) => {\n\t\t\t\tsetTournamentDict(tournamentDict);\n\t\t\t\treturn tournamentDict;\n\t\t\t})\n\t\t\t.catch((e: Error) => {\n\t\t\t\tconsole.error(e);\n\t\t\t\tprops.endSession();\n\t\t\t\treturn {} as StringDictionary;\n\t\t\t});\n    }, [setTournamentDict, props.endSession]);\n\n\tconst validateTournament = useCallback((tournamentID: string): Promise<void> => {\n\t\tif (!tournamentID) return Promise.reject();\n\t\tif (!Object.values(tournamentDict).length) {\n\t\t\treturn updateTournamentDict()\n\t\t\t\t.then((tournamentDict: StringDictionary) => {\n\t\t\t\t\tif (tournamentDict[tournamentID] === undefined) throw new Error();\n\t\t\t\t\treturn;\n\t\t\t\t});\n\t\t} else return tournamentID in tournamentDict ? Promise.resolve() : Promise.reject();\n\t}, [tournamentDict, updateTournamentDict]);\n\n\tconst setTournamentID = useCallback((tournamentID: string): Promise<void> => {\n\t\treturn validateTournament(tournamentID)\n\t\t\t.then(() => {\n\t\t\t\tcookies.set('tournamentID', tournamentID, { path: '/' }).catch(console.error);\n\t\t\t\tprops.setTournamentID(tournamentID);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tcookies.remove('tournamentID').catch(console.error);\n\t\t\t\tprops.setTournamentID('');\n\t\t\t});\n\t}, [validateTournament, props.setTournamentID]);\n\n\tconst createNewTournament = useCallback(async (): Promise<void> => {\n\t\ttry {\n\t\t\tlet id = await POST({ url: '/initialise' });\n\t\t\tif (!id) throw new Error();\n\t\t\tprops.setTournamentID(id);\n\t\t\tawait updateTournamentDict();\n\t\t} catch (error) {\n\t\t\tlet e = error as AxiosError;\n\t\t\tif (!e.response || e.response.status === 401) props.endSession();\n\t\t}\n\t}, [props.setTournamentID, updateTournamentDict, props.endSession]);\n\n\tconst removeID = useCallback(async (id?: string): Promise<void> => {\n\t\tif (!id) {\n\t\t\tawait POST({ url: '/closeAuthorization/all' });\n\t\t\tsetTournamentDict({});\n\t\t} else {\n\t\t\tlet dict = Object.assign({}, tournamentDict);\n\t\t\tdelete dict[id];\n\t\t\tawait POST({ url: '/closeAuthorization/' + id });\n\t\t\tsetTournamentDict(dict);\t\n\t\t}\n    }, [tournamentDict, setTournamentDict]);\n\n    const [lines, setLines] = useState([] as ReactElement[]);\n\tconst logoRef = useRef() as React.RefObject<HTMLDivElement>\n\tconst drawLines = useCallback(() => {\n        if (!logoRef.current) return;\n\t\tlet startCoords = getElementCentre(logoRef.current);\n\t\tlet circles = Array.from(document.getElementsByClassName(styles.dot)) as HTMLElement[];\n\t\tlet _lines = [] as ReactElement[];\n\t\tfor (let c of circles) {\n            if (c.style.opacity === '0') continue;\n\t\t\t_lines.push(renderLineBetween(linesMounted, startCoords, getElementCentre(c), 2));\n        }\n        setLines(_lines);\n    }, [logoRef, renderLineBetween, linesMounted]);\n    useEffect(() => {\n        drawLines();\n        mountLines(true);\n        let x = setTimeout(() => adjustLines(true), 3000);\n        return () => clearTimeout(x);\n    }, [drawLines, adjustLines, mountLines, selected]);\n\n\tconst navData = useMemo((): NavData => {\n\t\treturn {\n\t\t\tcreate: {\n\t\t\t\tonClick: createNewTournament,\n\t\t\t\tcontent: <AiOutlinePlus />,\n\t\t\t\tdescription: 'Create new Swiss tournament'\n\t\t\t},\n\t\t\troundRobin: {\n\t\t\t\tonClick: () => {},\n\t\t\t\tcontent: <FaEarlybirds />,\n\t\t\t\tdescription: 'Create new Round-Robin tournament'\n\t\t\t},\n\t\t\tsettings: {\n\t\t\t\tonClick: () => {},\n\t\t\t\tcontent: <IoIosSettings />,\n\t\t\t\tdescription: 'User settings'\n\t\t\t},\n\t\t\tload: {\n\t\t\t\tonClick: updateTournamentDict,\n\t\t\t\tcontent: <TiThMenu />,\n\t\t\t\tdescription: 'Load previous tournaments'\n\t\t\t},\n\t\t\tback: {\n\t\t\t\tonClick: props.endSession,\n\t\t\t\tcontent: <IoMdArrowRoundBack />,\n\t\t\t\tdescription: 'Exit to login'\n\t\t\t},\n\t\t\tclose: {\n\t\t\t\tonClick: () => props.triggerConfirm('Delete all saved tournaments?', removeID, () => {}),\n\t\t\t\tnoSet: true,\n\t\t\t\tcontent: <IoMdClose />,\n\t\t\t\tdescription: 'Close all tournaments',\n\t\t\t\tstyle: {\t\t\t\t\t\n\t\t\t\t\tborder: '8px solid darkred'\n\t\t\t\t}\n\t\t\t},\n\t\t\trefresh: {\n\t\t\t\tonClick: updateTournamentDict,\n\t\t\t\tnoSet: true,\n\t\t\t\tcontent: <MdRefresh />,\n\t\t\t\tdescription: 'Refresh tournament list',\n\t\t\t\tstyle: {\t\t\t\t\t\n\t\t\t\t\tborder: '8px solid darkblue'\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}, [createNewTournament, updateTournamentDict, props.endSession, props.triggerConfirm, removeID, select]);\n\n\tconst handleNavData = useCallback((keys: string[], side: 'left' | 'right'): ReactElement[] => {\n\t\tlet data = keys.reduce((acc: NavData, curr: string) => {\n\t\t\tif (!(curr in navData)) return acc;\n\t\t\tacc[curr] = navData[curr];\n\t\t\treturn acc;\n\t\t}, {});\n\t\treturn Object.entries(data).reduce((acc, [id, meta], i) => {\n\t\t\tlet arr = [\n                <div\n                    className={[styles.dotDescription, selected === id ? styles.descriptionSelected : ''].join(' ')}\n                    key={['navData', side, 'description', i].join('.')}\n                >\n\t\t\t\t\t{meta.description}\n\t\t\t\t</div>,\n\t\t\t\t<Circle\n\t\t\t\t\tkey={['navData', side, 'dot', i].join('.')}\n\t\t\t\t\tradius='50px'\n\t\t\t\t\tclassName={[styles.dot, !linesAdjusted ? styles.dotUnloaded : ''].join(' ')}\n\t\t\t\t\tid={id}\n\t\t\t\t\tcontent={meta.content}\n\t\t\t\t\tonClick={async (e) => {\t\n\t\t\t\t\t\tif (selected === id) select('');\n\t\t\t\t\t\telse {\t\t\t\t\n\t\t\t\t\t\t\tawait meta.onClick(e);\n\t\t\t\t\t\t\tif (!meta.noSet) select(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={meta.style}\n\t\t\t\t/>\n\t\t\t];\n\t\t\tif (side === 'right') arr = arr.reverse();\n            acc.push(<div\n                className={[styles.dotContainer, linesAdjusted ? styles.dotContainerLoaded : ''].join(' ')}\n                key={['NavData', side, 'div', i].join('i')}\n            >\n\t\t\t\t{arr}\n\t\t\t</div>);\n\t\t\treturn acc;\n\t\t}, [] as ReactElement[]);\n    }, [navData, linesAdjusted, selected, select]);\n\n    const loadTournamentDict = useCallback(async () => {\n        let tournamentID = await cookies.get('tournamentID');\n\t\tif (tournamentID) setTournamentID(tournamentID);\n    }, [setTournamentID]);\n\n    useEffect(() => {\n        loadTournamentDict();\n    }, [loadTournamentDict]);\n    useEffect(() => {\n        window.addEventListener('resize', drawLines);\n        let x = setTimeout(() => setLoading(false), 3000);\n        return () => {\n            window.removeEventListener('resize', drawLines);\n            clearTimeout(x);\n        };\n    }, [drawLines, setLoading]);\n\n    const foundNavData = useMemo((): ReactElement[] => {\n        switch (selected) {\n            case 'load':\n                return handleNavData(['refresh', 'close', 'load'], 'left');\n            case 'settings':\n                return handleNavData(['create', 'settings', 'load'], 'left');\n            default:\n                return handleNavData(['create', 'settings', 'load'], 'left');\n        }\n    }, [selected, handleNavData]);\n\n    const foundProfile = useMemo(() => {\n        switch (selected) {\n            case 'load':\n                return <Listing\n                    setTournamentID={setTournamentID}\n                    createNewTournament={createNewTournament}\n                    removeID={removeID}\n                    updateTournamentSettings={updateTournamentDict}\n                    tournamentDict={tournamentDict}\n                    closeListing={() => select('')}\n                    triggerConfirm={props.triggerConfirm}\n                />;\n            case 'settings':\n                return <UserSettings\n                    updateTournamentSettings={() => Promise.resolve()}\n                    updateSetting={() => Promise.resolve()}\n                    closeListing={() => select('')}\n                />;\n            default:\n                return handleNavData(['back'], 'right');\n            }\n    }, [select, selected, setTournamentID, createNewTournament, removeID, updateTournamentDict, tournamentDict, props.triggerConfirm, handleNavData]);\n\n    return (\n        <div className={appStyles.canvas}>\n            {lines}\n            <div className={[appStyles.column, styles.leftColumn].join(' ')}>\n                {foundNavData}\n            </div>\n            <div ref={logoRef} className={[appStyles.column, styles.column].join(' ')}>\n                <Crown setLoading={(l: boolean) => overrideLoading(l)} loading={loading || loadingOverride} classNames={{\n                    logo: styles.logo\n                }}/>\n            </div>\n            <div className={[appStyles.column, styles.rightColumn].join(' ')}>\n                {foundProfile}\n            </div>\n        </div>\n    );\n\n}\n\ninterface ListingProps {\n\tsetTournamentID: (id: string) => void\n\tcreateNewTournament: () => Promise<void>\n\tremoveID: (id: string) => void\n\tcloseListing: () => void\n\tupdateTournamentSettings: () => void\n\ttournamentDict: StringDictionary\n\ttriggerConfirm: (message: string, resolve: () => void, reject: () => void) => void\n}\n\nexport function Listing(props: ListingProps) {\n\n    const [height, setHeight] = useState(0);\n\n\tconst generateListing = useCallback((tournamentDict: StringDictionary) => {\n\t\tlet titles = Object.keys(tournamentDict).reduce((acc: NumberDictionary, curr: string) => {\n\t\t\tlet title = props.tournamentDict[curr];\n\t\t\tif (!title) return acc;\n\t\t\tif (!acc[title]) acc[title] = 0;\n\t\t\tacc[title]++;\n\t\t\treturn acc;\n\t\t}, {});\n\t\tlet buttons = Object.entries(tournamentDict).map(([tournamentID, name], i: number) => {\n\t\t\tlet displayName = titles[name] === undefined ? tournamentID : titles[name] === 1 ? name : name + '\\n' + tournamentID;\n\t\t\treturn (\n\t\t\t\t<div className={[profileStyles.row, styles.row].join(' ')} key={['row', i].join('.')}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={[styles.clickButton, 'fieldBox'].join(' ')}\t\t\t\t\t\t\n\t\t\t\t\t\tonClick={() => props.setTournamentID(tournamentID)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{displayName}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={[styles.clickButton, styles.close, 'fieldBox'].join(' ')} onClick={() => {\n\t\t\t\t\t\tprops.triggerConfirm('Delete tournament \\'' + displayName + '\\'?\\nPlease note this action cannot be undone.', () => props.removeID(tournamentID), () => {});\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<IoIosCloseCircle />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}).filter(elem => elem);\n\t\treturn buttons;\n\t}, [props.tournamentDict, props.setTournamentID, props.triggerConfirm, props.removeID]);\n\n    const listing = React.useRef() as React.RefObject<HTMLDivElement>\n    \n    useEffect(() => {\n        let x = setTimeout(() => {\n            if (!listing.current) return;\n            setHeight(listing.current.getBoundingClientRect().height);\n        }, 250);\n        return () => clearTimeout(x);\n    }, [listing, props.tournamentDict, generateListing, setHeight]);\n\n    return (\n        <div className={styles.sidebar}>\n            <div className={[profileStyles.profile, styles.profile].join(' ')}>\t\t\t\t\n                <div className='topBanner'>\n                    Load Tournament\n                </div>\n                <div className={styles.listWrapper} style={{height}}>\n                    <div ref={listing} className={styles.listing}>\n                        {generateListing(props.tournamentDict)}\n                    </div>\n                </div>\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                <div onClick={props.createNewTournament} className='button'>\n                    <FaPlusCircle />\n                </div>\n                <div onClick={props.closeListing} className='button'>\n                    <IoMdArrowRoundBack />\n                </div>\n            </div>\n        </div>\n    );\n}\n\ninterface UserSettingProps {\n\tupdateTournamentSettings: () => Promise<void>\n\tupdateSetting: (k: string, v: any) => Promise<void>\n    closeListing: () => void\n}\n\nexport function UserSettings (props: UserSettingProps) {\n\n    const [height, setHeight] = useState(0);\n    const [user, setUser] = useStateWithLabel({} as User, 'user');\n\tconst updateTournamentSettings = useCallback((): Promise<void> => GET({ url: '/profile'})\n        .then(setUser), [setUser]);\n\n    useEffect(() => {\n        updateTournamentSettings();\n    }, [updateTournamentSettings]);\n\n\n    const listing = React.useRef() as React.RefObject<HTMLDivElement>\n    \n    useEffect(() => {\n        let x = setTimeout(() => {\n            if (!listing.current) return;\n            setHeight(listing.current.getBoundingClientRect().height);\n        }, 250);\n        return () => clearTimeout(x);\n    }, [listing, setHeight]);\n\n\tconst renderSettings = useMemo((): ReactElement[] => {\n\t\treturn Object.entries(defaultUserSettings).map(([k, def], i): ReactElement => {\n            let v = user[k] || def.defaultValue;\n            if (def.value) v = def.value(user);\n            if (def.type === 'number') v = Number(v);\n            if (def.validate) {\n                if (!def.validate(v)) return null;\n            }\n            let content = v;\n            if (def.convert) content = def.convert(v) as string;\n\t\t\tlet displayContent = typeof content !== 'undefined' ? content.toString() : '\\u200b';\n\t\t\treturn (\n\t\t\t\t<div className={profileStyles.row} key={['row', i].join('.')}>\n\t\t\t\t\t<div className={['fieldBox'].join(' ')}>{def.name + ':'}</div>\n                    <div\n                        style={{\n                            cursor: def.type === 'link' ? 'copy' : 'default'\n                        }}\n                        className={['fieldBox', k === 'licensed' ? styles['license' + v.toString()] : ''].join(' ')}\n                        onClick={def.type !== 'link' ? null : () => navigator.clipboard.writeText(displayContent)}\n                    >\n                        {displayContent}\n                    </div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}, [user]);\n\n    return (\n        <div className={styles.sidebar}>\n            <div className={[profileStyles.profile, styles.profile].join(' ')}>\t\n                <div className='topBanner'>\n                    Settings\n                </div>\n                <div className={styles.listWrapper} style={{height}}>\n                    <div ref={listing} className={styles.listing}>\n                        {renderSettings}\n                    </div>\n                </div>\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                <div onClick={props.closeListing} className='button'>\n                    <IoMdArrowRoundBack />\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useRef, useEffect } from 'react';\nimport styles from '../css/alert.module.css';\nimport { IoMdClose, IoMdCheckbox } from 'react-icons/io';\n\nexport interface AlertProps {\n\tmessage: string\n\ttitle?: string\n\tconfirm?: boolean\n\tresolve?: () => void\n\treject?: () => void\n\tclose: () => void\n}\n\nexport default function Alert (props: AlertProps) {\n\t\n    const message = typeof props.message === 'string' ? props.message : JSON.stringify(props.message, null, 4);\n\n    const alertBox = useRef(null as HTMLButtonElement);\n    useEffect(() => {\n        alertBox.current.focus();\n    }, [alertBox]);\n\n    return (\n        <div className={styles.alertBox}>\n            {props.title ? <div>{props.title}</div> : null}\n            <div className={[styles.textBox].join(' ')}>\n                {message}\n            </div>\n            <div className={styles.response}>\n                {\n                    !props.confirm ?\n                        <button className={[styles.NO, 'button'].join(' ')} onClick={props.close} ref={alertBox}>\n                            OK\n                        </button> :\n                        <>\n                            <button className={[styles.NO, 'button'].join(' ')} ref={alertBox} onClick={() => {\n                                props.reject();\n                                props.close();\n                            }}>\n                                <IoMdClose />\n                            </button>\n                            <button className={[styles.YES, 'button'].join(' ')} onClick={() => {\n                                props.resolve();\n                                props.close();\n                            }}>\n                                <IoMdCheckbox />\n                            </button>\n                        </>\n                }\n            </div>\n        </div>\n    );\n\n}","import React, { ReactElement, useState, useReducer, useCallback, useEffect, useMemo } from 'react';\nimport './App.css';\nimport Login from './tournament/Login';\nimport StatusBar from './StatusBar';\nimport Tournament from './Tournament';\nimport { POST, cookies, setErrorCallback } from './utils/requests';\n//import { isElectron, isDev, isProd } from './utils/electron';\n\nimport Menu from './tournament/Menu';\nimport Alert from './tournament/Alert';\nimport { useStateWithLabel } from './utils/prototype';\n\ninterface AlertAction {\n\tmessage: string\n\ttitle?: string\n\terror?: boolean\n\tconfirm?: boolean\n\tresolve?: () => void\n\treject?: () => void\n\tclose?: () => void\n}\n\nexport default function App(): ReactElement {\n\n\tconst [sessionID, setSession] = useState('');\n\tconst [tournamentID, setTournament] = useState('');\n\tconst [mode, setMode] = useStateWithLabel('login' as 'login' | 'menu' | 'tournament' | 'grid', 'mode');\n\tconst [alertBox, setAlertBox] = useReducer((state: AlertAction, action: AlertAction) => {\n\t\treturn Object.assign({}, state, action);\n\t}, { message: '', title: '', error: true, confirm: false });\n\n\tconst closeAlertBox = useCallback((): void => setAlertBox({ message: '' }), [setAlertBox]);\n\tconst triggerConfirm = useCallback((message: string, resolve: () => void, reject: () => void) => setAlertBox({\n\t\tmessage,\n\t\ttitle: 'CONFIRM ACTION',\n\t\tconfirm: true,\n\t\tresolve,\n\t\treject\n\t}), [setAlertBox]);\n\tconst triggerError = useCallback((message: string) => setAlertBox({message, title: 'ERROR', confirm: false }), [setAlertBox]);\n\n\tconst setTournamentID = useCallback((tournamentID: string): void => {\n\t\tsetTournament(tournamentID);\n\t\tsetMode(tournamentID ? 'tournament' : 'menu');\n\t}, [setTournament, setMode]);\n\n\tconst hasLoggedIn = useCallback(async (sessionID: string): Promise<void> => {\n\t\tawait cookies.set('sessionID', sessionID, { path: '/' });\n\t\tsetSession(sessionID);\n\t\tsetMode('menu');\n\t}, [setSession, setMode]);\n\n\tconst closeTournament = useCallback(async (): Promise<void> => {\n\t\tawait cookies.set('tournamentID', '', { path: '/' });\n\t\tsetMode('menu');\n\t\tsetTournament('');\n\t}, [setTournament, setMode]);\n\n\tconst endSession = useCallback(async (): Promise<void> => {\n\t\ttry {\n\t\t\tawait cookies.set('sessionID', '', { path: '/' });\n\t\t\tawait POST({ url: '/endSession' });\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t} finally {\n\t\t\tsetSession('');\n\t\t\tsetMode('login');\n\t\t}\n\t}, [setSession, setMode]);\n\t\n\tuseEffect(() => {\n\t\tsetErrorCallback((errorMessage: string) => triggerError(errorMessage));\n\t\treturn () => setErrorCallback(() => {});\n\t}, [triggerError]);\n\n\tconst pageLoad = useCallback(async () => {\n\t\tlet sessionID = await cookies.get('sessionID');\n\t\tif (!sessionID) return;\n\t\tsetSession(sessionID);\n\t\tsetMode('menu');\n\t}, [setSession, setMode])\n\n\tuseEffect(() => {\n\t\tpageLoad();\n\t}, [pageLoad]);\n\n\tconst Mode: ReactElement = useMemo(() => {\n\t\tswitch (mode) {\n\t\t\tcase 'login': {\n\t\t\t\treturn <Login login={hasLoggedIn}/>;\n\t\t\t}\n\t\t\tcase 'menu': {\n\t\t\t\treturn <Menu\n\t\t\t\t\tsessionID={sessionID}\n\t\t\t\t\tendSession={endSession}\n\t\t\t\t\tsetTournamentID={setTournamentID}\n\t\t\t\t\ttriggerConfirm={triggerConfirm}\n\t\t\t\t/>;\n\t\t\t}\n\t\t\tcase 'tournament': {\n\t\t\t\treturn <Tournament\n\t\t\t\t\tid={tournamentID}\n\t\t\t\t\tcloseTournament={closeTournament}\n\t\t\t\t\ttriggerError={triggerError}\n\t\t\t\t\ttriggerConfirm={triggerConfirm}\n\t\t\t\t/>;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tconsole.error('invalid mode');\n\t\t\t\tsetMode('login');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t}\n\t}, [mode, hasLoggedIn, sessionID, endSession, setTournamentID, triggerConfirm, tournamentID, closeTournament, triggerError, setMode])\n\n\treturn (\n\t\t<>\n\t\t\t<StatusBar/>\n\t\t\t<div className='stage' style={{\n\t\t\t\tbackgroundImage: `url(${process.env.PUBLIC_URL}/images/leaves-texture.png)`\n\t\t\t}}>\n\t\t\t\t{Mode}\n\t\t\t\t{alertBox.message && alertBox.message.length > 10 ? <Alert\n\t\t\t\t\t{...alertBox}\n\t\t\t\t\tclose={closeAlertBox}\n\t\t\t\t/> : null}\n\t\t\t</div>\n\t\t</>\n\t);\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App.tsx';\nimport * as serviceWorker from './serviceWorker';\nimport Menu from './tournament/Menu';\n\nfunction Empty() {\n\treturn (\n\t\t<div>\n\t\t\t<Menu\n\t\t\t\tsessionID={() => {}}\n\t\t\t\tendSession={() => {}}\n\t\t\t\tsetTournamentID={() => {}}\n\t\t\t\ttriggerConfirm={() => {}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n//render(<Empty />, document.getElementById('root'));\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}