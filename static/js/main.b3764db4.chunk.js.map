{"version":3,"sources":["css/login.module.css","css/crosstable.module.css","css/pairings.module.css","css/app.module.css","css/tournament.module.css","css/statusbar.module.css","css/alert.module.css","css/components.module.css","assets/icons/chessCom.svg","assets/icons/lichess.svg","css/profile.module.css","css/menu.module.css","css/sidebar.module.css","utils/electron.ts","utils/cookies.ts","utils/requests.ts","utils/regexes.ts","tournament/Login.tsx","StatusBar.tsx","components/EditableField.tsx","components/SinglePairing.tsx","components/index.ts","tournament/InfoBar.tsx","tournament/Pairings.tsx","components/Buttons.tsx","components/CollapsableSection.tsx","tournament/Sidebar.tsx","tournament/Profile.tsx","utils/prototype.ts","assets/settings.ts","tournament/Settings.tsx","tournament/CrossTable.tsx","tournament/PasteInput.tsx","Tournament.tsx","components/Vectors.tsx","tournament/Menu.tsx","tournament/Alert.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","isElectron","window","require","isProd","remote","win","session","getCurrentWindow","minimize","maximize","restore","close","isMaximized","electronCookies","webContents","cookies","console","log","process","windowCookies","universalCookies","errorCallback","get","then","arr","reduce","acc","curr","name","value","catch","e","Promise","resolve","getAll","map","cookie","options","details","Object","assign","date","Date","now","url","expirationDate","setFullYear","getFullYear","set","error","remove","reject","server","config","prodServer","resultsServer","prodResultsServer","GET","method","axios","res","data","response","status","statusText","split","pop","join","POST","headers","FORM","preventDefault","persist","form","target","constructor","parentElement","Error","Array","from","type","Number","action","setErrorCallback","c","defaults","baseURL","interceptors","request","use","a","JSON","stringify","Authorization","email","chessComTeam","Crown","props","className","appStyles","logo","classNames","style","visibility","loading","staticLogo","src","alt","crownOutline","loadingGif","Login","useState","setLoading","register","setRegister","errorMessage","triggerError","handleSubmit","useCallback","sessionID","login","finally","loginForm","useMemo","styles","onSubmit","required","placeholder","input","forgottenContainer","forgotten","submit","registerForm","minLength","pattern","regexes","source","loginSection","initialiseButton","loginBackground","flip","onClick","setTimeout","foreground","registerForeground","loginForeground","crownBuild","l","canvas","column","messageBar","StatusBar","maximised","minimise","statusBar","title","menu","favicon","draggable","exec","EditableField","content","setContent","alwaysEnabled","editContent","setEditContent","mustFocus","focus","inputField","useRef","divArea","decrement","button","parentNode","stepDown","increment","stepUp","handleClear","handleAny","handleInfinity","useHandleSubmit","onSubmitSuccess","firstChild","exitEditing","keyCode","useEffect","current","select","useMouseDown","contains","myID","Math","random","toString","slice","displayContent","inputType","isNaN","valueOf","toLocaleString","show","any","ref","container","additionalStyles","id","defaultValue","defaultEditContent","tzoffset","getTimezoneOffset","toISOString","toDatetimeLocal","interDate","setUTCHours","getUTCHours","getUTCMinutes","setUTCMinutes","roundUpDate","formRef","onKeyDown","additionalInputProps","infinity","clear","submitHidden","cancel","children","generateForm","editableField","defaultContent","SinglePairing","undefined","valid","setValid","hover","setHover","handleChange","validate","result","resultsBridge","setResult","neutral","expand","expanded","transform","tournamentID","min","step","inputClassName","onChange","centre","tooltip","tabIndex","reset","entries","hidden","i","key","PairingDetails","height","setHeight","getBoundingClientRect","lichess","individual","gameLinks","lichessLink","lichessTeamLink","chessCom","chessComLink","chessComTeamLink","v","matches","match","site","detailsContent","row","board","update","k","inputURL","linkSubmit","dispatchEvent","Event","icons","callback","addEventListener","removeEventListener","InfoProps","lastRound","lastRoundOverride","settings","totalRounds","round","uri","titleBar","gridColumn","header","updateTournamentStatus","closeTournament","role","aria-label","setLastRound","toggleCrossTable","Pairings","useReducer","resultsState","updateResults","reduceResults","state","W","B","histories","displayPoints","pairingData","setPairings","Map","results","setResults","getPairings","playerDict","size","pairings","w","b","playerDictKey","getDisplayName","player","displayName","competitors","firstName","lastName","score","pending","values","filter","every","triggerNextRound","updatePlayerDict","updateRound","validateForm","resultWhite","resultBlack","validity","gamePointTotal","setExpanded","listing","dict","black","wDisplay","bDisplay","push","pairing","playerInfo","bye","setDisplayPlayer","inputResult","topBanner","pairingContainer","toggleSidebar","nextButton","canTriggerNextRound","length","waitButton","finishButton","generateNextButton","toggleSettings","Bottom","buttons","item","func","icon","SectionBreak","sectionContainer","sectionHeader","sectionHeaderText","CollapsableSection","internalExpanded","innerDiv","useInternalState","sectionToggle","sectionListWrapper","sectionList","ActivePlayer","requireLastName","playerLine","active","playerInactive","allowNewPlayers","rating","played","edit","editPlayer","clearPlayer","activate","activatePlayer","EditableForm","firstInput","createRef","scoreSection","width","onPaste","handlePaste","display","max","Sidebar","setRound","players","setPlayersRaw","linkedState","setLinkedState","updatePlayerState","setPlayers","refresh","sort","checkIfEnoughPlayers","updatePlayer","params","setPlayerDict","clearPlayerList","text","clipboardData","getData","trim","json","CSV","parse","delimitersToGuess","dynamicTyping","fastMode","TypeError","r","all","Forms","forms","Entry","entryProps","setEdit","setPlayer","newPlayer","List","list","section","p","sidebar","playersSection","bottomBanner","togglePasteInput","sidebarStyles","clearClash","SingleClash","handleInput","firstChoice","toLowerCase","startsWith","autofill","setSelectionRange","onInput","autoComplete","Profile","playerID","setPlayerID","getNameFromPlayer","_player","refetch","updatePlayerFromProps","opp","renderEntry","clashes","setClashes","updateClashes","oppId","playerId","Name","profile","Status","Rating","performanceRating","Playing","isPlaying","history","total","totalGames","scores","Score","gamePoints","expectedScore","toFixed","expectedGameScore","allowClashes","find","oppName","minPlayer","colour","resultsRow","capitalise","str","toUpperCase","useStateWithLabel","initialValue","setValue","useDebugValue","defaultSettings","general","tournamentId","locked","primaryKey","enum","convert","pairingSystem","lockOnInit","Infinity","nb","allow","ratingSystem","permissions","public","showRatings","allowSelfSubmissions","roundTimes","points","lossReward","drawReward","winReward","byeReward","performanceSystem","stats","nbPlayers","activePlayers","matchesPlayed","gamesPlayed","averageRating","sum","createdAt","updatedAt","defaultUserSettings","username","licensed","daysRemaining","user","floor","start","lastLicensed","watchProps","def","keys","Settings","sectionExpando","setSection","handleToggle","index","indexOf","setIndex","updateSetting","message","clearRound","watchedSettings","includes","document","querySelectorAll","h","firstElementChild","modifyHeightValues","renderRound","roundRow","rounds","updateRounds","semiPresent","endsWith","cursor","navigator","clipboard","writeText","updateTournamentSettings","editable","roundEntries","columns","pre","postConvert","s","entry","roundColumn","output","parseInt","aN","bN","post","parseFloat","winPercentage","ratingDifference","expectedDifference","CrossTable","roundHeaders","meta","setSortHeader","sortBy","renderRounds","renderRows","rowsData","pres","rowData","sortFunc","sortMeta","sortCol","tr","j","cell","gridPage","titles","closeButton","table","scope","th","headerCell","PasteInput","textArea","closePasteInput","subheader","textarea","defaultColumns","eventName","event","createEvent","initEvent","useCacheColumns","cachedColumns","setColumns","Tournament","resize","setResize","boundaries","displayPlayer","setDisplayPlayerRaw","crossTable","setCrossTable","pasteInput","setPasteInput","nextRound","toggleNextRound","loadColumns","cols","reduceSidebar","_columns","reduceSettings","showSettings","setPlayerDictKey","setStatus","setSettings","setRounds","mouseClick","setMouseClick","handleMouseMove","percentX","x","innerWidth","prev","left","right","findIndex","abs","MouseEvents","setDictTimeout","awaitTimeout","lastUpdate","setLastUpdate","reducePlayerDict","delete","hash","force","clearTimeout","tournament","modifyPlayerDict","gridTemplateColumns","Circle","radius","lineHeight","borderRadius","onMouseEnter","getElementCentre","elem","rect","y","top","bottom","renderLineBetween","linesMounted","end","base","diff","sqrt","pow","sign","angle","atan","PI","line","backgroundColor","position","opacity","transition","Menu","tournamentDict","setTournamentDict","loadingOverride","overrideLoading","mountLines","linesAdjusted","adjustLines","selected","updateTournamentDict","endSession","validateTournament","setTournamentID","path","createNewTournament","removeID","lines","setLines","logoRef","drawLines","startCoords","_lines","getElementsByClassName","dot","navData","create","description","roundRobin","load","back","triggerConfirm","noSet","border","handleNavData","side","dotDescription","descriptionSelected","dotUnloaded","reverse","dotContainer","dotContainerLoaded","loadTournamentDict","foundNavData","foundProfile","closeListing","UserSettings","leftColumn","rightColumn","Listing","generateListing","profileStyles","clickButton","React","listWrapper","setUser","renderSettings","Alert","alertBox","textBox","confirm","NO","YES","App","setSession","setTournament","mode","setMode","setAlertBox","closeAlertBox","hasLoggedIn","pageLoad","Mode","backgroundImage","Boolean","location","hostname","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3764db4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"login_column__14Kgt\",\"initialiseButton\":\"login_initialiseButton__3CXrs\",\"forgottenContainer\":\"login_forgottenContainer__2yR4y\",\"forgotten\":\"login_forgotten__3VFQz\",\"form\":\"login_form__1ieaR\",\"input\":\"login_input__3ze1R\",\"submit\":\"login_submit__2qxJT\",\"loginSection\":\"login_loginSection__1BBMn\",\"loginBackground\":\"login_loginBackground__y9UZ2\",\"foreground\":\"login_foreground__2Cqo8\",\"loginForeground\":\"login_loginForeground__lnGgY\",\"registerForeground\":\"login_registerForeground__3D6jX\",\"flip\":\"login_flip__2KG2q\",\"messageBar\":\"login_messageBar__6TM4O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"crossTable\":\"crosstable_crossTable__3tCtZ\",\"titles\":\"crosstable_titles__2lOQ_\",\"table\":\"crosstable_table__FafeF\",\"td\":\"crosstable_td__1hxGz\",\"th\":\"crosstable_th__Gp7TR\",\"cell\":\"crosstable_cell__1NDzK\",\"blank\":\"crosstable_blank__xJoJC\",\"player\":\"crosstable_player__TFp_x\",\"edit\":\"crosstable_edit__2V8kj\",\"headerCell\":\"crosstable_headerCell__2zS_u\",\"firstColumn\":\"crosstable_firstColumn__2m7R_\",\"closeButton\":\"crosstable_closeButton__2pu_0\",\"container\":\"crosstable_container__3ZuI8\",\"textarea\":\"crosstable_textarea__3lS39\",\"form\":\"crosstable_form__2y5OV\",\"submit\":\"crosstable_submit__3U_pw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pairings\":\"pairings_pairings__2Z6gd\",\"pairingContainer\":\"pairings_pairingContainer__2snrJ\",\"pairing\":\"pairings_pairing__jh3eo\",\"fade-in\":\"pairings_fade-in__3Iydy\",\"topBanner\":\"pairings_topBanner__duKX4\",\"playerInfo\":\"pairings_playerInfo__2BGOf\",\"statusBar\":\"pairings_statusBar__Y2g9v\",\"slide-in-from-bottom\":\"pairings_slide-in-from-bottom__1tu-V\",\"waitButton\":\"pairings_waitButton__3CIsd\",\"finishButton\":\"pairings_finishButton__elOep\",\"nextButton\":\"pairings_nextButton__1fjha\",\"rotate\":\"pairings_rotate__rWtYA\",\"inputResult\":\"pairings_inputResult__8kpK5\",\"bye\":\"pairings_bye__2Q8Qe\",\"submit\":\"pairings_submit__258vX\",\"errorMessage\":\"pairings_errorMessage__1qM9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"app_canvas__1MLEL\",\"column\":\"app_column__2WVoo\",\"logo\":\"app_logo__b6W_t\",\"loadingLine\":\"app_loadingLine__1xeSs\",\"staticLogo\":\"app_staticLogo__1-Wsi\",\"loadingGif\":\"app_loadingGif__2PnUi\",\"crownOutline\":\"app_crownOutline__2IPSS\",\"fade-in\":\"app_fade-in__3kaKs\",\"grow-right\":\"app_grow-right__1NUcX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tournament\":\"tournament_tournament__1ikhA\",\"titleBar\":\"tournament_titleBar__1Kvez\",\"slide-in-from-top\":\"tournament_slide-in-from-top__22vmU\",\"row\":\"tournament_row__3K-Kn\",\"header\":\"tournament_header__hB1Cf\",\"container\":\"tournament_container__DVAFe\",\"form\":\"tournament_form__1Pn88\",\"input\":\"tournament_input__xb1Th\",\"editableField\":\"tournament_editableField__1rO3U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBar\":\"statusbar_statusBar__3f7HO\",\"favicon\":\"statusbar_favicon__1Unmh\",\"menu\":\"statusbar_menu__3nFvT\",\"title\":\"statusbar_title__3ClL5\",\"exec\":\"statusbar_exec__2fXB2\",\"close\":\"statusbar_close__3ssky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertBox\":\"alert_alertBox__-kpK4\",\"error\":\"alert_error__wKYnQ\",\"textBox\":\"alert_textBox__ATagI\",\"response\":\"alert_response__1RX0q\",\"NO\":\"alert_NO__2Bl9f\",\"YES\":\"alert_YES__pKi26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"components_container__1CCB7\",\"editableField\":\"components_editableField__2fs18\",\"form\":\"components_form__1RjIP\",\"input\":\"components_input__I_Vv7\",\"submitHidden\":\"components_submitHidden__PvrYt\",\"any\":\"components_any__3pCEP\",\"submit\":\"components_submit__1SFYQ\",\"increment\":\"components_increment__19rbD\",\"cancel\":\"components_cancel__1_2ia\",\"infinity\":\"components_infinity__1rF3u\",\"resultsBridge\":\"components_resultsBridge__9qnay\",\"details\":\"components_details__1FuFV\",\"resolve\":\"components_resolve__1X_KN\",\"reject\":\"components_reject__3ymMO\",\"neutral\":\"components_neutral__392Xn\",\"flash-green\":\"components_flash-green__2Wczz\",\"setResult\":\"components_setResult__ToBDd\",\"inputURL\":\"components_inputURL__3WU4U\",\"centre\":\"components_centre__2BcEl\",\"tooltip\":\"components_tooltip__1IKxP\",\"detailsContent\":\"components_detailsContent__2yLbz\",\"row\":\"components_row__1jpeO\",\"linkSubmit\":\"components_linkSubmit__TNip6\",\"sectionContainer\":\"components_sectionContainer__1tg1I\",\"sectionHeader\":\"components_sectionHeader__-UWwY\",\"sectionHeaderText\":\"components_sectionHeaderText__1OTig\",\"sectionListWrapper\":\"components_sectionListWrapper__a03uW\",\"sectionList\":\"components_sectionList__117sb\",\"expanded\":\"components_expanded__3qOxR\",\"sectionToggle\":\"components_sectionToggle__2z6Il\"};","module.exports = __webpack_public_path__ + \"static/media/chessCom.228db28e.svg\";","module.exports = __webpack_public_path__ + \"static/media/lichess.9ff6e305.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__1V8qL\",\"slide-in-from-right\":\"profile_slide-in-from-right__2jdIT\",\"bottomBanner\":\"profile_bottomBanner__b2MfX\",\"roundRow\":\"profile_roundRow__3OA2r\",\"row\":\"profile_row__aUfgI\",\"resultsRow\":\"profile_resultsRow__4zleX\",\"editable\":\"profile_editable__24Eas\",\"editableField\":\"profile_editableField__2onPe\",\"input\":\"profile_input__2tu2X\",\"sectionContainer\":\"profile_sectionContainer__Tm0AF\",\"sectionHeader\":\"profile_sectionHeader__UZUfT\",\"sectionHeaderText\":\"profile_sectionHeaderText__XE7UN\",\"sectionListWrapper\":\"profile_sectionListWrapper__1K1-l\",\"sectionList\":\"profile_sectionList__3bJ8Z\",\"expanded\":\"profile_expanded__3QtaO\",\"sectionToggle\":\"profile_sectionToggle__2qBPk\",\"semiPresent\":\"profile_semiPresent__1APEU\",\"playerLine\":\"profile_playerLine__IVVus\",\"cancel\":\"profile_cancel__AKFEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftColumn\":\"menu_leftColumn__13Ey0\",\"rightColumn\":\"menu_rightColumn__2D55A\",\"line\":\"menu_line__2oByf\",\"row\":\"menu_row__q-PZk\",\"listWrapper\":\"menu_listWrapper__1_77c\",\"clickButton\":\"menu_clickButton__1F_HI\",\"dotContainer\":\"menu_dotContainer__ze3l6\",\"dotDescription\":\"menu_dotDescription__19QYi\",\"dot\":\"menu_dot__3Dq9b\",\"dotContainerLoaded\":\"menu_dotContainerLoaded__3YmWC\",\"descriptionSelected\":\"menu_descriptionSelected__2aKX-\",\"close\":\"menu_close__3eKoV\",\"sidebar\":\"menu_sidebar__l1_lg\",\"profile\":\"menu_profile__3-O4-\",\"bottomBanner\":\"menu_bottomBanner__3Od_g\",\"slide-in-from-right\":\"menu_slide-in-from-right__2syBl\",\"logo\":\"menu_logo__3MwZ9\",\"float-down\":\"menu_float-down__1GhiB\",\"dotUnloaded\":\"menu_dotUnloaded__2DT-h\",\"expand\":\"menu_expand__1E6M-\",\"license1\":\"menu_license1__1o4qd\",\"license2\":\"menu_license2__1N8w4\",\"license3\":\"menu_license3__2EL0m\",\"briefly-expand\":\"menu_briefly-expand__ex-pm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__3Z89I\",\"slide-in-from-left\":\"sidebar_slide-in-from-left__3kaGk\",\"playersSection\":\"sidebar_playersSection__3_kKf\",\"scoreSection\":\"sidebar_scoreSection__2Qh1c\",\"addPlayerForm\":\"sidebar_addPlayerForm__1BL-S\",\"input\":\"sidebar_input__3Y8ld\",\"submit\":\"sidebar_submit__22Uk4\",\"edit\":\"sidebar_edit__zaTlg\",\"cancel\":\"sidebar_cancel__1DhJL\",\"activate\":\"sidebar_activate__2-tDL\",\"playerInfo\":\"sidebar_playerInfo__12dBq\",\"playerLine\":\"sidebar_playerLine__1cnKs\",\"scoreSeparator\":\"sidebar_scoreSeparator__1zbAQ\",\"sectionHeader\":\"sidebar_sectionHeader__2UjkE\",\"playerInactive\":\"sidebar_playerInactive__1Y9Kw\",\"topBanner\":\"sidebar_topBanner__3fw_E\",\"bottomBanner\":\"sidebar_bottomBanner__ZFfBX\"};","export const isElectron = typeof window.require === 'function'; //detect !in-browser\nexport const isDev = process.env.NODE_ENV === 'development'; //detects a react dev build\nexport const isProd = typeof window.require === 'function' && !window.require('electron-is-dev'); //detect an electron prod build\n\n// export const renderedArguments = !window.process.argv.includes('--production');\n/**\n * \t\t\t\t|\t\tisDev\t\t\t\t\t\t|\t\t\t\t\t!isDev\t\n * _________________________________________________________________________________________________\n * !isElectron\t|\t\tyarn start (in-browser)\t\t|\t\tyarn deploy (gh-pages build)\n *  isElectron\t|\t\tyarn gui (linked electron)\t|\t\tyarn gui-prod (headless electron build)\n * \n * isProd: yarn exe (OS-specific executable)\n */\n\nexport const remote = isElectron ? window.require('electron').remote : null;\nexport const session = isElectron ? remote.session : null;\n\nexport const win = (isElectron ? remote.getCurrentWindow() : {\n\tminimize: () => {},\n\tmaximize: () => {},\n\trestore: () => {},\n\tclose: () => {},\n\tisMaximized: () => true\t\t\n}) as any;\n\nexport const electronCookies = isElectron ? win.webContents.session.cookies : null;\n\nconsole.log('isDev', isDev);\nconsole.log('isElectron', isElectron);\nconsole.log('isProd', isProd);","import universalCookies, { Cookie, CookieSetOptions } from 'universal-cookie';\nimport { isElectron, electronCookies, isProd } from './electron';\nimport { CookiesSetDetails } from 'electron';\nimport { server as url } from './requests';\nimport { StringDictionary } from '../interfaces';\n\nconst windowCookies = new universalCookies();\n\nexport default class Cookies {\n\n\tgetAll(): Promise<StringDictionary> {\n\t\tif (isElectron || isProd) {\n\t\t\treturn (electronCookies.get({}) as Promise<Electron.Cookie[]>)\n\t\t\t\t.then((arr: Cookie[]) => arr.reduce((acc: StringDictionary, curr: Cookie) => {\n\t\t\t\t\tacc[curr.name] = curr.value;\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {}))\n\t\t\t\t.catch((e: Error) => {\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t\treturn {};\n\t\t\t\t});\n\t\t} else return Promise.resolve(windowCookies.getAll() || {});\n\t}\n\n\tget(name: string): Promise<string> {\n\t\tif (isElectron || isProd) {\n\t\t\treturn (electronCookies.get({ name }) as Promise<Electron.Cookie[]>)\n\t\t\t\t.then((arr: Cookie[]) => arr.map(cookie => cookie.value))\n\t\t\t\t.then((arr: Cookie[]) => arr[0] || '')\n\t\t\t\t.catch((e: Error) => {\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t\treturn '';\n\t\t\t\t});\n\t\t} else return Promise.resolve(windowCookies.get(name) || '');\n\t}\n\n\tset(name: string, value: any, options: CookieSetOptions = {}): Promise<void> {\n\t\tlet details = Object.assign({}, options) as CookiesSetDetails;\n\t\tif (isElectron || isProd) {\n\t\t\tlet date = new Date(Date.now());\t\n\t\t\tdetails = Object.assign(details, {\n\t\t\t\tname,\n\t\t\t\tvalue,\n\t\t\t\turl,\n\t\t\t\texpirationDate: date.setFullYear(date.getFullYear() + 1)\n\t\t\t});\n\t\t\treturn electronCookies.set(details)\n\t\t\t\t.then(() => electronCookies.get({}))\n\t\t\t\t.then((arr: Cookie[]) => arr.map(cookie => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: cookie.name,\n\t\t\t\t\t\tvalue: cookie.value\n\t\t\t\t\t};\n\t\t\t\t}))\n\t\t\t\t.catch(console.error);\n\t\t} else {\n\t\t\treturn Promise.resolve(windowCookies.set(name, value, options));\n\t\t}\n\t}\n\n\tremove(name: string, options: CookieSetOptions = {}): Promise<void> {\n\t\tif (isElectron || isProd) {\n\t\t\treturn electronCookies.remove(url, name);\t\t\t\n\t\t} else {\n\t\t\tif (windowCookies.get(name)) {\n\t\t\t\treturn Promise.resolve(windowCookies.remove(name, options));\n\t\t\t} else {\n\t\t\t\treturn Promise.reject('Couldn\\'t remove cookie');\n\t\t\t}\n\t\t}\n\t}\n}","import axios, { AxiosRequestConfig, AxiosResponse, AxiosError } from 'axios';\nimport config from '../config.json';\nimport { isDev } from './electron';\nimport { AnyDictionary } from '../interfaces.js';\nimport Cookies from './cookies';\n\nlet errorCallback: (message: string) => void = () => {};\n\nexport let cookies = new Cookies();\n\nexport const server = !isDev || config.useProd ? config.prodServer : config.server;\nexport const resultsServer = !isDev || config.useProd ? config.prodResultsServer : config.resultsServer;\n\naxios.defaults.baseURL = server;\n\n// alter all requests to use cookies only from AsyncStorageCookieStore\naxios.interceptors.request.use(async config => {\n\t\n\t// the device will have it's own cookie store, and attempt to\n\t// send cookies itself.\n\t// this has been documented to be unreliable, so we wipe these cookies\n\t// and implement the cookie store ourselves.\n\n\t//await AsyncStorage.clear()\n\treturn {\n\t\t...config,\n\t\theaders: {\n\t\t\t...config.headers,\n\t\t\tAuthorization: JSON.stringify(await cookies.getAll())\n\t\t}\n\t};\n\n});\n\nexport function GET(options: AxiosRequestConfig): Promise<any> {\n\toptions = Object.assign(options, {\n\t\tmethod: 'GET'\n\t});\n\treturn axios(options)\n\t\t.then((res: AxiosResponse<any>) => res.data)\n\t\t.catch((e: AxiosError) => {\n\t\t\tconsole.error(e);\n\t\t\tif (e.response) errorCallback([e.response.status, e.response.statusText, ':', '/' + e.response.config.url.split('/').pop()].join(' '));\n\t\t\tthrow e;\n\t\t});\n}\n\nexport function POST(options: AxiosRequestConfig): Promise<any> {\n\toptions = Object.assign(options, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t}\n\t});\n\treturn axios(options)\n\t\t.then((res: AxiosResponse<any>) => res.data)\n\t\t.catch((e) => {\n\t\t\tif (e && e.response && e.response.data) errorCallback(e.response.data);\n\t\t\tthrow e;\n\t\t});\n}\n\nexport function FORM(e: React.FormEvent<HTMLFormElement>): Promise<any> {\n\te.preventDefault();\n\te.persist();\n    let form = e.target as HTMLFormElement;\n    while (form.constructor.name !== 'HTMLFormElement' && form.parentElement) {\n        form = form.parentElement as HTMLFormElement;\n    }\n    if (form.constructor.name !== 'HTMLFormElement') throw new Error('Couldn\\'t find valid form');\n    let inputs = Array.from(form) as HTMLInputElement[];\n\tlet data = inputs.reduce((acc, curr) => {\n\t\tif (!curr.name) return acc;\n\t\tif (curr.name === 'submit') return acc;\n\t\tif (curr.type === 'number') acc[curr.name] = Number(curr.value);\n\t\telse acc[curr.name] = curr.value;\n\t\treturn acc;\n\t}, {} as AnyDictionary);\n\tlet options = {\n\t\tdata,\n\t\turl: form.action\n\t} as AxiosRequestConfig;\n\treturn POST(options);\n}\n\nexport function setErrorCallback(c: (message: string) => void) {\n\terrorCallback = c;\n}\n\n/*\n\nclass Requests {\n\n\tGET(options: AxiosRequestConfig): Promise<any> {\n\t\toptions = Object.assign(options, {\n\t\t\tmethod: 'GET'\n\t\t});\n\t\treturn axios(options)\n\t\t\t.then((res: AxiosResponse<any>) => res.data);\n\t}\n\n\tPOST(options: AxiosRequestConfig): Promise<any> {\n\t\toptions = Object.assign(options, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t});\n\t\treturn axios(options)\n\t\t\t.then((res: AxiosResponse<any>) => res.data);\n\t}\n\n\tFORM(e: React.FormEvent<HTMLFormElement>): Promise<any> {\n\t\te.preventDefault();\n\t\tlet form = e.target as HTMLFormElement;\n\t\tlet inputs = Array.from(form) as HTMLInputElement[];\n\t\tlet data = inputs.reduce((acc, curr) => {\n\t\t\tif (!curr.name) return acc;\n\t\t\tif (curr.name === 'submit') return acc;\n\t\t\tacc[curr.name] = curr.value;\n\t\t\treturn acc;\n\t\t}, {} as AnyDictionary);\n\t\tlet options = {\n\t\t\tdata,\n\t\t\turl: form.action\n\t\t} as AxiosRequestConfig;\n\t\treturn this.POST(options);\n\t}\n\n}\n\nlet r = new Requests();\nexport const GET = r.GET;\nexport const POST = r.POST;\nexport const FORM = r.FORM;\n\n*/","export const space = /\\s+/g;\nexport const letters = /\\w+/g;\nexport const image = /<img\\s+.*?src=[\"'](.*).*?\">/;\nexport const date = /^[0-9]{4}-[0-9]{1,2}-[0-9]{1,2}_/;\nexport const href = /^(https?:)?\\/\\//;\n\t/* eslint-disable-next-line no-control-regex */\nexport const email = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n\nexport const chessComTeam = /chess\\.com\\/(?:live#tm=|club\\/matches\\/live\\/(?:[a-z-]+\\/)?)([0-9]+)/;","import React, { ReactElement, useState, useCallback, useMemo } from 'react';\nimport url from 'url';\nimport { server, FORM } from '../utils/requests';\nimport * as regexes from '../utils/regexes';\n\nimport appStyles from '../css/app.module.css';\nimport styles from '../css/login.module.css';\nimport { StringDictionary } from '../interfaces';\nimport { IoIosArrowForward, IoIosArrowBack } from 'react-icons/io';\n\n/*\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport iconFont from 'react-native-vector-icons/Fonts/FontAwesome.ttf';\nconst iconFontStyles = `@font-face {\n  src: url(${iconFont});\n  font-family: FontAwesome;\n}`;*/\n\nexport function Crown(props: {\n\tloading: boolean,\n\tsetLoading: (loading: boolean) => void\n\tclassNames?: StringDictionary\n}) {\n\n\treturn (\n\t\t<div\n\t\t\tclassName={[appStyles.logo, props.classNames?.logo].join(' ')}\n\t\t>\n\t\t\t<img style={{visibility: props.loading ? 'hidden' : 'visible'}} className={appStyles.staticLogo} src={process.env.PUBLIC_URL + '/images/favicon.png'} alt='swiss-logo.png'/>\n\n\t\t\t<img style={{visibility: props.loading ? 'visible' : 'hidden'}} className={appStyles.staticLogo} src={process.env.PUBLIC_URL + '/images/dubrovny.png'} alt='swiss-logo.png'/>\n\t\t\t<img style={{visibility: props.loading ? 'visible' : 'hidden'}} className={appStyles.crownOutline} src={process.env.PUBLIC_URL + '/images/crown-outline.png'} alt='outline-gif'/>\n\t\t\t<img style={{visibility: props.loading ? 'visible' : 'hidden'}} className={appStyles.loadingGif} src={process.env.PUBLIC_URL + '/images/loading-crown.gif'} alt='loading-gif'/>\n\t\t\t{/*\n\t\t\t<div>\n\t\t\t\t<hr className={appStyles.loadingLine}/>\n\t\t\t\t<hr className={appStyles.loadingLine}/>\n\t\t\t\t<hr className={appStyles.loadingLine}/>\n\t\t\t</div>*/}\n\t\t</div>\n\t);\n}\n\ninterface LoginProps {\n\tlogin: (sessionID: string) => void\n}\nexport default function Login(props: LoginProps) {\n\n\tconst [loading, setLoading] = useState(false);\n\tconst [register, setRegister] = useState(false);\n\tconst [errorMessage, triggerError] = useState('');\n\n\tconst handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>): void => {\n\t\tsetLoading(false);\n\t\tFORM(e)\n\t\t\t.then((sessionID: string) => props.login(sessionID))\n\t\t\t.catch((e) => {\n\t\t\t\tif (e && e.response && e.response.data) triggerError(e.response.data);\n\t\t\t\tconsole.error(e);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t}, [setLoading, triggerError, props.login]);\n\n\tconst loginForm = useMemo((): ReactElement => {\n\t\treturn (\n\t\t\t<form\n\t\t\t\tclassName={styles.form}\n\t\t\t\tmethod='POST'\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\taction={url.resolve(server, 'login')}\n\t\t\t>\n\t\t\t\t<input type='text' name='username' required placeholder='username' className={['input', styles.input].join(' ')}></input>\n\t\t\t\t<input type='password' name='password' required placeholder='password' className={['input', styles.input].join(' ')}></input>\n\t\t\t\t<div className={styles.forgottenContainer}>\n\t\t\t\t\t<div className={['input', styles.forgotten].join(' ')}>username reminder</div>\n\t\t\t\t\t<div className={['input', styles.forgotten].join(' ')}>password reset</div>\n\t\t\t\t</div>\n\t\t\t\t<input type='submit' value='LOGIN' className={['input', styles.submit].join(' ')}></input>\n\t\t\t</form>\n\t\t);\n\t}, [handleSubmit]);\n\n\tconst registerForm = useMemo((): ReactElement => {\n\t\treturn (\n\t\t\t<form\n\t\t\t\tclassName={styles.form}\n\t\t\t\tmethod='POST'\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\taction={url.resolve(server, 'register')}\n\t\t\t>\n\t\t\t\t<input type='text' name='username' required placeholder='username' className={['input', styles.input].join(' ')}></input>\n\t\t\t\t<input type='password' name='password' required placeholder='password' minLength={8} className={['input', styles.input].join(' ')}></input>\n\t\t\t\t<input type='email' name='email' required placeholder='email' className={['input', styles.input].join(' ')} pattern={regexes.email.source}></input>\n\t\t\t\t<input type='submit' value='REGISTER' className={['input', styles.submit].join(' ')}></input>\n\t\t\t</form>\n\t\t);\n\t}, [handleSubmit]);\n\n\tconst loginSection = useMemo((): ReactElement => {\n\t\treturn (\n\t\t\t<div className={[styles.loginSection, styles.initialiseButton].join(' ')}>\n\t\t\t\t<div className={styles.loginBackground}>\n\t\t\t\t\t<div className={[styles.flip, 'button'].join(' ')} onClick={() => {\n\t\t\t\t\t\tsetLoading(true);\n\t\t\t\t\t\tsetRegister(false);\n\t\t\t\t\t\ttriggerError('');\n\t\t\t\t\t\tsetTimeout(() => setLoading(false), 500);\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<div>LOGIN</div>\n\t\t\t\t\t\t<div>\n                            <IoIosArrowBack />\n                        </div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div></div>\n\t\t\t\t\t<div className={[styles.flip, 'button'].join(' ')} onClick={() => {\n\t\t\t\t\t\tsetLoading(true);\n\t\t\t\t\t\tsetRegister(true);\n\t\t\t\t\t\ttriggerError('');\n\t\t\t\t\t\tsetTimeout(() => setLoading(false), 500);\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<div>REGISTER</div>\n\t\t\t\t\t\t<div>\n                            <IoIosArrowForward />\n                        </div>\n\t\t\t\t\t</div>\n\t\t\t\t\tBackground\n\t\t\t\t</div>\n\t\t\t\t<div className={[styles.foreground, register ? styles.registerForeground : styles.loginForeground].join(' ')}>\n\t\t\t\t\t{\n\t\t\t\t\t\tregister ? registerForm : loginForm\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}, [setLoading, setRegister, triggerError, register]);\n\n\tconst crownBuild = useMemo(() => <Crown setLoading={(l: boolean) => setLoading(l)} loading={loading} />, [setLoading, loading]);\n\n\treturn (\n\t\t<div className={appStyles.canvas}>\n\t\t\t<div className={appStyles.column} />\n\t\t\t<div className={[appStyles.column, styles.column].join(' ')}>\n\t\t\t\t{crownBuild}\n\t\t\t\t{loginSection}\n\t\t\t\t<div className={styles.messageBar}>\n\t\t\t\t\t{errorMessage || '\\u200b'}\n\t\t\t\t</div>\n\t\t\t\t{/*<div className={['button', styles.initialiseButton].join(' ')}>\n\t\t\t\t\t{this.state.register ? <>\n\t\t\t\t\t\t<div className={styles.registerForm}>{this.registerForm}</div>\n\t\t\t\t\t\t<div className={styles.flip} onClick={() => this.setState({ register: false })}>{'LOGIN\\n🡄'}</div>\n\t\t\t\t\t</> : <>\n\t\t\t\t\t\t<div className={styles.flip} onClick={() => this.setState({ register: true })}>{'REGISTER\\n🡆'}</div>\n\t\t\t\t\t\t<div className={styles.loginForm}>{this.loginForm}</div>\n\t\t\t\t\t</>}\n\t\t\t\t</div>*/}\n\t\t\t</div>\n\t\t\t<div className={appStyles.column} />\n\t\t</div>\n\t);\n\n\n}","import React from 'react';\nimport { win } from './utils/electron';\nimport { FaWindowMaximize, FaWindowRestore, FaWindowMinimize, FaWindowClose } from 'react-icons/fa';\n\nimport styles from './css/statusbar.module.css';\n\nexport default function StatusBar() {\n    \n    const initialName = 'Tournament by Oxford Chess Development';\n\n\tconst maximised = win.isMaximized();\n    const minimise = win.minimize();\n    const close = win.close();\n\n\tconst toggleMaximisation = () => {\n\t\tif (maximised) {\n\t\t\twin.restore();\n\t\t} else {\n\t\t\twin.maximize();\n\t\t}\n\t}\n\n    return (\n        <div className={styles.statusBar}>\n            <div className={styles.title}>\n                {initialName}\n            </div>\n            <div className={styles.menu}>\n                <div className={styles.favicon}>\n                    <img\n                        alt='favicon'\n                        draggable={false}\n                        src={process.env.PUBLIC_URL + '/logo192.png'}\n                    />\n                </div>\n            </div>\n            <div className={styles.exec}>\n                <div onClick={minimise}>\n                    <FaWindowMinimize />\n                </div> \n                <div onClick={toggleMaximisation} >\n                    {maximised ? \n                        <FaWindowRestore /> :\n                        <FaWindowMaximize />\n                    }\n                </div> \n                <div onClick={close} className={styles.close}>\n                    <FaWindowClose />\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState, useRef, ReactElement, useCallback, ReactNode, ReactNodeArray, RefObject } from 'react';\nimport { useMouseDown } from '.';\nimport { FORM } from '../utils/requests';\nimport styles from '../css/components.module.css';\nimport { AiOutlineClose, AiOutlineDown, AiOutlineUp, AiOutlineCheck } from 'react-icons/ai';\n\ninterface EditableFieldProps {\n    content: string\n    defaultEditContent?: string\n    defaultContent?: string\n    inputType?: 'button' | 'checkbox' | 'color' | 'date' | 'datetime-local' | 'email' | 'file' | 'hidden' | 'image' | 'month' | 'number' | 'password' | 'radio' | 'range' | 'reset' | 'search' | 'submit' | 'tel' | 'text' | 'time' | 'url' | 'week',\n\n    url: string, //url.resolve(server, ['tournament', props.id, 'editTournamentName'].join('/'))\n    handleSubmit: (k: string, v: any) => Promise<void>\n    onSubmitSuccess: (e: React.FormEvent<HTMLFormElement>) => React.FormEvent<HTMLFormElement>\n    handleClear?: () => Promise<void>\n    useHandleSubmit?: boolean\n    additionalStyles: { [key: string]: string }\n    additionalInputProps: { [key: string]: any }\n    name?: string\n    alwaysEnabled?: boolean\n    show?: {\n        submit?: boolean\n        infinity?: boolean\n        increment?: boolean\n        any?: boolean\n        clear?: boolean\n    }\n    formRef?: RefObject<HTMLFormElement>\n    children?: ReactNode | ReactNodeArray\n}\n\nfunction roundUpDate(date: Date): Date {\n    let interDate = new Date(date.setUTCHours(date.getUTCHours() + 1));\n    let nextDate: Date;\n    if (interDate.getUTCMinutes() < 30) nextDate = new Date(interDate.setUTCMinutes(30));\n    else nextDate = new Date(new Date(interDate.setUTCMinutes(0)).setUTCHours(interDate.getUTCHours() + 1));\n    return nextDate;\n}\n\nfunction toTimeDate(date: Date): string {\n    if (isNaN(date.valueOf())) return '';\n    return date.toLocaleString('en-GB').slice(0, -3);\n    //return date.toTimeString().slice(0, 8) + ' ' + date.toDateString().slice(0, 10);\n}\n\nfunction toDatetimeLocal(date: Date) {\n    if (isNaN(date.valueOf())) return '';\n    let tzoffset = date.getTimezoneOffset() * 60000; //offset in milliseconds\n    let localDate = new Date(date.valueOf() - tzoffset);\n    return localDate.toISOString().slice(0, 16);\n}\n\nexport default function EditableField(props: EditableFieldProps): ReactElement {\n\n    const [content, setContent] = useState(props.content);\n    const [editContent, setEditContent] = useState(props.alwaysEnabled || false);\n    const [mustFocus, focus] = useState(false);\n    const inputField = useRef(null as HTMLInputElement);\n    const divArea = useRef(null as HTMLDivElement);\n\n    const decrement = useCallback((e: React.MouseEvent<HTMLButtonElement>): void => {\n        e.preventDefault();\n        let button = e.target as HTMLButtonElement;\n        if (button.constructor.name !== 'HTMLButtonElement') return;\n        let form = button.parentNode as HTMLFormElement;\n        let input = form[props.name || 'name'] as HTMLInputElement;\n        input.stepDown();\n    }, [props.name]);\n\n    const increment = useCallback((e: React.MouseEvent<HTMLButtonElement>): void => {\n        e.preventDefault();\n        let button = e.target as HTMLButtonElement;\n        if (button.constructor.name !== 'HTMLButtonElement') return;\n        let form = button.parentNode as HTMLFormElement;\n        let input = form[props.name || 'name'] as HTMLInputElement;\n        input.stepUp();\n    }, [props.name]);\n\n    const handleClear = useCallback((e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        e.preventDefault();\n        if (!props.handleClear) return;\n        return props.handleClear()\n            .then(() => {\n                setEditContent(props.alwaysEnabled || false);\n                setContent('');\n            });\n    }, [props.handleClear, setEditContent, setContent, props.alwaysEnabled]);\n\n    const handleAny = useCallback((e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        e.preventDefault();\n        return props.handleSubmit(props.name || 'name', 0)\n            .then(() => {\n                setEditContent(props.alwaysEnabled || false);\n                setContent('0');\n            });\n    }, [props.handleSubmit, setEditContent, setContent, props.name]);\n\n    const handleInfinity = useCallback((e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        e.preventDefault();\n        return props.handleSubmit(props.name || 'name', 'Infinity')\n            .then(() => {\n                setEditContent(props.alwaysEnabled || false);\n                setContent('∞');\n            });\n    }, [props.handleSubmit, setEditContent, setContent, props.alwaysEnabled, props.name]);\n\n    const handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n        e.preventDefault();\n        if (props.useHandleSubmit) {\n            let form = e.target as HTMLFormElement;\n            if (form.constructor.name !== 'HTMLFormElement') return Promise.resolve(setEditContent(props.alwaysEnabled || false));\n            let input = form[props.name || 'name'] as HTMLInputElement;\n            return props.handleSubmit(props.name || 'name', input.value)\n                .then(() => {\n                    setEditContent(props.alwaysEnabled || false);\n                    return e;\n                })\n                .then(props.onSubmitSuccess)\n                .then(() => setContent(input.value))\n        } else return FORM(e)\n            .then(() => {\n                setEditContent(props.alwaysEnabled || false);\n                return e;\n            })\n            .then(props.onSubmitSuccess)\n            .then((e) => {\n                let form = e.target as HTMLFormElement;\n                while (form.constructor.name !== 'HTMLFormElement' && form.parentElement) form = form.parentElement as HTMLFormElement;\n                if (form.constructor.name !== 'HTMLFormElement') throw new Error('Couldn\\'t find valid form');\n                let input = form.firstChild as HTMLInputElement;\n                let content = input.value;\n                setContent(content);\n            });\n    }, [props.useHandleSubmit, props.handleSubmit, props.name, setEditContent, props.onSubmitSuccess, props.alwaysEnabled, setEditContent, setContent]);\n\n    const exitEditing = useCallback((e: React.KeyboardEvent<HTMLFormElement>): React.KeyboardEvent<HTMLFormElement> => {\n        switch (e.keyCode) {\n            case 27: {\n                setEditContent(props.alwaysEnabled || false);\n                return e;\n            }\n            case 13: {\n                handleSubmit(e);\n                return e;\n            }\n            default: {\n                return e;\n            }\n        }\n    }, [setEditContent, handleSubmit, props.alwaysEnabled]);\n\n    const generateForm = (name: string): JSX.Element => {\n        let defaultValue = name || props.defaultEditContent;\n        if (props.inputType === 'datetime-local') defaultValue = toDatetimeLocal(roundUpDate(new Date(defaultValue)));\n        else if (props.show?.any && defaultValue === '0') defaultValue = '';\n        return (\n            <form\n                ref={props.formRef}\n                className={styles.form}\n                target='_self'\n                onKeyDown={exitEditing}\n                onSubmit={handleSubmit}\n                method='POST'\n                action={props.url}\n            >\n                <input\n                    type={props.inputType}\n                    className={[styles.input, props.additionalStyles.input].join(' ')}\n                    name={props.name || 'name'}\n                    defaultValue={defaultValue || '\\u200b'}\n                    required\n                    ref={inputField}\n                    {...props.additionalInputProps}\n                />\n                <button\n                    className={[props.show?.submit && !props.show?.infinity && !props.show?.any && !props.show?.clear ? '' : styles.submitHidden, styles.cancel].join(' ')}\n                    onClick={() => setEditContent(props.alwaysEnabled || false)}\n                >\n                    <AiOutlineClose />\n                </button>\n                <button\n                    className={[!props.show?.clear ? styles.submitHidden : '', styles.cancel].join(' ')}\n                    onClick={handleClear}\n                >\n                    <AiOutlineClose />\n                </button>\n                <button\n                    className={[!props.show?.any ? styles.submitHidden : '', styles.any].join(' ')}\n                    onClick={handleAny}\n                >Any</button>\n                <button\n                    className={[!props.show?.infinity ? styles.submitHidden : '', styles.infinity].join(' ')}\n                    onClick={handleInfinity}\n                >∞</button>\n                <button\n                    type='button'\n                    value='▼'\n                    className={[!props.show?.increment ? styles.submitHidden : '', styles.increment].join(' ')}\n                    onClick={decrement}\n                >\n                    <AiOutlineDown />\n                </button>\n                <button\n                    className={[!props.show?.increment ? styles.submitHidden : '', styles.increment].join(' ')}\n                    onClick={increment}\n                >\n                    <AiOutlineUp />\n                </button>\n                <button\n                    type='submit'\n                    className={[!props.show?.submit ? styles.submitHidden : '', styles.submit].join(' ')}\n                >\n                    <AiOutlineCheck />\n                </button>\n                {props.children}\n            </form>\n        );\n    }\n\n    useEffect(() => {\n        setContent(props.content);\n    }, [props.content]);\n    useEffect(() => {\n        if (!mustFocus) return;\n        let form = inputField.current;\n        if (!form) return;\n        if (form.select) form.select();\n        else if (form.focus) form.focus();\n    }, [inputField, mustFocus]);\n    useMouseDown((e) => {\n        if (divArea.current && divArea.current.contains(e.target as Node)) return;\n        setEditContent(props.alwaysEnabled || false);\n    });\n\n    const myID = Math.random().toString(16).slice(2, 9);\n\n    let displayContent = content;\n    if (displayContent && props.inputType === 'datetime-local') displayContent = toTimeDate(new Date(content));\n    else if (props.show?.any && displayContent === '0') displayContent = 'Any';\n\n    return (\n        <div\n            ref={divArea}\n            className={[styles.container, props.additionalStyles.container].join(' ')}\n            id={myID}\n        >\n            {editContent ?\n                generateForm(content) : <>\n                    <div\n                        className={[styles.editableField, props.additionalStyles.editableField || ''].join(' ')}\n                        onClick={() => {\n                            setEditContent(true);\n                            focus(true);\n                        }}\n                    >\n                        {displayContent || props.defaultContent || '\\u200b'}\n                    </div>\n                    {props.children}\n                </>\n            }\n        </div>\n    );\n\n}","import React, { useState, ReactElement, useRef, RefObject, useEffect, useCallback } from 'react';\nimport url from 'url';\nimport { FORM, server, POST } from '../utils/requests';\nimport { AnyDictionary, GameLinks } from '../interfaces';\n\nimport styles from '../css/components.module.css';\nimport { AiOutlineCheck, AiOutlineClose, AiOutlineMinus } from 'react-icons/ai';\nimport * as icons from '../assets/icons';\nimport * as regexes from '../utils/regexes';\nimport EditableField from './EditableField';\n\ninterface SinglePairingProps {\n    result: [number | null, number | null]\n\ttournamentID: string\n\tinputClassName: any\n    hidden: AnyDictionary\n    expanded: boolean\n    expand: (set: boolean) => void\n\tvalidate: (form: HTMLFormElement) => boolean | string | void\n\thandleSubmit: (e: React.FormEvent<HTMLFormElement>) => Promise<React.FormEvent<HTMLFormElement>>\n}\n\nexport default function SinglePairing(props: SinglePairingProps): ReactElement {\n\n    const [valid, setValid] = useState(undefined as boolean | undefined);\n    const [hover, setHover] = useState('');\n\n    const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n\t\tlet input = e.target as HTMLInputElement;\n        let form = input.parentElement as HTMLFormElement;\n        let valid = props.validate(form);\n        if (typeof valid === 'string') setHover(valid);\n        else setHover('');\n        if (typeof valid === 'boolean') setValid(valid);\n        else if (typeof valid === 'string') setValid(false);\n\t\telse setValid(undefined);\n    }\n\n    const clear = (e: React.FormEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n\t\tlet input = e.target as HTMLButtonElement;\n        let div = input.parentElement as HTMLDivElement;\n        let form = div.parentElement as HTMLFormElement\n        form.reset();\n        setHover('');\n        setValid(undefined);\n    }\n\n    if (props.result[0] !== null || props.result[1] !== null) return (\n        <div className={styles.resultsBridge}>\n            <div className={styles.setResult}>{props.result[0] ?? '\\u200b'}</div>\n            <div className={styles.neutral} onClick={() => props.expand(!props.expanded)} style={{\n                transform: props.expanded ? 'rotate(450deg)' : 'rotate(0deg)'\n            }}>\n                <AiOutlineMinus />\n            </div>\n            <div className={styles.setResult}>{props.result[1] ?? '\\u200b'}</div>\n        </div>\n    );\n    \n    return <form\n        className={styles.resultsBridge}\n        target='_self'\n        onSubmit={(e) => {\n            e.persist();\n            if (!props.validate(e.target as HTMLFormElement)) return e.preventDefault();\n            FORM(e).then(() => props.handleSubmit(e));\n        }}\n        method='POST'\n        action={url.resolve(server, ['tournament', props.tournamentID, 'addResult'].join('/'))}\n    >\n        <input type='number' min={0} step={0.5} name='resultWhite' required className={props.inputClassName} onChange={handleChange}/>\n        <div className={styles.centre}>\n            {hover ? <span className={styles.tooltip}>{hover}</span> : null}\n            {valid ?\n                <button tabIndex={-1} className={styles.resolve}>\n                    <AiOutlineCheck />\n                </button> :\n                valid === false ?\n                    <button tabIndex={-1} className={styles.reject} onClick={clear}>\n                        <AiOutlineClose />\n                    </button> :\n                    <div className={styles.neutral} onClick={() => props.expand(!props.expanded)} style={{\n                        transform: props.expanded ? 'rotate(450deg)' : 'rotate(0deg)'\n                    }}>\n                        <AiOutlineMinus />\n                    </div>\n            }\n        </div>\n        <input type='number' min={0} step={0.5} name='resultBlack' required className={props.inputClassName} onChange={handleChange}/>\n        {Object.entries(props.hidden).map(([name, value], i) => {\n            return <input key={['hiddenInput', i].join('.')} type='hidden' name={name} value={value} required />;\n        })}\t\t\n    </form>;\n}\n\ninterface DetailsProps {\n    tournamentID: string\n    id: string\n    className: string\n    expanded: boolean\n    gameLinks: GameLinks\n    individual: boolean\n    board: number\n    update: () => Promise<void>\n}\n\nexport function PairingDetails(props: DetailsProps): ReactElement {\n\n    const [height, setHeight] = useState('0px');\n\n    const details = useRef(null) as RefObject<HTMLDivElement>;\n    const form = useRef(null) as RefObject<HTMLFormElement>;\n\n    useEffect(() => {\n        if (!details.current) return;\n        if (!props.expanded) return;\n        setHeight(details.current.getBoundingClientRect().height + 'px');\n        return () => setHeight('0px');\n    }, [details, setHeight, props.expanded]);\n\n    const lichess = props.individual ? props.gameLinks.lichessLink : props.gameLinks.lichessTeamLink;\n    const chessCom = props.individual ? props.gameLinks.chessComLink : props.gameLinks.chessComTeamLink;\n\n    const handleSubmit = useCallback((key: 'lichess' | 'chessCom', value: string): Promise<void> => {\n        let v = value;\n        if (!props.individual) {\n            let matches = value.match(regexes.chessComTeam);\n            if (!matches) {\n                console.error('Invalid syntax on tournament: ' + value);\n                return Promise.resolve();\n            }\n            v = 'https://chess.com/club/matches/live/' + matches[1];\n        }\n        return POST({\n            url: url.resolve(server, ['tournament', props.tournamentID, 'updateResultLink'].join('/')),\n            data: {\n                id: props.id,\n                [key]: v,\n                type: props.individual ? 'individual' : 'team'\n            }\n        });\n    }, [props.id, props.individual, props.tournamentID]);\n\n    const handleClear = useCallback((key: 'lichess' | 'chessCom'): Promise<void> => {\n        return POST({\n            url: url.resolve(server, ['tournament', props.tournamentID, 'clearResultLink'].join('/')),\n            data: {\n                id: props.id,\n                site: key,\n                type: props.individual ? 'individual' : 'team'\n            }\n        });\n    }, [props.id, props.individual, props.tournamentID]);\n\n    return (\n        <div className={[props.className, styles.details].join(' ')} style={{\n            height\n        }}>\n            <div ref={details} className={[styles.detailsContent].join(' ')}>\n                <div className={[styles.row, 'topBanner'].join(' ')}>\n                    Board: {props.board}{'\\n'}\n                    For online games, enter {props.individual ? '' : 'team match '}game links below:\n                </div>\n                <div className={styles.row}>\n                    <EditableField\n                        content={chessCom}\n                        url={url.resolve(server, ['tournament', props.tournamentID, 'updateResultLink'].join('/'))}\n                        onSubmitSuccess={(e) => {\n                            props.update();\n                            return e\n                        }}\n                        handleSubmit={(k: string, v: string) => handleSubmit('chessCom', v)}\n                        name={'link'}\n                        additionalInputProps={{}}\n                        additionalStyles={{\n                            input: styles.inputURL,\n                            editableField: styles.editableField\n                        }}\n                        formRef={form}\n                        useHandleSubmit\n                        handleClear={() => handleClear('chessCom')}\n                        show={{\n                            clear: true\n                        }}\n                    >\n                        <button className={[styles.submit, styles.linkSubmit].join(' ')} onClick={e => form.current ? form.current.dispatchEvent(new Event('submit')) : null}>\n                            <img src={icons.chessCom} alt='chess.com' />\n                        </button>\n                    </EditableField>\n                </div>\n                <div className={styles.row}>\n                    <EditableField\n                        content={lichess}\n                        url={url.resolve(server, ['tournament', props.tournamentID, 'updateResultLink'].join('/'))}\n                        onSubmitSuccess={(e) => {\n                            props.update();\n                            return e\n                        }}\n                        handleSubmit={(k: string, v: string) => handleSubmit('lichess', v)}\n                        name={'link'}\n                        additionalInputProps={{}}\n                        additionalStyles={{\n                            input: styles.inputURL,\n                            editableField: styles.editableField\n                        }}\n                        formRef={form}\n                        useHandleSubmit\n                        handleClear={() => handleClear('lichess')}\n                        show={{\n                            clear: true\n                        }}\n                    >\n                        <button className={[styles.increment, styles.linkSubmit].join(' ')} onClick={e => form.current ? form.current.dispatchEvent(new Event('submit')) : null}>\n                            <img src={icons.lichess} alt='lichess' />\n                        </button>\n                    </EditableField>\n                </div>\n            </div>\n        </div>\n    );\n}","import { useEffect } from 'react';\n\nimport EditableField from './EditableField';\nimport Grid from './Grid';\nimport SinglePairing from './SinglePairing';\n\nexport { EditableField, Grid, SinglePairing };\n\nexport const useMouseDown = (callback: (e: MouseEvent) => any) => {\n\tuseEffect(() => {\n\t    window.addEventListener('mousedown', callback);\n\t    return () => window.removeEventListener('mousedown', callback);\n\t}, [callback]);\n};","import React, { ReactElement } from 'react';\nimport { server, POST } from '../utils/requests';\nimport url from 'url';\nimport styles from '../css/tournament.module.css';\nimport { TournamentStatus, TournamentSettings } from '../interfaces';\nimport { EditableField } from '../components/';\nimport { MdExitToApp, MdStop } from 'react-icons/md';\nimport { IoMdPlay, IoMdGrid } from 'react-icons/io';\n\ninterface InfoProps {\n\tstatus: TournamentStatus\n\tsettings: TournamentSettings\n\tupdateTournamentStatus: () => void\n\tround: number\n\ttotalRounds: number | 'Infinity'\n\tcloseTournament: () => void\n\ttoggleCrossTable: () => void\n\n\tlastRoundOverride: boolean\n\tsetLastRound: (override: boolean) => void\n\ttriggerError: (message: string) => void\n}\n\nexport default function InfoProps(props: InfoProps): ReactElement {\n\n    let lastRound = false;\n    if (typeof props.lastRoundOverride !== 'undefined') lastRound = props.lastRoundOverride;\n    else lastRound = props.settings.totalRounds === props.status.round;\n\n    let uri = url.resolve(server, ['tournament', props.status.id, 'setName'].join('/'));\n\n    return (\n        <div className={styles.titleBar} style={{\n            gridColumn: '2 /span 1'\n        }}>\n            <div className={styles.row}>\n                <div className={['topBanner', styles.header].join(' ')}>\n                    <EditableField\n                        content={props.status.name}\n                        url={uri}\n                        inputType='text'\n                        handleSubmit={(k: string, v: any) => POST({\n                            url: uri,\n                            data: {\n                                [k]: v\n                            }\n                        })}\n                        additionalStyles={styles}\n                        additionalInputProps={{}}\n                        onSubmitSuccess={(e) => {\n                            props.updateTournamentStatus();\n                            return e;\n                        }}\n                        defaultContent='Unnamed Swiss Tournament'\n                        show={{\n                            submit: true\n                        }}\n                    />\n                </div>\n            </div>\n            <div className={styles.row}>\n                <div className={'topBanner ' + styles.header}>\n                    ID: {props.status.id}\n                </div>\n                <div className={'topBanner ' + styles.header}>\n                    Round: {!props.status.round ? 'Not yet initialised' : props.status.round + ' / ' + (props.totalRounds === 'Infinity' ? '∞' : props.totalRounds)}\n                </div>\n            </div>\n            <div className={styles.row}>\n                <div className='button' onClick={props.closeTournament}>\n                    <span role='img' aria-label='back'>\n                        <MdExitToApp />\n                    </span>\n                </div>\n                <div className='button' onClick={() => {\n                    if (props.status.round >= props.settings.totalRounds) props.triggerError('Increase the number of rounds in Settings to continue!')\n                    props.setLastRound(!lastRound);\n                }}>\n                    <span role='img' aria-label='decommission'>\n                        {lastRound ? \n                            <IoMdPlay /> :\n                            <MdStop />\n                        }\n                    </span>\n                </div>\n                <div className='button' onClick={props.toggleCrossTable}>\n                    <IoMdGrid />\n                </div>\n            </div>\n        </div>\n    );\n\n}","import React, { ReactElement, useState, useEffect, useCallback, useMemo, useReducer } from 'react';\nimport styles from '../css/pairings.module.css';\nimport { TournamentStatus, TournamentSettings, ID, Player, PairingObject } from '../interfaces';\nimport { SinglePairing } from '../components/';\nimport { GET, POST } from '../utils/requests';\nimport { AiOutlineLoading3Quarters } from 'react-icons/ai';\nimport { IoIosSettings } from 'react-icons/io';\nimport { TiThMenu } from 'react-icons/ti';\nimport { PairingDetails } from '../components/SinglePairing';\n\ninterface PairingsProps {\n\tstatus: TournamentStatus\n\tplayerDict: Map<ID, Player>\n\tupdatePlayerDict: () => {}\n    playerDictKey: string\n\tsettings: TournamentSettings\n\n\tid: string\n\tcanTriggerNextRound: boolean\n\tsetDisplayPlayer: (id: string) => void\n\ttoggleSidebar: () => void\n\ttoggleSettings: () => void\n\n\tupdateRound: () => void\n\tsetLastRound: (override: boolean) => void\n\ttoggleCrossTable: () => void\n\tlastRoundOverride: boolean\n}\n\nexport default function Pairings(props: PairingsProps): ReactElement {\n\n    const round = useMemo(() => props.status.round, [props.status.round]);\n    \n    const [resultsState, updateResults] = useReducer(() => Math.random().toString(16).slice(2, 9), '');\n\tconst reduceResults = useCallback((state: Map<string, [number | null, number | null]>, {id, W, B}: {\n\t\tid: string\n\t\tW: Player,\n\t\tB: Player\n\t}): Map<string, [number | null, number | null]> => {\n\t\tstate.set(id, [\n\t\t\tW ? W.histories ? W.histories[round][props.settings.displayPoints] : null : 0,\n\t\t\tB ? B.histories ? B.histories[round][props.settings.displayPoints] : null : 0\n        ]);\n        updateResults({});\n\t\treturn state;\n\t}, [round, props.settings.displayPoints])\n\n\tconst [pairingData, setPairings] = useState([] as PairingObject[]);\n\tconst [results, setResults] = useReducer(reduceResults, new Map() as Map<string, [number | null, number | null]>);\n\tconst [loading, setLoading] = useState(false);\n\n\n\tconst getPairings = useCallback((): Promise<void> => {\n        if (!round) return;\n        if (!props.playerDict.size) return;\n\t\treturn GET({ url: '/tournament/' + props.id + '/getPairings'})\n\t\t\t.then((pairings: PairingObject[]) => {\n\t\t\t\tfor (let [w, b] of pairings) {\n                    setResults({\n                        id: w + '.' + b, \n                        W: props.playerDict.get(w),\n                        B: props.playerDict.get(b)\n                    });\n                }\n\t\t\t\tsetPairings(pairings);\n\t\t\t})\n\t\t\t.catch(console.error);\n\t}, [props.id, setPairings, setResults, round, props.playerDict, props.playerDictKey]);\n\n\tfunction getDisplayName(id: ID, player: Player): string {\n\t\tif (id === 'bye') return 'BYE';\n\t\tif (!player) return id;\n\t\tlet displayName: string;\n\t\tif (props.settings.competitors === 'individual') displayName = [player.firstName, player.lastName].join(' ');\n\t\telse displayName = player.firstName;\n\t\treturn `${displayName} [${player.score}]`;\n\t}\n\t\n\tlet pending = Array.from(results.values())\n\t\t\t.filter(arr => arr.every(v => v === null));\n\t\t\t\n\tconst triggerNextRound = (): Promise<void> => {\n\t\tsetLoading(true);\n\t\treturn POST({\n\t\t\turl: '/tournament/' + props.id + '/getNextPairings'\n\t\t})\n\t\t\t.then((pairings: PairingObject[]) => setPairings(pairings))\n\t\t\t.then(() => {\n\t\t\t\tgetPairings();\n\t\t\t\tprops.updatePlayerDict();\n\t\t\t})\n\t\t\t.then(props.updateRound)\n\t\t\t.catch(console.error)\n\t\t\t.finally(() => setLoading(false));\n\t}\n\n\tfunction generateNextButton(): ReactElement {\n\t\tlet lastRound: boolean;\n\t\tif (props.status.round >= props.settings.totalRounds) lastRound = true;\n\t\telse if (typeof props.lastRoundOverride !== 'undefined') lastRound = props.lastRoundOverride;\n\t\telse lastRound = false;\n\n\t\treturn loading ? (\n\t\t\t<div\n\t\t\t\tclassName={[styles.nextButton, 'button'].join(' ')}\n\t\t\t>\n\t\t\t\t<AiOutlineLoading3Quarters />\n\t\t\t</div>\n\t\t) : !props.canTriggerNextRound ? (\n\t\t\t<div className={[styles.waitButton].join(' ')}>\n\t\t\t\tTournament must have at least 2 active players\n\t\t\t</div>\n\t\t) : pending.length > 0 ? (\n\t\t\t<div className={[styles.waitButton].join(' ')} >\n\t\t\t\t{`Awaiting ${pending.length} result${pending.length > 1 ? 's' : ''}`}\n\t\t\t</div>\n\t\t) : lastRound ? (\n\t\t\t<div\n\t\t\t\tclassName={[styles.finishButton, 'button'].join(' ')}\n\t\t\t\tonClick={props.toggleCrossTable}\n\t\t\t>\n\t\t\t\tFinal Standings\n\t\t\t</div>\n\t\t) : (\n\t\t\t<div\n\t\t\t\tclassName={[styles.nextButton, 'button'].join(' ')}\n\t\t\t\tonClick={triggerNextRound}\n\t\t\t>\n\t\t\t\tNext Round\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\tfunction validateForm(form: HTMLFormElement): boolean | string | void {\n\t\tif (form.resultWhite.value === '' && form.resultBlack.value === '') return undefined;\n\t\tif (!Array.from(form).every((input) => (input as HTMLInputElement).validity.valid)) return false;\n\t\tif (!props.settings.gamePointTotal) return true;\n\t\tlet nW = Number(form.resultWhite.value);\n\t\tlet nB = Number(form.resultBlack.value);\n\t\tlet total = props.settings.displayPoints === 'game' ? props.settings.gamePointTotal : 1;\n\t\tif (nW + nB === total) return true;\n\t\treturn 'Setting: sum results to ' + props.settings.gamePointTotal;\n    }\n    \n    const [expanded, setExpanded] = useState('');\n\n\tfunction Listing(): ReactElement[] {\n\t\tlet pairings = [] as ReactElement[];\n        let dict = props.playerDict;\n        let i = 1;\n\t\tfor (let [w, b, gameLinks] of pairingData) {\n\t\n\t\t\tlet [white, black] = [dict.get(w), dict.get(b)];\n\t\t\tlet [wDisplay, bDisplay] = [getDisplayName(w, white), getDisplayName(b, black)];\t\t\t\n\t\t\tlet id = w + '.' + b;\n\t\t\tlet result = results.get(id);\n            if (!result) continue;\n\t\t\tpairings.push(\n\t\t\t\t<div id={id} className={styles.pairing} key={['pairings', w, b].join('.')} >\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={['playerInfo', styles.playerInfo, w === 'bye' ? styles.bye : ''].join(' ')}\n\t\t\t\t\t\tid={w}\n\t\t\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => w === 'bye' ? null : props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n\t\t\t\t\t>{wDisplay}</div>\n                        <SinglePairing\n                            expand={(set: boolean) => setExpanded(set ? id : '')}\n                            expanded={expanded === id}\n                            result={result}\n\t\t\t\t\t\t\ttournamentID={props.id}\n\t\t\t\t\t\t\tinputClassName={styles.inputResult}\n\t\t\t\t\t\t\thidden={{\n\t\t\t\t\t\t\t\tW: w,\n\t\t\t\t\t\t\t\tB: b\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvalidate={validateForm}\n\t\t\t\t\t\t\thandleSubmit={async (e) => {\n                                let form = e.target as HTMLFormElement & {resultWhite: HTMLInputElement, resultBlack: HTMLInputElement};\n                                results.set(id, [Number(form.resultWhite.value), Number(form.resultBlack.value)]);\n                                updateResults({});\n\t\t\t\t\t\t\t\tprops.updatePlayerDict();\n\t\t\t\t\t\t\t\treturn e;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={['playerInfo', styles.playerInfo, styles.playerInfo, b === 'bye' ? styles.bye : ''].join(' ')}\n\t\t\t\t\t\tid={b}\n\t\t\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => b === 'bye' ? null : props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n\t\t\t\t\t>{bDisplay}</div>\n                </div>,\n                <PairingDetails\n                    tournamentID={props.status.id}\n                    id={id}\n                    board={i}\n                    className={styles.pairing}\n                    expanded={expanded === id}\n                    gameLinks={gameLinks}\n                    individual={props.settings.competitors === 'individual'}\n                    update={getPairings}\n                />\n            );\n            i++;\n\t\t}\n\t\treturn pairings;\n\t}\n\n\tuseEffect(() => {\n\t\tgetPairings();\n    }, [getPairings]);\n    \n    const listing = useMemo(Listing, [props.playerDict, pairingData, getDisplayName, results, resultsState, props.updatePlayerDict, getPairings, props.setDisplayPlayer, setResults, props.playerDictKey]);\n\n\treturn (\n        <>\n            <div className={styles.pairings}>\n                <div className={['topBanner', styles.topBanner].join(' ')}>\n                    Pairings\n                </div>\n                <div className={styles.pairingContainer}>\n                    {listing}\n                </div>\n            </div>\n            <div className={['bottomBanner', styles.statusBar].join(' ')}>\n                <div className={['button'].join(' ')} onClick={props.toggleSidebar}>\n                    <TiThMenu />\n                </div>\n                {generateNextButton()}\n                <div className={['button'].join(' ')} onClick={props.toggleSettings}>\n                    <IoIosSettings />\n                </div>\n            </div>\n        </>\n\t);\n\n}","import React, { ReactElement } from 'react';\n\nexport function Bottom(...arr: [\n    (() => Promise<void> | void),\n    ReactElement | string,\n    string\n][]): ReactElement[] {\n    let buttons = [] as ReactElement[];\n    for (let item of arr) {\n        if (!item) continue;\n        let [func, icon, name] = item;\n        buttons.push(<div key={['button', name].join('.')} onClick={func} className='button'>\n            {icon}\n        </div>);\n    }\n    return buttons;\n}","import React, { ReactElement, useEffect, CSSProperties, useState, ReactNode, useRef } from 'react';\nimport { AiOutlineLeft } from 'react-icons/ai';\nimport styles from '../css/components.module.css';\n\ninterface SectionProps {\n    children?: ReactNode & ReactNode[]\n    header: string | ReactElement\n    useInternalState?: boolean\n    value?: string\n    expanded?: boolean\n    setExpanded?: (state: boolean, action: string) => void\n    style?: CSSProperties\n    id?: string\n}\n\nexport function SectionBreak() {\n\n    return (\n        <div className={styles.sectionContainer}>\n            <div className={[styles.sectionHeader, 'topBanner'].join(' ')}>\n                <div className={styles.sectionHeaderText} />\n            </div>\n        </div>\n    );\n}\n\nexport default function CollapsableSection(props: SectionProps) {\n\n    const [internalExpanded, setExpanded] = useState(props.expanded || true);\n    const [height, setHeight] = useState(0);\n\n    const innerDiv = useRef() as React.RefObject<HTMLDivElement>;\n\n    let expanded = props.useInternalState ? internalExpanded : props.expanded;\n\tuseEffect((): void => {\n        if (!innerDiv.current) return;\n        setHeight(expanded ? innerDiv.current.getBoundingClientRect().height : 0);\n\t}, [expanded, innerDiv, props.children]);\n\n    return (\n        <div className={styles.sectionContainer} style={props.style}>\n            <div className={[styles.sectionHeader, 'topBanner'].join(' ')}>\n                <div className={styles.sectionHeaderText} onClick={() => props.useInternalState ? setExpanded(!expanded) : props.setExpanded(!expanded, props.value)}>\n                    {props.header}\n                </div>\n                {!props.children.length ?\n                    null : \n                    <div className={styles.sectionToggle} onClick={() => props.useInternalState ? setExpanded(!expanded) : props.setExpanded(!expanded, props.value)}>\n                        <AiOutlineLeft style={{\n                            transform: expanded ? 'rotate(-90deg)' : 'rotate(0deg)'\n                        }}/>\n                    </div>\n                }\n            </div>\n            <div className={[styles.sectionListWrapper, expanded ? styles.expanded : ''].join(' ')} style={{\n                height\n            }}>\n                <div ref={innerDiv} className={[styles.sectionList].join(' ')} id={props.id}>\n                    {props.children}\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { ReactElement, FormEvent, useState, useCallback, useMemo, useEffect, createRef } from 'react';\nimport CSV from 'papaparse';\nimport url from 'url';\nimport { Player, TournamentPlayers, ID, TournamentStandings, TournamentSettings } from '../interfaces';\nimport { GET, POST, server, FORM} from '../utils/requests';\n\nimport styles from '../css/sidebar.module.css';\nimport { AiFillEdit, AiOutlineClose, AiOutlineCheck } from 'react-icons/ai';\nimport { MdRefresh, MdMenu } from 'react-icons/md';\nimport { IoMdClose } from 'react-icons/io';\nimport { Bottom } from '../components/Buttons';\nimport CollapsableSection, { SectionBreak } from '../components/CollapsableSection';\n\ninterface SidebarProps {\n\tplayerDict: Map<ID, Player>\n\tplayerDictKey: string //required to force a reload\n\tupdatePlayerDict: (force?: boolean) => void\n    setPlayerDict: (value: {\n        id?: string;\n        player?: Player;\n        players?: Player[];\n        hash?: string;\n    }) => void\n\tid: string\n\tsettings: TournamentSettings\n\tsetDisplayPlayer: (id: string) => void\n    checkIfEnoughPlayers: (reload?: boolean) => void\n    togglePasteInput: () => void\n}\n\ninterface ActiveProps {\n\tplayer: Player\n\n\teditPlayer: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n\tactivatePlayer: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n    clearPlayer: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n    allowNewPlayers: boolean\n    setDisplayPlayer: (id: string) => void\n\n\tround: number\n\trequireLastName: boolean\n}\n\nexport function ActivePlayer(props: ActiveProps): ReactElement {\n\n\tconst displayName = props.requireLastName ?\n\t\t[props.player.firstName, props.player.lastName].join(' ') :\n\t\tprops.player.firstName;\n\t\n\treturn (\n\t\t<div id={props.player.id} className={styles.playerLine}>\n\t\t\t<div\n\t\t\t\tclassName={['playerInfo', styles.playerInfo, !props.player.active ? styles.playerInactive : ''].join(' ')}\n\t\t\t\tstyle={{\n\t\t\t\t\tgridColumn: props.round && !props.allowNewPlayers ? '1 / span 3' : undefined\n\t\t\t\t}}\n\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => props.setDisplayPlayer((e.target as HTMLDivElement).parentElement.id)}\n\t\t\t>\n\t\t\t\t{displayName} ({props.player.rating.toString()}) {props.round && (props.player.played < props.round) ? '*' : ''}\n\t\t\t</div>\n\t\t\t{props.round && !props.allowNewPlayers ? null : <>\n\t\t\t\t<button name='edit' className={styles.edit} onClick={(props.editPlayer)} >\n\t\t\t\t\t<AiFillEdit />\n\t\t\t\t</button>\n\t\t\t\t{props.player.active ?\n\t\t\t\t\t<button name='cancel' className={styles.cancel} onClick={(props.clearPlayer)}>\n\t\t\t\t\t\t<AiOutlineClose />\n\t\t\t\t\t</button> :\n\t\t\t\t\t<button name='active' className={styles.activate} onClick={(props.activatePlayer)}>\n\t\t\t\t\t\t<AiOutlineCheck />\n\t\t\t\t\t</button>\n\t\t\t\t}\n\t\t\t</>}\n\t\t</div>\n\t);\n\n}\n\ninterface FormProps {\n\tid: string\n\tplayer?: Player,\n\trequireLastName: boolean\n\tonSubmit: (e: React.FormEvent<HTMLFormElement>) => Promise<void>\n\tonKeyDown?: (e: React.KeyboardEvent<HTMLFormElement>) => void\n    handlePaste?: (e: React.ClipboardEvent<HTMLInputElement>) => void\n    action: string\n}\n\nexport function EditableForm(props: FormProps) {\n\n    const firstInput = createRef() as React.RefObject<HTMLInputElement>;\n    const [focus, mustFocus] = useState(false);\n\n    useEffect(() => {\n        if (!focus && !props.player) return;\n        if (!firstInput.current) return;\n        firstInput.current.focus();\n    }, [firstInput])\n\t\n\treturn (\n\t\t<div className={styles.scoreSection}>\n\t\t\t<form\n\t\t\t\ttarget='_self'\n\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\tonSubmit={(e) => props.onSubmit(e).then(() => mustFocus(true))}\n\t\t\t\tmethod='POST'\n\t\t\t\taction={props.action}\n\t\t\t>\n                <input type='text' className={styles.input} name='firstName' required style={{width: props.requireLastName ? '25%' : '65%'}}\n                    ref={firstInput}\n\t\t\t\t\tplaceholder={props.player ? undefined : props.requireLastName ? 'First name' : 'Team name'}\n\t\t\t\t\tdefaultValue={props.player?.firstName}\n\t\t\t\t\tonPaste={props.handlePaste}\n\t\t\t\t/>\n\t\t\t\t<input type='text' className={styles.input} name='lastName' required={props.requireLastName} style={{width: '40%', display: props.requireLastName ? 'block' : 'none'}}\n\t\t\t\t\tplaceholder={props.player ? undefined : 'Last name'}\n\t\t\t\t\tdefaultValue={props.player?.lastName} \n\t\t\t\t/>\n\t\t\t\t<input type='number' className={styles.input} min={0} max={3200} name='rating' required style={{width: '20%'}}\n\t\t\t\t\tplaceholder={props.player ? undefined : props.requireLastName ? 'Rating' : 'Av. Rating'}\n\t\t\t\t\tdefaultValue={props.player?.rating}\n\t\t\t\t/>\n\t\t\t\t<input type='hidden' name='id' value={props.player?.id} required/>\n\t\t\t\t<button tabIndex={-1} className={styles.submit}>\n\t\t\t\t\t<AiOutlineCheck />\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default function Sidebar(props: SidebarProps): ReactElement {\n\n\tconst [round, setRound] = useState(0);\n\tconst [players, setPlayersRaw] = useState({} as TournamentPlayers);\n\tconst [linkedState, setLinkedState] = useState({} as TournamentStandings);\n\n\t/** UPDATES SECTION */\n\n\tconst updatePlayerState = useCallback((): Promise<TournamentStandings> => {\n\t\tif (!props.id) return Promise.resolve({} as TournamentStandings);\n\t\treturn GET({ url: '/tournament/' + props.id + '/getState' })\n\t\t\t.then(({round, players}: {round: number, players: TournamentStandings}) => {\n\t\t\t\tsetLinkedState(players);\n\t\t\t\tsetRound(round);\n\t\t\t\treturn players;\n\t\t\t});\n\t}, [props.id]);\n\n\t/**\n\t * The fundamental method. Called everytime there's a change to the player list. The backbone of this element.\n\t */\n\tconst setPlayers = useCallback(async (refresh?: boolean | void): Promise<void> => {\n\t\tlet state = refresh !== false ? await updatePlayerState() : linkedState;\n\t\tif (!state) return Promise.resolve();\n\t\tlet players = {} as TournamentPlayers;\n\t\tfor (let [k, v] of Object.entries(state)) {\n\t\t\tplayers[k] = v.map((id: string) => {\n\t\t\t\tlet player = props.playerDict.get(id);\n\t\t\t\t//if (!player) console.error('Unmatched ID: ' + id);\n\t\t\t\treturn player;\n\t\t\t}).sort((a: Player, b: Player) => b.rating - a.rating).filter((v) => v);\n\t\t}\n\t\tsetPlayersRaw(players);\n\t\tprops.checkIfEnoughPlayers(false);\n\t}, [updatePlayerState, props.playerDict, props.checkIfEnoughPlayers, linkedState]);\n\n\t/** CALLBACK SECTION */\n\t\n\tconst updatePlayer = useCallback((id: ID): Promise<Player> => {\n\t\treturn GET({\n\t\t\turl: '/tournament/' + props.id + '/fetchPlayer',\n\t\t\tparams: { id }\n\t\t})\n\t\t\t.then((player: Player) => {\n\t\t\t\tprops.setPlayerDict({player});\n\t\t\t\treturn player;\n\t\t\t});\n\t}, [props.id, props.setPlayerDict]);\n\n\tconst activatePlayer = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n\t\tlet button = e.target as HTMLButtonElement;\n\t\tif (button.constructor.name !== 'HTMLButtonElement') return;\n        let id = (button.parentNode as HTMLDivElement).id;\n\t\tPOST({\n\t\t\turl: '/tournament/' + props.id + '/activatePlayer',\n\t\t\tdata: { id }\n\t\t})\n\t\t\t.then(() => updatePlayer(id))\n\t\t\t.catch(console.error);\n\t}, [props.id, updatePlayer]);\n\n\t/**\n\t * Clears a single page. Called when the 'X' button is hit next to a player\n\t */\n\tconst clearPlayer = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n\t\tlet button = e.target as HTMLButtonElement;\n\t\tif (button.constructor.name !== 'HTMLButtonElement') return;\n\t\tlet id = (button.parentNode as HTMLDivElement).id;\n\t\tPOST({\n\t\t\turl: '/tournament/' + props.id + '/clearPlayer',\n\t\t\tdata: { id }\n\t\t})\n\t\t\t.then((data: string) => {\n                if (data === 'inactive') updatePlayer(id);\n                else props.setPlayerDict({id});\n            })\n\t\t\t.catch(console.error);\n\t}, [updatePlayer, props.id]);\n\n\t/**\n\t * Clears all players. Called when the 'X' button is pressed at the bottom of the sidebar\n\t */\n\tconst clearPlayerList = useCallback(async (): Promise<void> => {\n\t\tawait POST({ url: '/tournament/' + props.id + '/clearPlayers' }).catch(console.error);\n\t\tprops.checkIfEnoughPlayers();\n\t}, [props.id, props.checkIfEnoughPlayers]);\n\t\n\tconst requireLastName = useMemo(() => props.settings.competitors === 'individual', [props.settings.competitors]);\n\n\t/* RENDERING SECTION */\n\n\tconst handlePaste = useCallback((e: React.ClipboardEvent<HTMLInputElement>) => {\n\t\tlet text = e.clipboardData.getData('text').toString();\n\t\tif (!text.trim()) return;\n\t\tif (!text.split('\\n').length && text.split(',').length && text.split('\\t').length) return;\n\t\te.preventDefault();\n\t\tlet json = CSV.parse(text, {\n\t\t\tdelimitersToGuess: [',', '\\t'],\n\t\t\tdynamicTyping: true,\n\t\t\tfastMode: true\n\t\t} as CSV.ParseConfig) as CSV.ParseResult;\n\t\tif (json.data.length > 100) return console.error('Can\\'t paste more than 100 players at once!');\n\t\tlet data = json.data.map((row) => {\n\t\t\tlet [firstName, lastName, rating]: [string, string, number] = row;\n\t\t\tif (!requireLastName) [firstName, rating, lastName] = [...row, ''];\n\t\t\tif (!firstName || (!lastName && requireLastName) || rating === null || rating === undefined) return null;\n\t\t\ttry {\n\t\t\t\tif (typeof firstName !== 'string') throw [firstName, 'string'].join(',');\n\t\t\t\tif (typeof lastName !== 'string' && requireLastName) throw [lastName, 'string'].join(',');\n\t\t\t\tif (typeof rating !== 'number') throw [rating, 'number'].join(',');\n\t\t\t\treturn {firstName, lastName, rating};\n\t\t\t} catch (error) {\n\t\t\t\tif (!text.split('\\n').length) return null;\n\t\t\t\tlet e = error.split(',');\n\t\t\t\tconsole.error(new TypeError('Bad input on row ' + row.join(',') + '\\n' + e[0] + ' is not type ' + e[1]));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t})\n\t\t\t.filter(r => r);\n\t\tPOST({\n\t\t\turl: 'tournament/' + props.id + '/appendPlayers',\n\t\t\tdata\n\t\t})\n\t\t\t.then(() => Promise.all([props.updatePlayerDict(), setPlayers()]));\n\t}, [props.id, requireLastName, props.updatePlayerDict, setPlayers]);\n\n\tconst Forms = useMemo((): JSX.Element[] => {\n\n\t\tlet forms = [] as JSX.Element[];\n\t\t\n\t\tfor (let i = 0; i < Math.max(1, 10 - Object.values(players).reduce((acc: number, curr: Player[]) => acc += curr.length, 0)); i++) {\n\t\t\tforms.push(\n\t\t\t\t<EditableForm\n\t\t\t\t\tkey={['newPlayerForm', i].join('.')}\n\t\t\t\t\tid={props.id}\n\t\t\t\t\tplayer={null}\n\t\t\t\t\trequireLastName={requireLastName}\n\t\t\t\t\tonSubmit={(e: FormEvent<HTMLFormElement>): Promise<void> => FORM(e)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tlet form = e.target as HTMLFormElement;\n\t\t\t\t\t\t\tform.reset();\n\t\t\t\t\t\t})\n                        .then(() => props.updatePlayerDict())\n                    }\n                    handlePaste={i ? undefined : handlePaste}\n                    action={url.resolve(server, ['tournament', props.id, 'appendPlayer'].join('/'))}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn forms;\n    }, [props.updatePlayerDict, props.id, requireLastName, players, handlePaste]);\n    \n    function Entry(entryProps: { player: Player }): ReactElement {\n\n        const [edit, setEdit] = useState(false);\n        const [player, setPlayer] = useState(entryProps.player);\n\n        if (edit) return <EditableForm\n            id={props.id}\n            requireLastName={requireLastName}\n            player={player}\n            onKeyDown={(e: React.KeyboardEvent<HTMLFormElement>) => {\n                const ESCAPE_KEY = 27;\n                if (e.keyCode !== ESCAPE_KEY) return;\n                setEdit(false);\n            }}\n            onSubmit={async (e: FormEvent<HTMLFormElement>): Promise<void> => FORM(e)\n                .then(async () => {\n                    let newPlayer = await updatePlayer(player.id);\n                    setPlayer(newPlayer);\n                    setEdit(false);\n                })\n            }\n            action={url.resolve(server, ['tournament', props.id, 'editPlayer'].join('/'))}\n        />\n\n        return <ActivePlayer\n            player={player}\n            round={round}\n            requireLastName={requireLastName}\n            editPlayer={() => setEdit(true)}\n            activatePlayer={activatePlayer}\n            clearPlayer={clearPlayer}\n            allowNewPlayers={props.settings.allowNewPlayers}\n            setDisplayPlayer={props.setDisplayPlayer}\n        />\n    }\n\n\tconst List = useMemo((): ReactElement[] => {\n\t\tlet list = [] as ReactElement[];\n\t\tfor (let i = round; i >= 0; i-= 0.5) {\n\t\t\tlet score = i.toString();\n            if (!players[score] || !players[score].length) continue;\n            let section = <CollapsableSection\n                key={['sidebar', 'round', score].join('.')}\n                header={score + ' points'}\n                useInternalState={true}\n                id={['container', score].join('.')}\n            >\n                {players[score].map((p) => <Entry key={p.id} player={p} />)}\t\n            </CollapsableSection>\n            list.push(section);\n\t\t}\n\t\treturn list;\n    }, [round, players, requireLastName, props.settings.allowNewPlayers]);\n\n    useEffect(() => {\n        if (!props.playerDict.size) return;\n        setPlayers();\n        props.checkIfEnoughPlayers(false);\n    }, [props.playerDictKey]);\n\n\treturn (\t\t\n        <>\t\n            <div className={styles.sidebar}>\n                <div className={styles.topBanner}>\n                    Tournament Players\n                </div>\t\n                <div className={styles.playersSection}>\n                    {!List.length ? <div className={styles.scoreSection}>\n                        <div className={styles.playerLine}>\n                            <div className={styles.sectionHeader}>\n                                {List.length ? 'Player List' :'No players added yet'}\n                            </div>\n                        </div>\n                    </div> : null}\n                    {List}\n                    {round && !props.settings.allowNewPlayers ? null :\n                        <div className={styles.scoreSection}>\n                            {Forms}\n                        </div>\n                    }\n                    <SectionBreak />\n                </div>\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                {Bottom(\n                    [async () => {\n                        props.togglePasteInput();\n                    }, <MdMenu />, 'paste'],\n                    [async () => {\n                        props.updatePlayerDict(true);\n                    }, <MdRefresh />, 'refresh'],\n                    round === 0 ? [async () => { /*\n                        for (let form of Object.values(this.refs)) {\n                            if (form.constructor.name !== 'HTMLFormElement') continue;\n                            (form as HTMLFormElement).reset();\n                        }*/\n                        if (round !== 0) return;\n                        await clearPlayerList();\n                        props.updatePlayerDict();\n                        setPlayers();\n                    }, <IoMdClose />, 'close'] : null\n                )}\n            </div>\n        </>\n\t);\n};","import React, { ReactElement, useCallback, useState, useEffect, useMemo, createRef, FormEvent } from 'react';\nimport { GET, server, POST } from '../utils/requests';\nimport { Player, TournamentSettings, ID, History, PairingObject } from '../interfaces';\nimport url from 'url';\n\nimport styles from '../css/profile.module.css';\nimport sidebarStyles from '../css/sidebar.module.css';\nimport { IoMdClose } from 'react-icons/io';\nimport { Bottom } from '../components/Buttons';\nimport CollapsableSection, { SectionBreak } from '../components/CollapsableSection';\nimport { AiOutlineCheck, AiOutlineClose } from 'react-icons/ai';\nimport { AxiosRequestConfig } from 'axios';\n\ninterface ActiveProps {\n\tplayer: Player\n    clearClash: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n    setDisplayPlayer: (id: string) => void\n\trequireLastName: boolean\n}\n\nexport function ActivePlayer(props: ActiveProps): ReactElement {\n\n\tconst displayName = props.requireLastName ?\n\t\t[props.player.firstName, props.player.lastName].join(' ') :\n\t\tprops.player.firstName;\n\t\n\treturn (\n\t\t<div id={props.player.id} className={[sidebarStyles.playerLine, styles.playerLine].join(' ')}>\n\t\t\t<div\n\t\t\t\tclassName={['playerInfo', sidebarStyles.playerInfo].join(' ')}\n\t\t\t\tonClick={(e: React.MouseEvent<HTMLDivElement>) => props.setDisplayPlayer((e.target as HTMLDivElement).parentElement.id)}\n\t\t\t>\n\t\t\t\t{displayName}\n\t\t\t</div>\n\t\t\t{\n                <button name='cancel' className={[sidebarStyles.cancel, styles.cancel].join(' ')} onClick={(props.clearClash)}>\n                    <AiOutlineClose />\n                </button>\n            }\n\t\t</div>\n\t);\n\n}\n\ninterface FormProps {\n\tid: string\n\tonSubmit: (e: React.FormEvent<HTMLFormElement>) => Promise<void>\n    action: string\n    player: Player\n    players: Player[]\n    getDisplayName: (player: string) => string\n}\n\nexport function SingleClash(props: FormProps) {\n\n    const firstInput = createRef() as React.RefObject<HTMLInputElement>;\n    const [focus, mustFocus] = useState(false);\n\n    useEffect(() => {\n        if (!focus) return;\n        if (!firstInput.current) return;\n        firstInput.current.focus();\n    }, [firstInput, focus]);\n\n    const handleInput = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n        let input = e.target as HTMLInputElement;\n        let text = input.value;\n        if (!text.trim()) return;\n        let length = text.length;\n        let choices = props.players.filter(p => p.id !== props.player.id && props.getDisplayName(p.id).toLowerCase().startsWith(text.toLowerCase()));\n        let firstChoice = choices[0];\n        if (!firstChoice) return;\n        let autofill = props.getDisplayName(firstChoice.id);\n        input.value = autofill;\n        input.select();\n        input.setSelectionRange(length, autofill.length, 'forward');\n    }, [props.players])\n\t\n\treturn (\n\t\t<div className={styles.scoreSection}>\n\t\t\t<form\n\t\t\t\ttarget='_self'\n\t\t\t\tonSubmit={(e) => props.onSubmit(e).then(() => mustFocus(true))}\n\t\t\t\tmethod='POST'\n\t\t\t\taction={props.action}\n\t\t\t>\n                <input type='text' className={[sidebarStyles.input, styles.input].join(' ')} name='oppName' required\n                    placeholder='Opponent name'\n                    onInput={handleInput}\n                    autoComplete={'off'}\n\t\t\t\t/>\n\t\t\t\t<button tabIndex={-1} className={sidebarStyles.submit}>\n\t\t\t\t\t<AiOutlineCheck />\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\ninterface ProfileProps {\n\tid: string\n\tplayerID: string\n\tsetDisplayPlayer: (id: string) => void\n\tplayerDict: Map<ID, Player>\n\tmodifyPlayerDict: (p: Player, hash: string) => void\n\tsettings: TournamentSettings\n\tplayerDictKey?: string\n}\n\nexport default function Profile(props: ProfileProps): ReactElement {\n    \n    const [playerID, setPlayerID] = useState('');\n    const [player, setPlayer] = useState(null as Player);\n\n    const requireLastName = useMemo(() => props.settings.competitors === 'individual', [props.settings.competitors]);\n\n\tconst updatePlayerFromProps = (refetch?: boolean) => {\n\t\tsetPlayerID(playerID);\t\t\n\t\tif (!props.playerID) {\n\t\t\tsetPlayer(null as Player);\n\t\t\treturn;\n\t\t}\n\t\tif (refetch === false) {\n\t\t\tsetPlayer(props.playerDict.get(props.playerID));\n\t\t} else {\n\t\t\treturn GET({\n\t\t\t\turl: '/tournament/' + props.id + '/fetchPlayer',\n\t\t\t\tparams: {\n\t\t\t\t\tid: props.playerID\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then((_player: Player) => {\n\t\t\t\t\tif (!_player.histories[0]) _player.histories[0] = null;\n\t\t\t\t\tsetPlayer(_player);\n\t\t\t\t});\n\t\t}\n\t}\n\n\tconst getNameFromPlayer = useCallback((_player: Player): string  =>{\n\t\tif (!_player) return '\\u200b';\n\t\tif (requireLastName) return [_player.firstName, _player.lastName].join(' ');\n\t\telse return _player.firstName;\n\t}, [requireLastName]);\n    \n    useEffect(() => {\n        updatePlayerFromProps();\n    }, [props.playerID, props.playerDictKey])\n\n\tconst getDisplayName = useCallback((id: ID): string => {\n        if (!id) return '\\u200b';\n\t\tif (id === 'bye') return 'BYE';\n\t\tlet opp = props.playerDict.get(id);\n\t\tif (!opp) return id;\n\t\tlet displayName: string;\n\t\tif (requireLastName) displayName = [opp.firstName, opp.lastName].join(' ');\n\t\telse displayName = opp.firstName;\n\t\treturn displayName;\n    }, [props.playerDict, requireLastName]);\n    \n    const renderEntry = useCallback(([k, v]: [string, any], i: number): ReactElement => {\n        if (k === 'Playing' && v) {\n            return (\n                <div className={styles.row} key={['row', i].join('.')}>\n                    <div className='fieldBox'>{k + ':'}</div>\n                    <div\n                        className='playerInfo'\n                        id={v as string}\n                        onClick={(e: React.MouseEvent<HTMLDivElement>) => props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n                    >{getDisplayName(v)}</div>\n                </div>\n            );\n        } else {\n            return (\n                <div className={styles.row} key={['row', i].join('.')}>\n                    <div className='fieldBox'>{k + ':'}</div>\n                    <div className='fieldBox'>{v !== null && v!== '' ? v : '\\u200b'}</div>\n                </div>\n            );\n        }\n    }, [props.setDisplayPlayer, getDisplayName]);    \n\n    const [clashes, setClashes] = useState([] as PairingObject[]);\n\n    const updateClashes = useCallback(async () => {\n        if (!player || !player.id) return;\n        GET({\n            url: '/tournament/' + props.id + '/fetchClashes',\n            params: { id: player.id }\n        })\n            .then(setClashes)\n    }, [props.id, setClashes, player]);\n    const clearClash = useCallback(async (oppId) => POST({\n        url: '/tournament/' + props.id + '/clearClash',\n        data: {\n            playerId: player.id,\n            oppId\n        }\n    })\n        .then(updateClashes), [props.id, player, updateClashes]);\n\n    const List = useMemo((): ReactElement[] => {\n        if (!props.playerDict.size) return null;\n        let list = [] as ReactElement[];\n        for (let i = 0; i < clashes.length; i++) {\n            let opp = props.playerDict.get(clashes[i][1]);\n            if (!opp) continue;\n            list.push(<ActivePlayer\n                key={['clash', i].join('.')}\n                player={opp}\n                requireLastName={requireLastName}\n                clearClash={() => clearClash(opp.id)}\n                setDisplayPlayer={props.setDisplayPlayer}\n            />);\n        }\n        return list;\n    }, [props.playerDict, props.playerDictKey, clashes, clearClash, props.setDisplayPlayer, requireLastName]);\n\n    useEffect(() => {\n        updateClashes();\n    }, [updateClashes]);\n\n    const players = useMemo(() => Array.from(props.playerDict.values()), [props.playerDict, props.playerDictKey]);\n\n    if (!player) return null;\n    let Name = getNameFromPlayer(player);\n    const profile = !player ? {} : {\n        'Unique ID': player.id,\n        Status: player.active !== false ? 'Active' : 'Inactive',\n        Rating: player.rating,\n        'Performance rating': player.performanceRating,\n        Playing: player.isPlaying\n    };\n    let history = player.histories;\n\n    const total = (Math.max(player.histories.length, 1) - 1 - (player.isPlaying ? 1 : 0)).toString();\n    const totalGames = player.histories.reduce((acc, curr) => {\n        if (!curr) return acc;\n        acc += curr.played\n        return acc;\n    }, 0);\n    const scores = !player ? {} : {\n        Score: player.score.toString() + ' / ' + total,\n        'Game score': player.gamePoints.toString() + ' / ' + totalGames.toString(),\n        'Expected score': player.expectedScore.toFixed(2),\n        'Expected game score': player.expectedGameScore.toFixed(2) + ' / ' + totalGames,\n    };\n    if (!props.settings.displayPoints) {\n        delete scores['Game score'];\n        delete scores['Expected game score'];\n    }\n\n    return (\n        <>\n            <div className={styles.profile}>\t\t\n                <div className='topBanner'>\n                    {Name}\n                </div>\t\n                {Object.entries(profile).map(renderEntry)}\n                <CollapsableSection\n                    header='Score'\n                    useInternalState={true}\n                    style={{ gridColumn: '1 / span 2' }}\n                >\n                    {Object.entries(scores).map(renderEntry)}\n                </CollapsableSection>\n                {props.settings.allowClashes ? <CollapsableSection\n                    header='Forbidden Pairings'\n                    useInternalState={true}\n                    style={{ gridColumn: '1 / span 2' }}\n                >\n                    {List}\n                    <SingleClash\n                        id={props.id}\n                        getDisplayName={getDisplayName}\n                        onSubmit={(e: FormEvent<HTMLFormElement>): Promise<void> => {\n                            e.preventDefault();\n                            e.persist();\n                            let form = e.target as HTMLFormElement & { oppName: HTMLInputElement };\n                            let opp = players.find(p => getDisplayName(p.id) === form.oppName.value);\n                            let options = {\n                                data: {\n                                    playerId: player.id,\n                                    oppId: opp.id\n                                },\n                                url: form.action\n                            } as AxiosRequestConfig;\n                            return POST(options)\n                                .then(() => {\n                                    let form = e.target as HTMLFormElement;\n                                    form.reset();\n                                })\n                                .then(updateClashes)\n                        }}\n                        player={player}\n                        players={players}\n                        action={url.resolve(server, ['tournament', props.id, 'createClash'].join('/'))}\n                    />\n                </CollapsableSection> : null}\n                <CollapsableSection\n                    header='Results'\n                    useInternalState={true}\n                    style={{ gridColumn: '1 / span 2' }}\n                >\n                    {history.map((minPlayer: History, i: number): ReactElement => {\n                        if (i === 0 || !minPlayer) return null;\n                        let { id, colour } = minPlayer;\n                        let result = minPlayer[props.settings.displayPoints];\n                        return (\n                            <div className={styles.resultsRow} key={['row', 'history', i].join('.')}>\n                                <div className='fieldBox'>{i}</div>\n                                <div\n                                    className='playerInfo'\n                                    id={id}\n                                    onClick={(e: React.MouseEvent<HTMLDivElement>) => props.setDisplayPlayer((e.target as HTMLDivElement).id)}\n                                >{getDisplayName(id)}</div>\n                                <div className='fieldBox'>{colour || '\\u200b'}</div>\n                                <div className='fieldBox'>{typeof result !== 'undefined' && result !== null ? result : '\\u200b'}</div>\n                            </div>\n                        );\n                    })}\n                </CollapsableSection>\n                <SectionBreak />\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                {Bottom([() => props.setDisplayPlayer(''), <IoMdClose />, 'close'])}\n            </div>\t\n        </>\n    );\n}","import { useDebugValue, useState } from 'react';\n\nexport function capitalise(str: string): string {\n\tif (!str) return str;\n\treturn str.slice(0, 1).toUpperCase() + str.slice(1).toLowerCase();\n}\n\nexport function delay(ms: number): Promise<void> {\n\treturn new Promise((res) => {\n\t\tsetTimeout(res, ms);\n\t});\n}\n\nexport function calculateHypotenuse(base: number, height: number): number {\n\treturn Math.sqrt(Math.pow(base, 2) + Math.pow(height, 2));\n}\n\nexport function useStateWithLabel(initialValue: any, name: string) {\n    const [value, setValue] = useState(initialValue);\n    useDebugValue(`${name}: ${value}`);\n    return [value, setValue];\n}\n\nexport function daysBetween(start: Date, end: Date): number {\n\n    const oneDay = 1000 * 60 * 60 * 24; // The number of milliseconds in all UTC days (no DST)\n  \n    // so it's safe to divide by 24 hours\n    return (end.valueOf() - start.valueOf()) / oneDay;\n  }","import { capitalise, daysBetween } from '../utils/prototype';\nimport { TournamentStatus, Player, TournamentSettings, User } from '../interfaces';\nimport { resultsServer } from '../utils/requests';\n\nexport interface TournamentSetting {\n\tname?: string\n\tenum?: string[]\n\tconvert?: (v: any) => string\n\tvalue?: (status: any, players: Player[]) => any\n\ttype?: string\n\tlocked?: boolean,\n\tlockOnInit?: boolean\n\tshow?: {\n        [key in keyof TournamentSettings]?: any\n    }\n\tallow?: {\n\t\tinfinity?: boolean\n\t\tany?: boolean\n\t\tsubmit?: boolean\n        increment?: boolean\n        clear?: boolean\n\t}\n\tnb?: {\n\t\tmin?: number\n\t\tmax?: number\n\t\tstep?: number\n\t}\n\n\tprimaryKey?: boolean\n\tdefaultValue?: any\n}\n\nexport const defaultSettings = {\n\tgeneral: {\n\t\ttournamentId: {\n\t\t\tname: 'Unique ID',\n\t\t\ttype: 'string',\n\t\t\tlocked: true,\n\t\t\tprimaryKey: true\n\t\t},\n\t\tstatus: {\n\t\t\tname: 'Status',\n\t\t\tenum: ['uninitialised', 'active', 'finished'],\n\t\t\tconvert: capitalise,\n\t\t\tdefaultValue: 'uninitialised',\n\t\t\tvalue: (status: TournamentStatus): string => {\n\t\t\t\tif (!status.round) return 'uninitialised';\n\t\t\t\tif (status.active === false) return 'finished';\n\t\t\t\telse return 'active';\n\t\t\t}\n\t\t},\n\t\tpairingSystem: {\n\t\t\tname: 'Pairing system',\n\t\t\tenum: ['swiss'],\n\t\t\tconvert: capitalise,\n\t\t\tlockOnInit: true,\n\t\t\tdefaultValue: 'swiss'\n\t\t},\n\t\tcompetitors: {\n\t\t\tname: 'Tournament type',\n\t\t\tenum: ['individual', 'team'],\n\t\t\tconvert: capitalise,\n\t\t\tlockOnInit: true,\n\t\t\tdefaultValue: 'individual'\n\t\t},\n\t\ttotalRounds: {\n\t\t\tname: 'Total rounds',\n\t\t\tconvert: (v: number | 'Infinity') => v === 'Infinity' ? '∞' : v.toString(),\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: Infinity,\n\t\t\tnb: {\n\t\t\t\tmin: 1,\n\t\t\t\tmax: 100\n\t\t\t},\n\t\t\tallow: {\n\t\t\t\tinfinity: true\n\t\t\t}\n\t\t},\n\t\tratingSystem: {\n\t\t\tname: 'Rating system',\n\t\t\tenum: ['ECF', 'FIDE', 'USCF'],\n\t\t\tlockOnInit: true,\n\t\t\tdefaultValue: 'FIDE'\n\t\t},\n\t\tdisplayPoints: {\n\t\t\tname: 'Show',\n\t\t\tconvert: (v: 'match' | 'game') => capitalise(v) + ' Points',\n\t\t\tenum: ['match', 'game'],\n\t\t\tdefaultValue: 'match'\n\t\t},\n\t\tgamePointTotal: {\n\t\t\tname: 'Sum results to',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 1,\n\t\t\tshow: {\n                displayPoints: 'game'\n            },\n\t\t\tlockOnInit: true,\n\t\t\tnb: {\n\t\t\t\tstep: 1,\n\t\t\t\tmin: 1\n\t\t\t},\n\t\t\tallow: {\n\t\t\t\tany: true\n\t\t\t}\n\t\t}\n\t},\n\tpermissions: {\n        public: {\n            name: 'Public',\n            convert: (v: boolean) => capitalise(v.toString()),\n            lockOnInit: false,\n            type: 'boolean',\n            defaultValue: false\n        },\n\t\turl: {\n\t\t\tname: 'URL',\n\t\t\ttype: 'link',\n            defaultValue: '',\n\t\t\tshow: {\n                public: true\n            },\n\t\t\tvalue: (status: TournamentStatus): string => `${resultsServer}tournament/${status.id}`\n\t\t},\n\t\tshowRatings: {\n\t\t\tname: 'Show ratings',\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: true,\n\t\t\tshow: {\n\t\t\t\tpublic: true\n\t\t\t}\n\t\t},\n\t\tallowNewPlayers: {\n\t\t\tname: 'Mid-way joining?',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\tlockOnInit: false,\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: true\n\t\t},\n\t\tallowSelfSubmissions: {\n\t\t\tname: 'User submissions?',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\tlockOnInit: false,\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: true\n\t\t},\n\t\tallowClashes: {\n\t\t\tname: 'Forbid certain pairings?',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\tlockOnInit: false,\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: true\n        },\n\t\troundTimes: {\n\t\t\tname: 'Round times?',\n\t\t\tconvert: (v: boolean) => capitalise(v.toString()),\n\t\t\ttype: 'boolean',\n\t\t\tdefaultValue: false,\n\t\t\tlocked: false // TODO: implement on backend\n\t\t}\n\t},\n\tpoints: {\n\t\tlossReward: {\n\t\t\tname: 'Points on loss',\n\t\t\tlockOnInit: true,\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tnb: {\n\t\t\t\tstep: 0.1\n\t\t\t}\n\t\t},\n\t\tdrawReward: {\n\t\t\tname: 'Points on draw',\n\t\t\tlockOnInit: true,\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0.5,\n\t\t\tnb: {\n\t\t\t\tstep: 0.1\n\t\t\t}\n\t\t},\n\t\twinReward: {\n\t\t\tname: 'Points on win',\n\t\t\tlockOnInit: true,\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 1,\n\t\t\tnb: {\n\t\t\t\tstep: 0.1\n\t\t\t}\n\t\t},\n\t\tbyeReward: {\n\t\t\tname: 'Bye reward',\n\t\t\tenum: ['win', 'draw', 'loss'],\n\t\t\tlockOnInit: true,\n\t\t\tdefaultValue: 'win'\n\t\t},\n\t\tperformanceSystem: {\n\t\t\tname: 'Performance rating',\n\t\t\tenum: ['ELO', 'FIDE'],\n\t\t\tlockOnInit: false,\n\t\t\tdefaultValue: 'ELO'\n\t\t}\n\t},\n\tstats: {\n\t\tnbPlayers: {\n\t\t\tname: 'Number of players',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => players.length,\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\tactivePlayers: {\n\t\t\tname: 'Active players',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => players.filter(p => p.active).length,\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\tmatchesPlayed: {\n\t\t\tname: 'Matches played',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => players.reduce((acc, curr) => acc += curr.played, 0) / 2,\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\tgamesPlayed: {\n\t\t\tname: 'Games played',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 0,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => players.reduce((acc, curr) => acc += curr.histories.reduce((acc, curr) => curr ? acc += curr.played : acc, 0), 0) / 2,\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\taverageRating: {\n\t\t\tname: 'Average rating',\n\t\t\ttype: 'number',\n\t\t\tdefaultValue: 1200,\n\t\t\tvalue: (status: TournamentStatus, players: Player[]): number => {\n\t\t\t\tlet sum = players.reduce((acc, curr) => acc += curr.rating, 0);\n\t\t\t\treturn Math.round(sum / players.length);\n\t\t\t},\n\t\t\tconvert: (v: number) => v.toString()\n\t\t},\n\t\tcreatedAt: {\n\t\t\tname: 'Created at',\n\t\t\tconvert: (v: string) => new Date(v).toString().slice(0, 24),\n\t\t\tlocked: true\n\t\t},\n\t\tupdatedAt: {\n\t\t\tname: 'Last updated',\n\t\t\tconvert: (v: string) => new Date(v).toString().slice(0, 24),\n\t\t\tlocked: true\n\t\t}\n\t}\n} as {\n\t[key: string]: {\n\t\t[key: string]: TournamentSetting\n\t}\n};\n\nexport const defaultUserSettings = {\n\tusername: {\n\t\tname: 'Username',\n\t\ttype: 'string',\n\t\tlocked: true,\n\t\tprimaryKey: true,\n\t},\n\temail: {\n\t\tname: 'Email',\n\t\ttype: 'string',\n\t\tlocked: true,\n\t\tdefaultValue: ''\n\t},\n    licensed: {\n        name: 'License',\n        type: 'number',\n        defaultValue: 0,\n        locked: true,\n        convert: (v: number) => {\n            if (v === 1) return 'Trial';\n            if (v === 2) return 'Full';\n            if (v === 3) return 'Admin';\n            return 'Free';\n        }\n    },\n    daysRemaining: {\n        name: 'Trial time',\n        type: 'number',\n        locked: true,\n        value: (user: User) => Math.floor(30 - daysBetween(new Date(user.lastLicensed), new Date(Date.now()))),\n        convert: (v: number) => v + ' days'\n    },\n    lastLicensed: {\n        name: 'Last licensed',\n        type: 'date',\n        defaultValue: null,\n        locked: true,\n        convert: (v: string) => new Date(v).toString().slice(0, 21),\n        validate: (v: string) => !!v\n    },\n\tcreatedAt: {\n\t\tname: 'Account created',\n\t\tconvert: (v: string) => new Date(v).toString().slice(0, 21),\n\t\tlocked: true,\n\t\tdefaultValue: Date.now()\n\t},\n\tupdatedAt: {\n\t\tname: 'Last seen',\n\t\tconvert: (v: string) => new Date(v).toString().slice(0, 21),\n\t\tlocked: true,\n\t\tdefaultValue: Date.now()\n\t}\n} as {\n\t[key: string]: {\n\t\tname?: string,\n\t\tenum?: string[],\n        convert?: (v: any) => string,\n        validate?: (v: any) => boolean\n        value?: (user: User) => any\n\t\ttype?: string\n\t\tlocked?: boolean\n\n\t\tprimaryKey?: boolean\n\t\tdefaultValue?: any\n\t}\n};","import React, { ReactElement, useEffect, useState, useMemo, useCallback } from 'react';\nimport { EditableField } from '../components/';\nimport { TournamentSettings, TournamentStatus, Player } from '../interfaces';\nimport url from 'url';\n\nimport styles from '../css/profile.module.css';\nimport { server, POST } from '../utils/requests';\nimport { defaultSettings, TournamentSetting } from '../assets/settings';\nimport { capitalise } from '../utils/prototype';\nimport { Bottom } from '../components/Buttons';\nimport { IoMdClose } from 'react-icons/io';\nimport CollapsableSection, { SectionBreak } from '../components/CollapsableSection';\n\ninterface SettingsProps {\n\tupdateTournamentSettings: () => Promise<void>\n\tupdateSetting: (k: string, v: any) => Promise<void>\n\tupdateRounds: () => Promise<void>\n\tstatus: TournamentStatus\n\tsettings: TournamentSettings\n\ttoggleSettings: () => void\n\tsetLastRound: (override: boolean) => void // need to include a method to cancel a last round token when the total rounds is incremented\n\ttriggerError: (message: string) => void\n\tplayers: Player[]\n\trounds: Date[]\n}\n\nconst watchProps = Object.values(defaultSettings).reduce((acc, curr) => {\n    for (let def of Object.values(curr)) {\n        if (def.show) acc.push(...Object.keys(def.show));\n    }\n    return acc;\n}, []) as (keyof TournamentSettings)[];\n\nfunction modifyHeightValues (): void {\n    let headers = Array.from(document.querySelectorAll('.' + [styles.sectionListWrapper].join('.'))) as HTMLDivElement[];\n    for (let h of headers) {\n        let list = h.firstElementChild as HTMLDivElement;\n        h.style.height = h.className.includes(styles.expanded) ? list.getBoundingClientRect().height + 'px' : '0px';\n    }\n};\n\nexport default function Settings(props: SettingsProps): ReactElement {\n\n    const [sectionExpando, setSection] = useState('general');\n\n\tconst handleToggle = useCallback((k: string, v: any, def: {\n\t\tname?: string,\n\t\tenum?: string[],\n\t\tconvert?: (v: any) => string,\n\t\ttype?: string,\n\t\tlocked?: boolean,\n\t\tlockOnInit?: boolean\n\t}) => {\n\t\ttry {\n\t\t\tlet value: any;\n\t\t\tif (def.enum) {\n\t\t\t\tlet index = def.enum.indexOf(v);\n\t\t\t\tif (index === -1) console.error('Invalid setting value ' + k + ': ' + v);\n\t\t\t\tlet setIndex = (index + 1) % def.enum.length;\n\t\t\t\tvalue = def.enum[setIndex];\n\t\t\t} else\n\t\t\tif (def.type === 'boolean') {\n\t\t\t\tvalue = !v;\n\t\t\t} else\n\t\t\tif (def.type === 'number') {\n\n\t\t\t\tif (v === 'Infinity') value = Infinity as number;\n\t\t\t\telse if (v === '∞') value = Infinity as number;\n\t\t\t\telse v = Number(v) as number;\n\n\t\t\t\tif (k === 'totalRounds') {\n\t\t\t\t\tif (v <= props.status.round) throw new Error('Can\\'t make total number of rounds less than current round number');\n\t\t\t\t\tif (v !== Infinity && v >= 100) throw new Error('Can\\'t make total number of rounds more than 100');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tprops.updateSetting(k, value);\n\t\t} catch (e) {\n\t\t\tif (e && e.message) props.triggerError(e.message);\n\t\t}\n    }, [props.status.round, props.updateSetting, props.triggerError]);\n    \n    const clearRound = useCallback((round: number): Promise<void> => {\n        return POST({\n            url: '/tournament/' + props.status.id + '/clearRound',\n            data: { round }\n\t\t});\n    }, [props.status.id]);\n\n    const watchedSettings = useMemo(() => Object.entries(props.settings).filter(([k]) => watchProps.includes(k as keyof TournamentSettings)), [props.settings])\n    \n    useEffect(() => {\n        modifyHeightValues();\n    }, [JSON.stringify(watchedSettings)]);\n\n    \n    const renderRound = useCallback((i: number) => {\n        return (\n            <div className={[styles.row, styles.roundRow].join(' ')} key={['row', i].join('.')}>\n                <div className='fieldBox'>\n                    {`Round ${i}:`}\n                </div>\n                <EditableField\n                    handleSubmit={props.updateSetting}\n                    handleClear={() => clearRound(i)}\n                    content={props.rounds[i] ? props.rounds[i].toString() : ''}\n                    defaultEditContent={new Date(Date.now()).toISOString()}\n                    url={url.resolve(server, ['tournament', props.status.id, 'updateRound'].join('/'))}\n                    inputType='datetime-local'\n                    onSubmitSuccess={(e) => {\n                        props.updateRounds();\n                        return e;\n                    }}\n                    additionalStyles={{\n                        editableField: styles.editableField,\n                        input: styles.input,\n                    }}\n                    additionalInputProps={{}}\n                    name={i.toString()}\n                    show={{\n                        submit: true,\n                        increment: false,\n                        clear: true\n                    }}\n                />\n            </div>\n        );\n    }, [props.updateSetting, props.rounds, props.status.id, props.updateRounds]);\n\n\tconst renderEntry = useCallback((([k, def]: [keyof TournamentSettings, TournamentSetting], i: number): ReactElement => {\n        let hidden = false;\n        if (def.show) {\n            for (let [k, v] of Object.entries(def.show)) {\n                let value = props.settings[k as keyof TournamentSettings];\n                if (value !== v) hidden = true;\n            }\n        }\n        if (hidden) return null;\n        \n\t\tlet locked = false;\n\t\tif (def.locked) locked = true;\n        else if (def.lockOnInit && props.status.round) locked = true;\n        \n        let v = props.settings[k as keyof TournamentSettings] ?? def.defaultValue;\n\t\tlet content = def.convert && !def.value ? def.convert(v) : v as string;\n        let displayContent = typeof content !== 'undefined' ? content.toString() : '\\u200b';\n\t\treturn (\n\t\t\t<div className={styles.row} key={['row', i].join('.')}>\n\t\t\t\t<div className={['fieldBox', def.show ? styles.semiPresent : ''].join(' ')}>\n\t\t\t\t\t{def.name}\n\t\t\t\t\t{def.name.endsWith('?') ? '' : ':'}\n\t\t\t\t</div>\n\t\t\t\t{(() => {\n\t\t\t\t\tif (locked || def.value) {\n                        if (def.value) displayContent = def.value(props.status, props.players);\n                        if (def.convert) displayContent = def.convert(displayContent);\n                        return <div\n                            style={{\n                                cursor: def.type === 'link' ? 'copy' : 'default'\n                            }}\n                            className={['fieldBox', styles.locked].join(' ')}\n                            onClick={def.type !== 'link' ? null : () => navigator.clipboard.writeText(displayContent)}\n                        >\n\t\t\t\t\t\t\t{displayContent}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t} else\n\t\t\t\t\tif (def.type === 'number') {\n\t\t\t\t\t\treturn <EditableField\n\t\t\t\t\t\t\thandleSubmit={props.updateSetting}\n\t\t\t\t\t\t\tcontent={displayContent}\n\t\t\t\t\t\t\turl={url.resolve(server, ['tournament', props.status.id, 'updateSetting'].join('/'))}\n\t\t\t\t\t\t\tinputType='number'\n\t\t\t\t\t\t\tonSubmitSuccess={(e) => {\n\t\t\t\t\t\t\t\tprops.updateTournamentSettings();\n\t\t\t\t\t\t\t\treturn e;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tadditionalStyles={{\n\t\t\t\t\t\t\t\teditableField: styles.editableField,\n\t\t\t\t\t\t\t\tinput: styles.input\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tname={k}\n\t\t\t\t\t\t\tadditionalInputProps={def.nb}\n\t\t\t\t\t\t\tshow={{\n\t\t\t\t\t\t\t\tsubmit: true,\n\t\t\t\t\t\t\t\tincrement: true,\n\t\t\t\t\t\t\t\t...def.allow\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn <div\n\t\t\t\t\t\t\tclassName={['fieldBox', styles.editable].join(' ')}\n\t\t\t\t\t\t\tonClick={() => handleToggle(k, v, def)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{displayContent}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t})()}\n\t\t\t</div>\n\t\t);\n\t}), [props.settings, props.status, props.players, props.updateSetting, props.status.id, props.updateTournamentSettings]);\n\n\n    let roundEntries = [];\n    let length = props.settings.totalRounds === Infinity || props.settings.totalRounds === 'Infinity' ? Math.max(props.rounds.length, 1) : props.settings.totalRounds;\n    for (let i = 1; i <= length; i++) roundEntries.push(i);\n\n    return (\n        <>\n            <div className={styles.profile} >\t\t\t\t\n                <div className='topBanner'>\n                    Settings\n                </div>\n                {Object.entries(defaultSettings).map(([section, data]): ReactElement => {\n                    return (\n                        <CollapsableSection\n                            key={section}\n                            value={section}\n                            header={capitalise(section)}\n                            expanded={sectionExpando === section}\n                            setExpanded={(state: boolean, action: string) => setSection(state ? action : '')}\n                        >\n                            {(Object.entries(data) as [keyof TournamentSettings, TournamentSetting][])\n                                .map(renderEntry)}\n                        </CollapsableSection>\n                    )\n                })}\n                {props.settings.roundTimes ? <CollapsableSection\n                    key={'rounds'}\n                    value={'rounds'}\n                    header={'Rounds'}\n                    expanded={sectionExpando === 'rounds'}\n                    setExpanded={(state: boolean, action: string) => setSection(state ? action : '')}\n                >\n                    {roundEntries.map(renderRound)}\n                </CollapsableSection> : null}\n                <SectionBreak />\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                {Bottom([\n                    props.toggleSettings,\n                    <IoMdClose />,\n                    'close'\n                ])}\n            </div>\n        </>\n    );\n}","import React, { ReactElement, useMemo, useCallback, useReducer } from 'react';\nimport { TournamentStatus, Player, TournamentSettings } from '../interfaces';\n\nimport styles from '../css/crosstable.module.css';\nimport { MdExitToApp } from 'react-icons/md';\n\ninterface TableProps {\n\tsetDisplayPlayer: (id: string) => void\n\tshow: () => void\n\tstatus: TournamentStatus\n\tplayers: Player[]\n\tsettings: TournamentSettings\n}\n\ninterface ColumnData {\n\tid?: (entry: Player, i: number) => string\n\tname: string | ((key: string, i: number) => string)\n\tclassName: 'blank' | 'player' | 'locked' | 'rating' | 'unset' | 'edit' | ((v: string, i: number, settings: TournamentSettings) => string),\n\tsort?: false | ((a: any, b: any) => number),\n\tshow?: (entry: Player, i: number, settings: TournamentSettings) => boolean\n\tvalue: (entry: Player, i: number, settings: TournamentSettings) => any\n\tconvert?: (v: any, p: Player, s: TournamentSettings) => string\n\tpostConvert?: (v: string, i: number) => string\n}\n\nconst columns = {\n\tpre: {\n\t\tid: {\n\t\t\tname: '',\n\t\t\tclassName: 'blank',\n\t\t\tsort: false,\n\t\t\tvalue: (): number => 0,\n\t\t\tpostConvert: (v: string, i: number): string => (1 + i).toString()\n\t\t},\n\t\tname: {\n\t\t\tname: 'Name',\n\t\t\tclassName: 'player',\n\t\t\tid: (p: Player): string => p.id,\n\t\t\tsort: (a: string, b: string) => {\n\t\t\t\tif (a > b) return 1;\n\t\t\t\tif (a < b) return -1;\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\tvalue: (p: Player, i: number, s: TournamentSettings): string => s.competitors === 'individual' ? [p.firstName, p.lastName].join(' ') : p.firstName\n\t\t},\n\t\trating: {\n\t\t\tname: 'Rating',\n\t\t\tclassName: 'locked',\n\t\t\tvalue: (p: Player): number => p.rating,\n\t\t\tshow: (entry: Player, i: number, s: TournamentSettings) => s.showRatings\n\t\t}\n\t},\n\troundColumn: {\n\t\tname: (key: string, i: number): string => key.slice(-1),\n\t\tclassName: (v: string, i: number, s: TournamentSettings) => {\n\t\t\tif (v === '*') return 'edit';\n\t\t\tif (v === '') return 'unset';\n\t\t\telse return 'locked';\n\t\t},\n\t\tvalue: () => {},\n\t\tconvert: (v: string, p: Player, s: TournamentSettings) => {\n\t\t\tif (v === '') return '';\n\t\t\telse if (v === '*') return '*';\n\t\t\tlet nb = parseInt(v);\n\t\t\tlet output: string;\n\t\t\tif (nb === 0.5) output = '½';\n\t\t\telse output = nb.toString();\n\t\t\tif (v.endsWith('b')) output += 'b';\n\t\t\treturn output;\n\t\t},\n\t\tsort: (a: string, b: string): number => {\n\t\t\tif (a === b) return 0;\n\t\t\tif (a === '') return -1;\n\t\t\telse if (b === '') return -1;\n\t\t\tif (a === '*') return 1;\n\t\t\telse if (b === '*') return -1;\n\t\t\tlet [aN, bN] = [parseInt(a), parseInt(b)];\n\t\t\tif (a.endsWith('b')) aN -= 0.001;\n\t\t\tif (b.endsWith('b')) bN -= 0.001;\n\t\t\treturn bN - aN;\n\t\t}\n\t},\n\tpost: {\n\t\tscore: {\n\t\t\tname: 'MP',\n\t\t\tclassName: 'locked',\n\t\t\tvalue: (p: Player) => parseFloat(p.score.toString()),\n\t\t\tconvert: (v: number, p: Player): string => v.toFixed(1) + ' / ' + p.played\n\t\t},\n\t\tgamePoints: {\n\t\t\tname: 'GP',\n\t\t\tclassName: 'locked',\n\t\t\tvalue: (p: Player) => p.gamePoints,\n\t\t\tconvert: (v: number): string => v.toFixed(1)\n\t\t},\n\t\twinPercentage: {\n\t\t\tname: 'Win %',\n\t\t\tclassName: 'rating',\n\t\t\tvalue: (p: Player): number => p.played === 0 ? -1 : p.score * 100 / p.played,\n\t\t\tconvert: (v: number): string => {\n\t\t\t\tif (v < 0) return '-';\n\t\t\t\treturn v.toFixed()\n\t\t\t}\n\t\t},\n\t\tperformanceRating: {\n\t\t\tname: 'Perf',\n\t\t\tclassName: 'rating',\n\t\t\tvalue: (p: Player) => p.performanceRating,\n\t\t\tconvert: (v: number): string => v.toFixed(),\n\t\t\tshow: (entry: Player, i: number, s: TournamentSettings) => s.showRatings\n\t\t},\n\t\tratingDifference: {\n\t\t\tname: 'P. +/-',\n\t\t\tclassName: 'rating',\n\t\t\tvalue: (p: Player): number => {\n\t\t\t\tif (!p.performanceRating) return 0;\n\t\t\t\treturn p.performanceRating - p.rating;\n\t\t\t},\n\t\t\tconvert: (v: number): string => {\n\t\t\t\tif (!v) return '';\n\t\t\t\tif (v > 0) return '+' + v.toString();\n\t\t\t\telse return v.toString()\n\t\t\t},\n\t\t\tshow: (entry: Player, i: number, s: TournamentSettings) => s.showRatings\n\t\t},\n\t\texpectedScore: {\n\t\t\tname: 'Expected',\n\t\t\tclassName: 'rating',\n\t\t\tvalue: (p: Player): number => p.expectedScore,\n\t\t\tconvert: (v: number, p: Player): string => v.toFixed(1) + ' / ' + p.played,\n\t\t\tshow: (entry: Player, i: number, s: TournamentSettings) => s.showRatings\n\t\t},\n\t\texpectedDifference: {\n\t\t\tname: 'E. +/-',\n\t\t\tclassName: 'rating',\n\t\t\tvalue: (p: Player): number => p.score - p.expectedScore,\n\t\t\tconvert: (v: number): string => {\n\t\t\t\tif (typeof v === 'undefined') return '';\n\t\t\t\tif (v > 0) return '+' + v.toFixed(2);\n\t\t\t\telse return v.toFixed(2)\n\t\t\t},\n\t\t\tshow: (entry: Player, i: number, s: TournamentSettings) => s.showRatings\n\t\t},\n\t}\n} as {\n\tpre: {\n\t\t[key: string]: ColumnData\n\t},\n\troundColumn: ColumnData\n\tpost: {\n\t\t[key: string]: ColumnData\n\t}\n\n}\n\nexport default function CrossTable(props: TableProps): ReactElement {\n\n\tconst totalRounds = useMemo((): number => {\n\t\tlet totalRounds: number;\n\t\tif (props.status.round > props.settings.totalRounds) totalRounds = props.status.round;\n\t\telse if (props.settings.totalRounds === 'Infinity') totalRounds = props.status.round;\n\t\telse totalRounds = props.settings.totalRounds;\n\t\treturn totalRounds;\n\t}, [props.status.round, props.settings.totalRounds]);\n\n\tconst roundHeaders = useMemo(() => {\n\t\tlet h = [] as string[];\n\t\tfor (let i = 1; i <= totalRounds; i++) {\n\t\t\th.push('round.' + i.toString());\n\t\t}\n\t\treturn h;\n\t}, [totalRounds]);\n\n\tconst headers: string[] = useMemo(() => [...Object.keys(columns.pre), ...roundHeaders, ...Object.keys(columns.post)], [roundHeaders])\n\t\t.filter((key, i) => {\n\t\t\tlet meta = columns.pre[key] || columns.post[key];\n\t\t\tif (!meta) return true;\n\t\t\tif (meta.show && !meta.show(null as Player, i, props.settings)) return false;\n\t\t\treturn true;\n\t\t});\n\n\tconst setSortHeader = useCallback((state: [string, number], action: string): [string, number] => {\n\t\tif (!headers.includes(action)) return ['', 0];\n\t\tif (state[0] !== action) return [action, 0];\n\t\telse return [action, state[1] + 1];\n\t}, [headers]);\n\tconst [sort, sortBy] = useReducer(setSortHeader, ['score', 0])\n\n\tconst renderRounds = useCallback((p: Player) => {\n\t\tlet scores = [''] as string[];\n\t\tfor (let i = 1; i <= totalRounds; i++) {\n\t\t\tif (!p.histories[i]) {\n\t\t\t\tif (i === props.status.round) scores[i] = '*'\n\t\t\t\telse scores[i] = '';\n\t\t\t\tcontinue;\n\t\t\t};\n\t\t\tif (p.histories[i].match === null) scores[i] = '*';\n\t\t\telse scores[i] = p.histories[i].match.toString();\n\t\t\tif (p.histories[i].id === 'bye') scores[i] += 'b';\n\t\t}\n\t\treturn scores.slice(1);\n\t}, [totalRounds, props.status.round]);\t\n\n\tconst renderRows: JSX.Element[] = useMemo(() => {\n\t\tlet rowsData = [] as [number, ColumnData, Player][][];\n\t\tfor (let i = 0; i < props.players.length; i++) {\n\t\t\tlet p = props.players[i];\n\t\t\tlet pres = [] as [number, ColumnData, Player][];\n\t\t\tfor (let [k, meta] of Object.entries(columns.pre)) {\n\t\t\t\tif (meta.show && !meta.show(p, i, props.settings)) continue;\n\t\t\t\tpres.push([meta.value(p, i, props.settings), meta, p]);\n\t\t\t}\n\t\t\tlet rounds = renderRounds(p).map(entry => [entry as any as number, columns.roundColumn, p]) as [number, ColumnData, Player][];\n\t\t\tlet post = [] as [number, ColumnData, Player][];\n\t\t\tfor (let [k, meta] of Object.entries(columns.post)) {\n\t\t\t\tif (meta.show && !meta.show(p, i, props.settings)) continue;\n\t\t\t\tpost.push([meta.value(p, i, props.settings), meta, p]);\n\t\t\t}\n\t\t\tlet rowData = [...pres, ...rounds, ...post];\n\t\t\trowsData.push(rowData);\n\t\t}\n\n\t\tlet sortFunc = (a: number, b: number): number => b - a;\n\t\tlet sortMeta = sort[0].startsWith('round') ? columns.roundColumn : (columns.pre[sort[0]] || columns.post[sort[0]]);\n\t\tif (sortMeta && sortMeta.sort !== false) {\n\t\t\tif (sortMeta.sort) sortFunc = sortMeta.sort;\n\t\t\tlet sortCol = headers.indexOf(sort[0]);\n\t\t\trowsData = rowsData.sort((a, b) => sort[1] % 2 ? sortFunc(b[sortCol][0], a[sortCol][0]) : sortFunc(a[sortCol][0], b[sortCol][0]));\n\t\t}\n\n\t\tlet rows = rowsData.map((rowData, i) => {\n\t\t\treturn (\n\t\t\t\t<tr key={'row.' + i} className={styles.tr}>\n\t\t\t\t\t{rowData.map(([value, meta, p]: [number, ColumnData, Player], j: number) => {\n\t\t\t\t\t\tlet display = value ? value.toString() : '';\n\t\t\t\t\t\tif (meta.convert) display = meta.convert(value, p, props.settings);\n\t\t\t\t\t\telse if (meta.postConvert) display = meta.postConvert(display, i);\n\t\t\t\t\t\tif (typeof display === 'undefined' || display === '') display = '\\u200b';\n\t\t\t\t\t\tlet className = typeof meta.className === 'function' ? meta.className(display, j, props.settings) : meta.className\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tid={meta.id ? meta.id(p, j) : undefined}\n\t\t\t\t\t\t\t\t\tkey={[value, j].join('.')}\n\t\t\t\t\t\t\t\t\tclassName={[styles.cell, styles[className]].join(' ')}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{display}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</tr>\n\t\t\t);\n\t\t})\n\t\treturn rows;\n\t}, [props.players, props.settings, renderRounds, sort]);\n\t\t\n\tconst title = `Tournament '${props.status.name || props.status.id}' results after ${props.status.round} rounds`;\n\treturn (\n\t\t<div className={styles.gridPage}>\t\t\t\t\n\t\t\t<div className={styles.titles}>\n\t\t\t\t<div>{title}</div>\n\t\t\t\t<div className={['button', styles.closeButton].join(' ')} onClick={props.show}>\n\t\t\t\t\t<MdExitToApp />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<table className={styles.table}>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t{headers.map((key, i) => {\n\t\t\t\t\t\t\tlet meta = key.startsWith('round') ? columns.roundColumn : (columns.pre[key] || columns.post[key]);\n\t\t\t\t\t\t\treturn <th\n\t\t\t\t\t\t\t\tscope='column'\n\t\t\t\t\t\t\t\tkey={['column', i].join('.')}\n\t\t\t\t\t\t\t\tclassName={styles.th}\n\t\t\t\t\t\t\t\tid={key}\n\t\t\t\t\t\t\t\tonClick={() => sortBy(key)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className={[styles.cell, styles.headerCell].join(' ')}>\n\t\t\t\t\t\t\t\t\t{typeof meta.name === 'function' ? meta.name(key, i) : meta.name}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</th>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\t\t\t\t\t\t\n\t\t\t\t\t{renderRows}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n}","import React, { ReactElement, useCallback } from 'react';\nimport { TournamentSettings, TournamentStatus } from '../interfaces';\nimport CSV from 'papaparse';\n\nimport styles from '../css/crosstable.module.css';\nimport { MdExitToApp } from 'react-icons/md';\nimport { POST } from '../utils/requests';\n\ninterface PasteInputProps {\n    closePasteInput: () => void\n    status: TournamentStatus\n    settings: TournamentSettings\n    id: string\n    updatePlayerDict: () => void\n}\n\nexport default function PasteInput(props: PasteInputProps): ReactElement {\n\n    const requireLastName = false;\n\n\tconst handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        let form = e.target as HTMLFormElement;\n        let textArea = form.textArea as HTMLTextAreaElement;\n        let text = textArea.value;\n\t\tif (!text.trim()) return;\n\t\tif (!text.split('\\n').length && text.split(',').length && text.split('\\t').length) return;\n\t\tlet json = CSV.parse(text, {\n\t\t\tdelimitersToGuess: [',', '\\t'],\n\t\t\tdynamicTyping: true,\n\t\t\tfastMode: true\n\t\t} as CSV.ParseConfig) as CSV.ParseResult;\n\t\tif (json.data.length > 150) return console.error('Can\\'t paste more than 150 players at once!');\n\t\tlet data = json.data.map((row) => {\n\t\t\tlet [firstName, rating]: [string, number] = row;\n\t\t\ttry {\n\t\t\t\tif (typeof firstName !== 'string') throw [firstName, 'string'].join(',');\n\t\t\t\tif (typeof rating !== 'number') throw [rating, 'number'].join(',');\n\t\t\t\treturn {firstName, rating};\n\t\t\t} catch (error) {\n\t\t\t\tif (!text.split('\\n').length) return null;\n\t\t\t\tlet e = error.split(',');\n\t\t\t\tconsole.error(new TypeError('Bad input on row ' + row.join(',') + '\\n' + e[0] + ' is not type ' + e[1]));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t})\n            .filter(r => r);\n\t\tPOST({\n\t\t\turl: 'tournament/' + props.id + '/appendPlayers',\n\t\t\tdata\n\t\t}); /*\n\t\tPOST({\n\t\t\turl: 'tournament/' + props.id + '/appendPlayersHack',\n\t\t\tdata: json.data\n\t\t})\n\t\t\t.then(() => Promise.all([props.updatePlayerDict()]));*/\n\t}, [props.id, requireLastName, props.updatePlayerDict]);\n\t\t\n    let title = `CSV player data entry for tournament '${props.status.name || props.status.id}'`;\n    return (\n        <>\t\t\t\t\n            <div className={styles.titles}>\n                <div>{title}</div>\n                <div className={['button', styles.closeButton].join(' ')} onClick={props.closePasteInput}>\n                    <MdExitToApp />\n                </div>\n            </div>\n            <div className={styles.subheader}>\n                Please paste your input in csv (comma-separated values) format\n            </div>\n            <div className={styles.container}>\n                <form\n                    className={styles.form}\n                    target='_self'\n                    onSubmit={handleSubmit}\n                    method='POST'\n                >\n                    <textarea className={styles.textarea} name='textArea'/>                \n                    <button\n                        type='submit'\n                        className={styles.submit}\n                    >\n                        SUBMIT\n                    </button>\n                </form>\n            </div>\n        </>\n    );\n}","import React, { ReactElement, useState, useEffect, Dispatch, SetStateAction, CSSProperties, useCallback, useReducer, useMemo } from 'react';\nimport { InfoBar, Pairings, Sidebar, Profile, Settings, CrossTable, PasteInput } from './tournament';\nimport { Player, TournamentSettings, ID, TournamentStatus } from './interfaces';\nimport { GET, POST, cookies } from './utils/requests';\n\nimport styles from './css/tournament.module.css';\n\nconst defaultColumns = [30.8, 38.4, 30.8];\n\ninterface TournamentProps {\n\tid: string\n\tcloseTournament: () => void\n\ttriggerError: (message: string) => void\n}\n\nfunction dispatchEvent(eventName: string): void {\n\tlet event = document.createEvent('HTMLEvents') as Event & { eventName: string };\n\tevent.initEvent(eventName, true, true);\n\tevent.eventName = eventName;\n\tdocument.dispatchEvent(event);\n}\n\nfunction useCacheColumns(columns: number[]) {\n\n\tconst [cachedColumns, setColumns] = useState(columns);\n\n\tuseEffect(() => {\n\t\tif (JSON.stringify(columns) === JSON.stringify(cachedColumns)) return;\n\t\tcookies.set('columns', columns.map(nb => nb.toString()).join(','));\n\t\tsetColumns(columns);\n\t}, [columns]);\n\n}\n\nfunction MouseEvents({ columns, boundaries, resize, setColumns, setResize, toggleSidebar, toggleSettings, setDisplayPlayerRaw }: {\n\tcolumns: number[],\n\tboundaries: number[],\n\tresize: number,\n\tsetColumns: (columns: number[]) => void\n\tsetResize: Dispatch<SetStateAction<number>>,\n\ttoggleSidebar: ({set}: { set?: boolean }) => void\n\ttoggleSettings: ({set}: { set?: boolean }) => void\n\tsetDisplayPlayerRaw: Dispatch<SetStateAction<string>>\n}): void {\n\n\tconst [mouseClick, setMouseClick] = useState(0);\n\n\tconst handleMouseMove = useCallback((e: MouseEvent) => {\n\t\tlet percentX = e.x / window.innerWidth * 100;\n\t\tif (mouseClick) {\n\t\t\tlet prev = (columns.slice(0, mouseClick - 1).reduce((acc, curr) => acc += curr, 0));\n\t\t\tlet sum = prev + columns[mouseClick - 1] + columns[mouseClick];\n\t\t\tlet left = percentX - prev;\n\t\t\tlet right = sum - percentX;\n\t\t\tlet threshold = 2;\n\t\t\tif (left < threshold) {\n\t\t\t\tright += left;\n\t\t\t\tleft = 0;\n\t\t\t\tif (mouseClick === 1) toggleSidebar({set: false});\n\t\t\t\tdispatchEvent('mouseup');\n\t\t\t} else\n\t\t\tif (right < threshold) {\n\t\t\t\tleft += right;\n\t\t\t\tright = 0;\n\t\t\t\tif (mouseClick === columns.length - 1) {\n\t\t\t\t\tsetDisplayPlayerRaw('');\n\t\t\t\t\ttoggleSettings({set: false});\n\t\t\t\t\tdispatchEvent('mouseup');\n\t\t\t\t}\n\t\t\t}\n\t\t\tcolumns[mouseClick - 1] = left\n\t\t\tcolumns[mouseClick] = right;\n\t\t\tsetColumns(columns.slice(0));\n\t\t} else {\n\t\t\tlet threshold = 1;\n\t\t\tlet index = boundaries.findIndex(b => Math.abs(b - percentX) < threshold);\n\t\t\tif (index === 0 && boundaries[0] === 0) index = -1;\n\t\t\telse if (index === boundaries.length - 1 && boundaries[boundaries.length - 1] === 100) index = -1;\n\t\t\tsetResize(index + 1);\n\t\t}\n\t}, [mouseClick, columns, setDisplayPlayerRaw, toggleSettings, setResize, setColumns, boundaries, toggleSidebar]);\n\n\tuseCacheColumns(columns);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('mousemove', handleMouseMove);\n\t\treturn () => document.removeEventListener('mousemove', handleMouseMove);\n\t}, [mouseClick, handleMouseMove]);\n\tuseEffect(() => {\n\t\tif (!resize) return;\n\t\tlet callback = () => setMouseClick(resize);\n\t\tdocument.addEventListener('mousedown', callback);\n\t\treturn () => document.removeEventListener('mousedown', callback);\n\t}, [resize, setMouseClick]);\n\tuseEffect(() => {\n\t\tlet callback = () => setMouseClick(0);\n\t\tdocument.addEventListener('mouseup', callback);\n\t\treturn () => document.removeEventListener('mouseup', callback);\n\t}, [resize, setMouseClick]);\n}\n\nexport default function Tournament(props: TournamentProps): ReactElement {\n\n\tconst [columns, setColumns] = useReducer((state: number[], action: number[]) => {\n\t\treturn action;\n\t}, defaultColumns);\n\tconst [resize, setResize] = useState(0);\n\tconst boundaries = useMemo(() => \tcolumns.reduce((acc, curr) => {\n\t\tacc.push((acc[acc.length - 1] ?? 0) + curr);\n\t\treturn acc;\n\t}, [] as number[]).slice(0, -1), [columns]);\n\n\tuseCacheColumns(columns);\n\n\tconst [displayPlayer, setDisplayPlayerRaw] = useState('');\n    const [crossTable, setCrossTable] = useState(false);\n    const [pasteInput, setPasteInput] = useState(false);\n\tconst [lastRoundOverride, setLastRound] = useState(undefined) as [boolean | undefined, Dispatch<SetStateAction<boolean | undefined>>];\n\tconst [nextRound, toggleNextRound] = useState(false);\n\tconst toggleCrossTable = () => setCrossTable(!crossTable);\n\n\tconst loadColumns = useCallback(async () => {\n        let cols: string = await cookies.get('columns');\n\t\tif (cols) setColumns(cols.split(',').map(nb => Number(nb)));\n    }, [setColumns]);\n\n    useEffect(() => {\n        loadColumns();\n    }, [loadColumns]);\n\n\n\tconst reduceSidebar = useCallback((state: boolean, { set }: { set?: boolean }): boolean => {\n\t\tif (columns[0] === 0) {\n\t\t\tlet _columns = columns.slice(0);\n\t\t\t_columns[0] = defaultColumns[0];\n\t\t\tif (_columns[1] < defaultColumns[0]) _columns = defaultColumns as [number, number, number];\n\t\t\telse _columns[1] = _columns[1] - defaultColumns[0];\n\t\t\tsetColumns(_columns);\n\t\t\treturn true;\n\t\t} else return typeof set === 'boolean' ? set : !state;\n\t}, [columns, setColumns]);\n\n\tconst reduceSettings = useCallback((state: boolean, { set }: { set?: boolean }): boolean => {\n\t\tif (set !== false && boundaries[boundaries.length - 1] === 100) {\n\t\t\tlet _columns = columns.slice(0);\n\t\t\t_columns[_columns.length - 1] = defaultColumns[_columns.length - 1];\n\t\t\tif (_columns[_columns.length - 2] < defaultColumns[_columns.length - 2]) _columns = defaultColumns as [number, number, number];\n\t\t\telse _columns[_columns.length - 2] = _columns[_columns.length - 2] - defaultColumns[_columns.length - 1];\n\t\t\tsetColumns(_columns);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif (!state) setDisplayPlayerRaw('');\n\t\t\treturn typeof set === 'boolean' ? set : !state;\n\t\t};\n\t}, [columns, setDisplayPlayerRaw, boundaries]);\n\t\n\tconst [sidebar, toggleSidebar] = useReducer(reduceSidebar, true);\n\tconst [showSettings, toggleSettings] = useReducer(reduceSettings, true);\n\n\tconst setDisplayPlayer = useCallback((id: string) => {\n\t\tif (columns[0] === 0) {\n\t\t\tlet _columns = columns.slice(0);\n\t\t\t_columns[0] = defaultColumns[0];\n\t\t\tif (_columns[1] < defaultColumns[0]) _columns = defaultColumns as [number, number, number];\n\t\t\telse _columns[1] = _columns[1] - defaultColumns[0];\n\t\t\tsetColumns(_columns);\n\t\t} else if (id && showSettings) toggleSettings({ set: false });\n\t\tsetDisplayPlayerRaw(id);\n\t}, [setColumns, setDisplayPlayerRaw, toggleSettings, columns, showSettings]);\n\n\tconst [playerDictKey, setPlayerDictKey] = useState(Math.random().toString(16).slice(2, 9));\n\n\tconst [status, setStatus] = useState({} as TournamentStatus);\n\tconst [settings, setSettings] = useState({} as TournamentSettings);\n\tconst [rounds, setRounds] = useState([] as Date[]);\n\tconst [players, setPlayers] = useState([] as Player[]);\n\n\tMouseEvents({ columns, boundaries, resize, setColumns, setResize, toggleSidebar, toggleSettings, setDisplayPlayerRaw });\n\n\t/* Fetch Data */\n    \n    const [setDictTimeout, awaitTimeout] = useState(false);\n    const [lastUpdate, setLastUpdate] = useState(Date.now());\n\n\tconst reducePlayerDict = useCallback((state: Map<ID, Player>, action: {\n\t\tid?: ID,\n\t\tplayer?: Player,\n\t\tplayers?: Player[],\n\t\thash?: string\n\t}) => {\n\t\tif (action.id) {\n\t\t\tstate.delete(action.id);\n\t\t\tif (action.id === displayPlayer) setDisplayPlayer('');\n\t\t\treturn state;\n\t\t}\n\t\tlet players: Player[];\n\t\tif (action.players) players = action.players;\n\t\telse players = [action.player];\n        for (let p of players) state.set(p.id, p);\n\t\tsetPlayerDictKey(action.hash || Math.random().toString(16).slice(2, 9));\n\t\treturn state;\n\t}, [setDisplayPlayer, setPlayerDictKey, displayPlayer, lastUpdate])\n\n\tconst [playerDict, setPlayerDict] = useReducer(reducePlayerDict, new Map() as Map<ID, Player>);\n\n\tconst updatePlayerDict = useCallback((force?: boolean): Promise<void> => {\n        if (!force && (Date.now() - lastUpdate < 3000)) {\n            setLastUpdate(Date.now());\n            awaitTimeout(true);\n            return Promise.resolve();\n        }\n        return GET({ url: '/tournament/' + props.id + '/fetchPlayers'})\n            .then((players: Player[]) => {\n                setLastUpdate(Date.now());\n                awaitTimeout(false);\n                setPlayers(players);\n                setPlayerDict({ players });\n            })\n    }, [props.id, setPlayers, setPlayerDictKey, setPlayerDict, lastUpdate]);\n    \n    useEffect(() => {\n        if (!setDictTimeout) return;\n        let x = setTimeout(updatePlayerDict, 5000);\n        return () => clearTimeout(x);\n    }, [setDictTimeout, updatePlayerDict]);\n\n\tconst updateTournamentStatus = useCallback((): Promise<void> => GET({ url: '/tournament/' + props.id + '/getStatus'})\n\t\t.then(setStatus), [props.id, setStatus]);\n\n\tconst updateTournamentSettings = useCallback((): Promise<void> => GET({ url: '/tournament/' + props.id + '/getSettings'})\n\t\t.then(setSettings), [props.id, setSettings]);\n\n\tconst updateSetting = useCallback((k: string, v: any): Promise<void> => POST({\n\t\turl: 'tournament/' + props.id + '/updateSetting',\n\t\tdata: {\n\t\t\t[k]: v\n\t\t}\n\t}).then(updateTournamentSettings), [props.id, updateTournamentSettings]);\n\n\tconst updateRounds = useCallback((): Promise<void> => GET({ url: '/tournament/' + props.id + '/fetchRounds'})\n        .then(setRounds), [props.id, setRounds]);\n        \n\tconst checkIfEnoughPlayers = useCallback(async (): Promise<void> => {\n        toggleNextRound(players.filter(p => p.active !== false).length >= 2);\n    }, [players, toggleNextRound, updatePlayerDict]);\n\t\n\tuseEffect(() => {\n\t\tif (!props.id) return null;\n\t\tupdateRounds();\n\t\tupdateTournamentStatus();\n\t\tupdateTournamentSettings();\n\t\tupdatePlayerDict(true);\n\t}, [props.id, updateRounds, updateTournamentStatus, updateTournamentSettings]);//, updateRounds, updateTournamentStatus, updateTournamentSettings, updatePlayerDict]);\n\n\tif (!props.id) return null;\n\n\tif (crossTable) return (\n\t\t<div className={styles.tournament}>\n\t\t\t<CrossTable\n\t\t\t\tshow={toggleCrossTable}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n\t\t\t\tstatus={status}\n\t\t\t\tplayers={players}\n\t\t\t\tsettings={settings}\n\t\t\t/>\n\t\t\t<Profile\n\t\t\t\tid={props.id}\n\t\t\t\tplayerID={displayPlayer}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tmodifyPlayerDict={(player: Player, hash: string) => setPlayerDict({ player, hash })}\n\t\t\t\tsettings={settings}\n\t\t\t/>\n\t\t</div>\t\t\n\t);\n\n\tif (pasteInput) return (\n\t\t<div className={styles.tournament}>\n\t\t\t<PasteInput\n                closePasteInput={() => setPasteInput(false)}\n                status={status}\n                settings={settings}\n                id={props.id}\n\t\t\t\tupdatePlayerDict={updatePlayerDict}\n\t\t\t/>\n\t\t</div>\t\t\n\t);\n\n\tlet style: CSSProperties = {};\n\tif (resize) style.cursor = 'ew-resize';\n\n\treturn (\n\t\t<div className={styles.tournament} style={{\n\t\t\tgridTemplateColumns: columns.join('% ') + '%',\n\t\t\t...style\n\t\t}}>\n\t\t\t{!sidebar ? null : <Sidebar\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tplayerDictKey={playerDictKey}\n\t\t\t\tupdatePlayerDict={updatePlayerDict}\n\t\t\t\tsetPlayerDict={setPlayerDict}\n\t\t\t\t\n\t\t\t\tsettings={settings}\n\t\t\t\tid={props.id}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n                checkIfEnoughPlayers={checkIfEnoughPlayers}\n                togglePasteInput={() => setPasteInput(true)}\n\t\t\t/>}\n\t\t\t<InfoBar\n\t\t\t\tstatus={status}\n\t\t\t\tsettings={settings}\n\t\t\t\tupdateTournamentStatus={updateTournamentStatus}\n\t\t\t\tround={status.round}\n\t\t\t\ttotalRounds={settings.totalRounds}\n\t\t\t\tcloseTournament={props.closeTournament}\n\t\t\t\ttoggleCrossTable={toggleCrossTable}\n\n\t\t\t\tsetLastRound={setLastRound}\n\t\t\t\tlastRoundOverride={lastRoundOverride}\n\t\t\t\ttriggerError={props.triggerError}\n\t\t\t/>\n\t\t\t<Pairings\n\t\t\t\tstatus={status}\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tupdatePlayerDict={updatePlayerDict}\n\t\t\t\t\n\t\t\t\tsettings={settings}\n\n\t\t\t\tid={props.id}\n\t\t\t\tcanTriggerNextRound={nextRound}\n\t\t\t\ttoggleSidebar={() => toggleSidebar({})}\n\t\t\t\ttoggleSettings={() => toggleSettings({})}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n\t\t\t\tupdateRound={updateTournamentStatus}\n\t\t\t\tsetLastRound={setLastRound}\n\t\t\t\tlastRoundOverride={lastRoundOverride}\n\t\t\t\ttoggleCrossTable={toggleCrossTable}\n\t\t\t\tplayerDictKey={playerDictKey}\n\t\t\t/>\n\t\t\t<Profile\n\t\t\t\tid={props.id}\n\t\t\t\tplayerID={displayPlayer}\n\t\t\t\tsetDisplayPlayer={setDisplayPlayer}\n\t\t\t\tplayerDict={playerDict}\n\t\t\t\tmodifyPlayerDict={(player: Player, hash: string) => setPlayerDict({ player, hash })}\n\t\t\t\tsettings={settings}\n\t\t\t\tplayerDictKey={playerDictKey}\n\t\t\t/>\n\t\t\t{!showSettings ? null : <Settings\n\t\t\t\tupdateTournamentSettings={updateTournamentSettings}\n\t\t\t\tupdateSetting={updateSetting}\n\t\t\t\tstatus={status}\n\t\t\t\tsettings={settings}\n\t\t\t\ttoggleSettings={() => toggleSettings({})}\n\t\t\t\tsetLastRound={setLastRound}\n\t\t\t\ttriggerError={props.triggerError}\n\t\t\t\tplayers={players}\n\t\t\t\tupdateRounds={updateRounds}\n\t\t\t\trounds={rounds}\n\t\t\t/>}\n\t\t</div>\n\t);\n\n}","import React, { CSSProperties, ReactElement } from 'react';\n\nexport function Circle(props: {\n\tradius: string | number\n\tclassName?: string\n\tid?: string\n\tstyle?: CSSProperties\n\tcontent?: string | ReactElement\n\tonClick?: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n\tonMouseEnter?: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n\tonMouseLeave?: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n}) {\n\t\n\treturn <span\n\t\tid={props.id}\n\t\tclassName={props.className}\n\t\tstyle={{\n\t\t\theight: props.radius,\n\t\t\twidth: props.radius,\n\t\t\tlineHeight: props.radius,\n\t\t\tborderRadius: '50%',\n\t\t\tdisplay: 'inline-block',\n\t\t\tcursor: 'default',\n\t\t\t...props.style\n\t\t}}\n\t\tonClick={props.onClick}\n\t\tonMouseEnter={props.onMouseEnter}\n\t\t//onMouseLeave={props.onMouseLeave}\n\t>{props.content}</span>;\n\n}","import React, { ReactElement, useEffect, useCallback, useState, useMemo, useRef } from 'react';\n\nimport appStyles from '../css/app.module.css';\nimport profileStyles from '../css/profile.module.css';\nimport styles from '../css/menu.module.css';\n\nimport { NumberDictionary, StringDictionary, NavData, User } from '../interfaces';\nimport { Crown } from './Login';\nimport { GET, POST, cookies } from '../utils/requests';\nimport { AxiosError } from 'axios';\nimport { Circle } from '../components/Vectors';\nimport { calculateHypotenuse, useStateWithLabel } from '../utils/prototype';\nimport { defaultUserSettings } from '../assets/settings';\n\nimport { IoMdArrowRoundBack, IoIosSettings, IoMdClose, IoIosCloseCircle } from 'react-icons/io';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport { TiThMenu } from 'react-icons/ti';\nimport { MdRefresh } from 'react-icons/md';\nimport { FaEarlybirds, FaPlusCircle } from 'react-icons/fa';\n\nfunction getElementCentre(elem: HTMLElement): {x: number, y: number} {\n    var rect = elem.getBoundingClientRect();\n    return {\n        x: (rect.left + rect.right) / 2,\n        y: (rect.top + rect.bottom) / 2 - 30 //on account of parent being 30px from top\n    };\n}\n\nfunction renderLineBetween(linesMounted: boolean, start: {x: number, y: number}, end: {x: number, y: number}, width: number): ReactElement {\n    let diff = {x: Math.abs(end.x - start.x), y: Math.abs(end.y - start.y)};\n    let length = calculateHypotenuse(end.x - start.x, end.y - start.y);\n\n    let sign = Math.sign((end.x - start.x) * (end.y - start.y));\n    let angle = Math.atan(diff.y / diff.x) * 180 / Math.PI;\n    return <div key={['line', end.x, end.y].join('.')} className={styles.line} style={{\n        width: length + 'px',\n        height: width + 'px',\n        backgroundColor: 'white',\n        position: 'absolute',\n        left: !linesMounted ? start.x - (diff.x / 2) : ((start.x + end.x) / 2) - (diff.x / 2),\n        top: !linesMounted ? start.y : ((start.y + end.y) / 2),\n        transform: `rotate(${angle * sign}deg) scaleX(${linesMounted ? 1 : 0}) scaleY(1)`,\n        opacity: !linesMounted ? 0 : 1,\n        transition: 'transform 3s, left 3s, top 3s, opacity 3s'\n    }}/>;\n}\n\ninterface MenuProps {\n\tsessionID: string\n\tendSession: () => void\n\tsetTournamentID: (id: string) => void\n\ttriggerConfirm: (message: string, resolve: () => void, reject: () => void) => void\n}\n\nexport default function Menu(props: MenuProps): ReactElement {\n\n    const [tournamentDict, setTournamentDict] = useStateWithLabel({} as StringDictionary, 'tournamentDict');\n    const [loading, setLoading] = useStateWithLabel(true, 'loading');\n    const [loadingOverride, overrideLoading] = useStateWithLabel(false, 'loadingOverride');\n    const [linesMounted, mountLines] = useStateWithLabel(false, 'linesMounted');\n    const [linesAdjusted, adjustLines] = useStateWithLabel(false, 'adjustedLines');\n    const [selected, select] = useStateWithLabel('', 'selected');\n\n\tconst updateTournamentDict = useCallback((): Promise<StringDictionary> => {\n\t\treturn GET({ url: '/tournaments' })\n\t\t\t.then((tournamentDict: StringDictionary) => {\n\t\t\t\tsetTournamentDict(tournamentDict);\n\t\t\t\treturn tournamentDict;\n\t\t\t})\n\t\t\t.catch((e: Error) => {\n\t\t\t\tconsole.error(e);\n\t\t\t\tprops.endSession();\n\t\t\t\treturn {} as StringDictionary;\n\t\t\t});\n    }, [setTournamentDict, props.endSession]);\n\n\tconst validateTournament = useCallback((tournamentID: string): Promise<void> => {\n\t\tif (!tournamentID) return Promise.reject();\n\t\tif (!Object.values(tournamentDict).length) {\n\t\t\treturn updateTournamentDict()\n\t\t\t\t.then((tournamentDict: StringDictionary) => {\n\t\t\t\t\tif (tournamentDict[tournamentID] === undefined) throw new Error();\n\t\t\t\t\treturn;\n\t\t\t\t});\n\t\t} else return tournamentID in tournamentDict ? Promise.resolve() : Promise.reject();\n\t}, [tournamentDict, updateTournamentDict]);\n\n\tconst setTournamentID = useCallback((tournamentID: string): Promise<void> => {\n\t\treturn validateTournament(tournamentID)\n\t\t\t.then(() => {\n\t\t\t\tcookies.set('tournamentID', tournamentID, { path: '/' }).catch(console.error);\n\t\t\t\tprops.setTournamentID(tournamentID);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tcookies.remove('tournamentID').catch(console.error);\n\t\t\t\tprops.setTournamentID('');\n\t\t\t});\n\t}, [validateTournament, props.setTournamentID]);\n\n\tconst createNewTournament = useCallback(async (): Promise<void> => {\n\t\ttry {\n\t\t\tlet id = await POST({ url: '/initialise' });\n\t\t\tif (!id) throw new Error();\n\t\t\tprops.setTournamentID(id);\n\t\t\tawait updateTournamentDict();\n\t\t} catch (error) {\n\t\t\tlet e = error as AxiosError;\n\t\t\tif (!e.response || e.response.status === 401) props.endSession();\n\t\t}\n\t}, [props.setTournamentID, updateTournamentDict, props.endSession]);\n\n\tconst removeID = useCallback(async (id?: string): Promise<void> => {\n\t\tif (!id) {\n\t\t\tawait POST({ url: '/closeAuthorization/all' });\n\t\t\tsetTournamentDict({});\n\t\t} else {\n\t\t\tlet dict = Object.assign({}, tournamentDict);\n\t\t\tdelete dict[id];\n\t\t\tawait POST({ url: '/closeAuthorization/' + id });\n\t\t\tsetTournamentDict(dict);\t\n\t\t}\n    }, [tournamentDict, setTournamentDict]);\n\n    const [lines, setLines] = useState([] as ReactElement[]);\n\tconst logoRef = useRef() as React.RefObject<HTMLDivElement>\n\tconst drawLines = useCallback(() => {\n        if (!logoRef.current) return;\n\t\tlet startCoords = getElementCentre(logoRef.current);\n\t\tlet circles = Array.from(document.getElementsByClassName(styles.dot)) as HTMLElement[];\n\t\tlet _lines = [] as ReactElement[];\n\t\tfor (let c of circles) {\n            if (c.style.opacity === '0') continue;\n\t\t\t_lines.push(renderLineBetween(linesMounted, startCoords, getElementCentre(c), 2));\n        }\n        setLines(_lines);\n    }, [logoRef, renderLineBetween, linesMounted]);\n    useEffect(() => {\n        drawLines();\n        mountLines(true);\n        let x = setTimeout(() => adjustLines(true), 3000);\n        return () => clearTimeout(x);\n    }, [drawLines, adjustLines, mountLines, selected]);\n\n\tconst navData = useMemo((): NavData => {\n\t\treturn {\n\t\t\tcreate: {\n\t\t\t\tonClick: createNewTournament,\n\t\t\t\tcontent: <AiOutlinePlus />,\n\t\t\t\tdescription: 'Create new Swiss tournament'\n\t\t\t},\n\t\t\troundRobin: {\n\t\t\t\tonClick: () => {},\n\t\t\t\tcontent: <FaEarlybirds />,\n\t\t\t\tdescription: 'Create new Round-Robin tournament'\n\t\t\t},\n\t\t\tsettings: {\n\t\t\t\tonClick: () => {},\n\t\t\t\tcontent: <IoIosSettings />,\n\t\t\t\tdescription: 'User settings'\n\t\t\t},\n\t\t\tload: {\n\t\t\t\tonClick: updateTournamentDict,\n\t\t\t\tcontent: <TiThMenu />,\n\t\t\t\tdescription: 'Load previous tournaments'\n\t\t\t},\n\t\t\tback: {\n\t\t\t\tonClick: props.endSession,\n\t\t\t\tcontent: <IoMdArrowRoundBack />,\n\t\t\t\tdescription: 'Exit to login'\n\t\t\t},\n\t\t\tclose: {\n\t\t\t\tonClick: () => props.triggerConfirm('Delete all saved tournaments?', removeID, () => {}),\n\t\t\t\tnoSet: true,\n\t\t\t\tcontent: <IoMdClose />,\n\t\t\t\tdescription: 'Close all tournaments',\n\t\t\t\tstyle: {\t\t\t\t\t\n\t\t\t\t\tborder: '8px solid darkred'\n\t\t\t\t}\n\t\t\t},\n\t\t\trefresh: {\n\t\t\t\tonClick: updateTournamentDict,\n\t\t\t\tnoSet: true,\n\t\t\t\tcontent: <MdRefresh />,\n\t\t\t\tdescription: 'Refresh tournament list',\n\t\t\t\tstyle: {\t\t\t\t\t\n\t\t\t\t\tborder: '8px solid darkblue'\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}, [createNewTournament, updateTournamentDict, props.endSession, props.triggerConfirm, removeID, select]);\n\n\tconst handleNavData = useCallback((keys: string[], side: 'left' | 'right'): ReactElement[] => {\n\t\tlet data = keys.reduce((acc: NavData, curr: string) => {\n\t\t\tif (!(curr in navData)) return acc;\n\t\t\tacc[curr] = navData[curr];\n\t\t\treturn acc;\n\t\t}, {});\n\t\treturn Object.entries(data).reduce((acc, [id, meta], i) => {\n\t\t\tlet arr = [\n                <div\n                    className={[styles.dotDescription, selected === id ? styles.descriptionSelected : ''].join(' ')}\n                    key={['navData', side, 'description', i].join('.')}\n                >\n\t\t\t\t\t{meta.description}\n\t\t\t\t</div>,\n\t\t\t\t<Circle\n\t\t\t\t\tkey={['navData', side, 'dot', i].join('.')}\n\t\t\t\t\tradius='50px'\n\t\t\t\t\tclassName={[styles.dot, !linesAdjusted ? styles.dotUnloaded : ''].join(' ')}\n\t\t\t\t\tid={id}\n\t\t\t\t\tcontent={meta.content}\n\t\t\t\t\tonClick={async (e) => {\t\n\t\t\t\t\t\tif (selected === id) select('');\n\t\t\t\t\t\telse {\t\t\t\t\n\t\t\t\t\t\t\tawait meta.onClick(e);\n\t\t\t\t\t\t\tif (!meta.noSet) select(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={meta.style}\n\t\t\t\t/>\n\t\t\t];\n\t\t\tif (side === 'right') arr = arr.reverse();\n            acc.push(<div\n                className={[styles.dotContainer, linesAdjusted ? styles.dotContainerLoaded : ''].join(' ')}\n                key={['NavData', side, 'div', i].join('i')}\n            >\n\t\t\t\t{arr}\n\t\t\t</div>);\n\t\t\treturn acc;\n\t\t}, [] as ReactElement[]);\n    }, [navData, linesAdjusted, selected, select]);\n\n    const loadTournamentDict = useCallback(async () => {\n        let tournamentID = await cookies.get('tournamentID');\n\t\tif (tournamentID) setTournamentID(tournamentID);\n    }, [setTournamentID]);\n\n    useEffect(() => {\n        loadTournamentDict();\n    }, [loadTournamentDict]);\n    useEffect(() => {\n        window.addEventListener('resize', drawLines);\n        let x = setTimeout(() => setLoading(false), 3000);\n        return () => {\n            window.removeEventListener('resize', drawLines);\n            clearTimeout(x);\n        };\n    }, [drawLines, setLoading]);\n\n    const foundNavData = useMemo((): ReactElement[] => {\n        switch (selected) {\n            case 'load':\n                return handleNavData(['refresh', 'close', 'load'], 'left');\n            case 'settings':\n                return handleNavData(['create', 'settings', 'load'], 'left');\n            default:\n                return handleNavData(['create', 'settings', 'load'], 'left');\n        }\n    }, [selected, handleNavData]);\n\n    const foundProfile = useMemo(() => {\n        switch (selected) {\n            case 'load':\n                return <Listing\n                    setTournamentID={setTournamentID}\n                    createNewTournament={createNewTournament}\n                    removeID={removeID}\n                    updateTournamentSettings={updateTournamentDict}\n                    tournamentDict={tournamentDict}\n                    closeListing={() => select('')}\n                    triggerConfirm={props.triggerConfirm}\n                />;\n            case 'settings':\n                return <UserSettings\n                    updateTournamentSettings={() => Promise.resolve()}\n                    updateSetting={() => Promise.resolve()}\n                    closeListing={() => select('')}\n                />;\n            default:\n                return handleNavData(['back'], 'right');\n            }\n    }, [select, selected, setTournamentID, createNewTournament, removeID, updateTournamentDict, tournamentDict, props.triggerConfirm, handleNavData]);\n\n    return (\n        <div className={appStyles.canvas}>\n            {lines}\n            <div className={[appStyles.column, styles.leftColumn].join(' ')}>\n                {foundNavData}\n            </div>\n            <div ref={logoRef} className={[appStyles.column, styles.column].join(' ')}>\n                <Crown setLoading={(l: boolean) => overrideLoading(l)} loading={loading || loadingOverride} classNames={{\n                    logo: styles.logo\n                }}/>\n            </div>\n            <div className={[appStyles.column, styles.rightColumn].join(' ')}>\n                {foundProfile}\n            </div>\n        </div>\n    );\n\n}\n\ninterface ListingProps {\n\tsetTournamentID: (id: string) => void\n\tcreateNewTournament: () => Promise<void>\n\tremoveID: (id: string) => void\n\tcloseListing: () => void\n\tupdateTournamentSettings: () => void\n\ttournamentDict: StringDictionary\n\ttriggerConfirm: (message: string, resolve: () => void, reject: () => void) => void\n}\n\nexport function Listing(props: ListingProps) {\n\n    const [height, setHeight] = useState(0);\n\n\tconst generateListing = useCallback((tournamentDict: StringDictionary) => {\n\t\tlet titles = Object.keys(tournamentDict).reduce((acc: NumberDictionary, curr: string) => {\n\t\t\tlet title = props.tournamentDict[curr];\n\t\t\tif (!title) return acc;\n\t\t\tif (!acc[title]) acc[title] = 0;\n\t\t\tacc[title]++;\n\t\t\treturn acc;\n\t\t}, {});\n\t\tlet buttons = Object.entries(tournamentDict).map(([tournamentID, name], i: number) => {\n\t\t\tlet displayName = titles[name] === undefined ? tournamentID : titles[name] === 1 ? name : name + '\\n' + tournamentID;\n\t\t\treturn (\n\t\t\t\t<div className={[profileStyles.row, styles.row].join(' ')} key={['row', i].join('.')}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={[styles.clickButton, 'fieldBox'].join(' ')}\t\t\t\t\t\t\n\t\t\t\t\t\tonClick={() => props.setTournamentID(tournamentID)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{displayName}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={[styles.clickButton, styles.close, 'fieldBox'].join(' ')} onClick={() => {\n\t\t\t\t\t\tprops.triggerConfirm('Delete tournament \\'' + displayName + '\\'?\\nPlease note this action cannot be undone.', () => props.removeID(tournamentID), () => {});\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<IoIosCloseCircle />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}).filter(elem => elem);\n\t\treturn buttons;\n\t}, [props.tournamentDict, props.setTournamentID, props.triggerConfirm, props.removeID]);\n\n    const listing = React.useRef() as React.RefObject<HTMLDivElement>\n    \n    useEffect(() => {\n        let x = setTimeout(() => {\n            if (!listing.current) return;\n            setHeight(listing.current.getBoundingClientRect().height);\n        }, 250);\n        return () => clearTimeout(x);\n    }, [listing, props.tournamentDict, generateListing, setHeight]);\n\n    return (\n        <div className={styles.sidebar}>\n            <div className={[profileStyles.profile, styles.profile].join(' ')}>\t\t\t\t\n                <div className='topBanner'>\n                    Load Tournament\n                </div>\n                <div className={styles.listWrapper} style={{height}}>\n                    <div ref={listing} className={styles.listing}>\n                        {generateListing(props.tournamentDict)}\n                    </div>\n                </div>\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                <div onClick={props.createNewTournament} className='button'>\n                    <FaPlusCircle />\n                </div>\n                <div onClick={props.closeListing} className='button'>\n                    <IoMdArrowRoundBack />\n                </div>\n            </div>\n        </div>\n    );\n}\n\ninterface UserSettingProps {\n\tupdateTournamentSettings: () => Promise<void>\n\tupdateSetting: (k: string, v: any) => Promise<void>\n    closeListing: () => void\n}\n\nexport function UserSettings (props: UserSettingProps) {\n\n    const [height, setHeight] = useState(0);\n    const [user, setUser] = useStateWithLabel({} as User, 'user');\n\tconst updateTournamentSettings = useCallback((): Promise<void> => GET({ url: '/profile'})\n        .then(setUser), [setUser]);\n\n    useEffect(() => {\n        updateTournamentSettings();\n    }, [updateTournamentSettings]);\n\n\n    const listing = React.useRef() as React.RefObject<HTMLDivElement>\n    \n    useEffect(() => {\n        let x = setTimeout(() => {\n            if (!listing.current) return;\n            setHeight(listing.current.getBoundingClientRect().height);\n        }, 250);\n        return () => clearTimeout(x);\n    }, [listing, setHeight]);\n\n\tconst renderSettings = useMemo((): ReactElement[] => {\n\t\treturn Object.entries(defaultUserSettings).map(([k, def], i): ReactElement => {\n            let v = user[k] || def.defaultValue;\n            if (def.value) v = def.value(user);\n            if (def.type === 'number') v = Number(v);\n            if (def.validate) {\n                if (!def.validate(v)) return null;\n            }\n            let content = v;\n            if (def.convert) content = def.convert(v) as string;\n\t\t\tlet displayContent = typeof content !== 'undefined' ? content.toString() : '\\u200b';\n\t\t\treturn (\n\t\t\t\t<div className={profileStyles.row} key={['row', i].join('.')}>\n\t\t\t\t\t<div className={['fieldBox'].join(' ')}>{def.name + ':'}</div>\n                    <div\n                        style={{\n                            cursor: def.type === 'link' ? 'copy' : 'default'\n                        }}\n                        className={['fieldBox', k === 'licensed' ? styles['license' + v.toString()] : ''].join(' ')}\n                        onClick={def.type !== 'link' ? null : () => navigator.clipboard.writeText(displayContent)}\n                    >\n                        {displayContent}\n                    </div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}, [user]);\n\n    return (\n        <div className={styles.sidebar}>\n            <div className={[profileStyles.profile, styles.profile].join(' ')}>\t\n                <div className='topBanner'>\n                    Settings\n                </div>\n                <div className={styles.listWrapper} style={{height}}>\n                    <div ref={listing} className={styles.listing}>\n                        {renderSettings}\n                    </div>\n                </div>\n            </div>\n            <div className={['bottomBanner', styles.bottomBanner].join(' ')}>\n                <div onClick={props.closeListing} className='button'>\n                    <IoMdArrowRoundBack />\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useRef, useEffect } from 'react';\nimport styles from '../css/alert.module.css';\nimport { IoMdClose, IoMdCheckbox } from 'react-icons/io';\n\nexport interface AlertProps {\n\tmessage: string\n\ttitle?: string\n\tconfirm?: boolean\n\tresolve?: () => void\n\treject?: () => void\n\tclose: () => void\n}\n\nexport default function Alert (props: AlertProps) {\n\t\n    const message = typeof props.message === 'string' ? props.message : JSON.stringify(props.message, null, 4);\n\n    const alertBox = useRef(null as HTMLButtonElement);\n    useEffect(() => {\n        alertBox.current.focus();\n    }, [alertBox]);\n\n    return (\n        <div className={styles.alertBox}>\n            {props.title ? <div>{props.title}</div> : null}\n            <div className={[styles.textBox].join(' ')}>\n                {message}\n            </div>\n            <div className={styles.response}>\n                {\n                    !props.confirm ?\n                        <button className={[styles.NO, 'button'].join(' ')} onClick={props.close} ref={alertBox}>\n                            OK\n                        </button> :\n                        <>\n                            <button className={[styles.NO, 'button'].join(' ')} ref={alertBox} onClick={() => {\n                                props.reject();\n                                props.close();\n                            }}>\n                                <IoMdClose />\n                            </button>\n                            <button className={[styles.YES, 'button'].join(' ')} onClick={() => {\n                                props.resolve();\n                                props.close();\n                            }}>\n                                <IoMdCheckbox />\n                            </button>\n                        </>\n                }\n            </div>\n        </div>\n    );\n\n}","import React, { ReactElement, useState, useReducer, useCallback, useEffect, useMemo } from 'react';\nimport './App.css';\nimport Login from './tournament/Login';\nimport StatusBar from './StatusBar';\nimport Tournament from './Tournament';\nimport { POST, cookies, setErrorCallback } from './utils/requests';\n//import { isElectron, isDev, isProd } from './utils/electron';\n\nimport Menu from './tournament/Menu';\nimport Alert from './tournament/Alert';\nimport { useStateWithLabel } from './utils/prototype';\n\ninterface AlertAction {\n\tmessage: string\n\ttitle?: string\n\terror?: boolean\n\tconfirm?: boolean\n\tresolve?: () => void\n\treject?: () => void\n\tclose?: () => void\n}\n\nexport default function App(): ReactElement {\n\n\tconst [sessionID, setSession] = useState('');\n\tconst [tournamentID, setTournament] = useState('');\n\tconst [mode, setMode] = useStateWithLabel('login' as 'login' | 'menu' | 'tournament' | 'grid', 'mode');\n\tconst [alertBox, setAlertBox] = useReducer((state: AlertAction, action: AlertAction) => {\n\t\treturn Object.assign({}, state, action);\n\t}, { message: '', title: '', error: true, confirm: false });\n\n\tconst closeAlertBox = useCallback((): void => setAlertBox({ message: '' }), [setAlertBox]);\n\tconst triggerConfirm = useCallback((message: string, resolve: () => void, reject: () => void) => setAlertBox({\n\t\tmessage,\n\t\ttitle: 'CONFIRM ACTION',\n\t\tconfirm: true,\n\t\tresolve,\n\t\treject\n\t}), [setAlertBox]);\n\tconst triggerError = useCallback((message: string) => setAlertBox({message, title: 'ERROR', confirm: false }), [setAlertBox]);\n\n\tconst setTournamentID = useCallback((tournamentID: string): void => {\n\t\tsetTournament(tournamentID);\n\t\tsetMode(tournamentID ? 'tournament' : 'menu');\n\t}, [setTournament, setMode]);\n\n\tconst hasLoggedIn = useCallback(async (sessionID: string): Promise<void> => {\n\t\tawait cookies.set('sessionID', sessionID, { path: '/' });\n\t\tsetSession(sessionID);\n\t\tsetMode('menu');\n\t}, [setSession, setMode]);\n\n\tconst closeTournament = useCallback(async (): Promise<void> => {\n\t\tawait cookies.set('tournamentID', '', { path: '/' });\n\t\tsetMode('menu');\n\t\tsetTournament('');\n\t}, [setTournament, setMode]);\n\n\tconst endSession = useCallback(async (): Promise<void> => {\n\t\ttry {\n\t\t\tawait cookies.set('sessionID', '', { path: '/' });\n\t\t\tawait POST({ url: '/endSession' });\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t} finally {\n\t\t\tsetSession('');\n\t\t\tsetMode('login');\n\t\t}\n\t}, [setSession, setMode]);\n\t\n\tuseEffect(() => {\n\t\tsetErrorCallback((errorMessage: string) => triggerError(errorMessage));\n\t\treturn () => setErrorCallback(() => {});\n\t}, [triggerError]);\n\n\tconst pageLoad = useCallback(async () => {\n\t\tlet sessionID = await cookies.get('sessionID');\n\t\tif (!sessionID) return;\n\t\tsetSession(sessionID);\n\t\tsetMode('menu');\n\t}, [setSession, setMode])\n\n\tuseEffect(() => {\n\t\tpageLoad();\n\t}, [pageLoad]);\n\n\tconst Mode: ReactElement = useMemo(() => {\n\t\tswitch (mode) {\n\t\t\tcase 'login': {\n\t\t\t\treturn <Login login={hasLoggedIn}/>;\n\t\t\t}\n\t\t\tcase 'menu': {\n\t\t\t\treturn <Menu\n\t\t\t\t\tsessionID={sessionID}\n\t\t\t\t\tendSession={endSession}\n\t\t\t\t\tsetTournamentID={setTournamentID}\n\t\t\t\t\ttriggerConfirm={triggerConfirm}\n\t\t\t\t/>;\n\t\t\t}\n\t\t\tcase 'tournament': {\n\t\t\t\treturn <Tournament\n\t\t\t\t\tid={tournamentID}\n\t\t\t\t\tcloseTournament={closeTournament}\n\t\t\t\t\ttriggerError={triggerError}\n\t\t\t\t/>;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tconsole.error('invalid mode');\n\t\t\t\tsetMode('login');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t}\n\t}, [mode, hasLoggedIn, sessionID, endSession, setTournamentID, triggerConfirm, tournamentID, closeTournament, triggerError, setMode])\n\n\treturn (\n\t\t<>\n\t\t\t<StatusBar/>\n\t\t\t<div className='stage' style={{\n\t\t\t\tbackgroundImage: `url(${process.env.PUBLIC_URL}/images/leaves-texture.png)`\n\t\t\t}}>\n\t\t\t\t{Mode}\n\t\t\t\t{alertBox.message && alertBox.message.length > 10 ? <Alert\n\t\t\t\t\t{...alertBox}\n\t\t\t\t\tclose={closeAlertBox}\n\t\t\t\t/> : null}\n\t\t\t</div>\n\t\t</>\n\t);\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}